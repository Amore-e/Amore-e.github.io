<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Hexo • Posts by &#34;java&#34; category</title>
        <link>http://example.com</link>
        <description></description>
        <language>en</language>
        <pubDate>Thu, 15 Jul 2021 18:23:23 +0800</pubDate>
        <lastBuildDate>Thu, 15 Jul 2021 18:23:23 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">http://example.com/2021/07/15/computer-science/java/Java-%E5%88%9D%E9%81%87/</guid>
            <title>Java-初遇</title>
            <link>http://example.com/2021/07/15/computer-science/java/Java-%E5%88%9D%E9%81%87/</link>
            <pubDate>Thu, 15 Jul 2021 18:23:23 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;font-color7b68eejava-发展历程font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejava-发展历程font&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;Java 发展历程&lt;/font&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1995 年， &lt;code&gt;Java 语言诞生&lt;/code&gt; ，由  &lt;code&gt;Sun&lt;/code&gt;  公司推出；&lt;/li&gt;
&lt;li&gt;2004 年，发布  &lt;code&gt;J2SE 1.5&lt;/code&gt;  ，成为 Java 语言发展史上重要版本。&lt;/li&gt;
&lt;li&gt;2009 年，Sun 公司被  &lt;code&gt;Oracle&lt;/code&gt;  公司收购。&lt;/li&gt;
&lt;li&gt;2014 年，发布  &lt;code&gt;JDK 8.0&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;2018 年，发布 JDK 11.0 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;font-color7b68eejava-体系font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejava-体系font&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;Java 体系&lt;/font&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JavaSE&lt;/code&gt; ，Java 的基础和核心。允许开发和部署在桌面、服务器、嵌入式环境和实时环境中使用的 Java 应用程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JavaEE&lt;/code&gt; ， Java 企业版。多用于 Web 系统的服务端开发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JavaME&lt;/code&gt; ， Java 小型版。可以用于嵌入式设备的 Java 程序开发。可以用于移动端的开发（不同于 Android 开发）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/WnouzF&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/15/WnouzF.png&#34; alt=&#34;WnouzF.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;font-color7b68eejava-特性和优势font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejava-特性和优势font&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;Java 特性和优势&lt;/font&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;跨平台性（可移植性）&lt;/code&gt; ：跨平台性是 Java 语言的核心优势。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;面向对象&lt;/code&gt; ： Java 是一门完全面向对象的语言。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;面向对象和面向过程的区别&lt;/code&gt; ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;面向对象具有三大特征：封装性、继承性和多态性，而面向过程没有继承性和多态性，并且面向过程的封装只是封装功能，而面向对象可以封装数据和功能。所以面向对象优势更明显。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个经典的比喻：面向对象是盖浇饭、面向过程是蛋炒饭。&lt;br&gt;
盖浇饭的好处就是 “菜”“饭” 分离，从而提高了制作盖浇饭的灵活性。饭不满意就换饭，菜不满意换菜。用软件工程的专业术语就是 “可维护性” 比较好，“饭” 和 “菜” 的耦合度比较低。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;健壮性&lt;/code&gt; ：归功于垃圾回收机制（GC）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高能性： &lt;code&gt;即时编译技术&lt;/code&gt; 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;即时编译技术&lt;/code&gt; ：JVM 可判断某段字节码其是否属于 &lt;code&gt;使用频率较高&lt;/code&gt; 的热点代码。如果是，就会将字节码文件转换出的本地机器码保存，以便下次直接执行机器码文件。这使得 Java 程序的执行效率得到很大的提高。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全性：Java 的 &lt;code&gt;存储分配模型&lt;/code&gt; 是它防御恶意代码的要方法之一。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简单性：Java 相较 C++，去掉了一些一般程序员很少使用的特征。例如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java 不支持&lt;font color=&#34;red&#34;&gt;go to&lt;/font&gt;语句，代之以提供 break 和 continue 语句以及异常处理。&lt;/li&gt;
&lt;li&gt;Java 还剔除了 C++ 的操作符过载&lt;font color=&#34;red&#34;&gt;(overload)&lt;/font&gt;和多继承特征，并且不使用主文件，免去了预处理程序。&lt;/li&gt;
&lt;li&gt;因为 Java 没有结构，数组和串都是对象，所以不需要&lt;font color=&#34;red&#34;&gt;指针&lt;/font&gt;。Java 能够自动处理对象的引用和间接引用，实现自动的无用单元收集。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分布式：Java 设计成支持在网络上应用，它是分布式语言。网络变成软件应用的 &lt;code&gt;分布运载工具&lt;/code&gt; 。Java 程序只要编写一次，就可到处运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多线程性&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;font-color7b68eejava-两种核心机制font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejava-两种核心机制font&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;Java 两种核心机制&lt;/font&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JVM（Java虚拟机）&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同平台，JVM 不同；&lt;/li&gt;
&lt;li&gt;一次编译，出出运行；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;垃圾回收机制（GC）&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C 语言中，是由程序员负责的。&lt;/li&gt;
&lt;li&gt;Java 中由系统级的线程跟踪存储空间的分配情况，当 JVM 空闲时，检查并释放可以被释放的空间。&lt;/li&gt;
&lt;li&gt;这个过程是自动的。程序员无法精确控制和干预。&lt;/li&gt;
&lt;li&gt;程序仍然会出现内存泄漏和内存溢出的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;font-color7b68eejdk-jre-jvmfont&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejdk-jre-jvmfont&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;JDK、JRE、JVM&lt;/font&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JVM &lt;/code&gt; &lt;br&gt;
JVM（Java Virtual Machine，Java 虚拟机）是整个 Java 实现跨平台的最核心的部分，负责解释并执行字节码文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JRE&lt;/code&gt; &lt;br&gt;
JRE（Java Runtime Environment，Java 运行环境）&lt;br&gt;
 &lt;code&gt;JRE = JVM + 核心API&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JDK&lt;/code&gt; &lt;br&gt;
JDK（Java Development Kit，Java 开发工具包），是整个 java 的核心。&lt;br&gt;
包括编译工具 &lt;code&gt;javac&lt;/code&gt; 、执行程序 &lt;code&gt;java&lt;/code&gt; 、文档工具 &lt;code&gt;javadoc&lt;/code&gt;  和反编译工具 &lt;code&gt;javap&lt;/code&gt;  等使用工具。&lt;br&gt;
 &lt;code&gt;JDK = JRE + java开发工具&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/WnowsH&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/15/WnowsH.png&#34; alt=&#34;WnowsH.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;font-color7b68eejava-程序工作原理font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejava-程序工作原理font&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;Java 程序工作原理&lt;/font&gt;&lt;/h1&gt;
&lt;p&gt; &lt;br&gt;
java 程序执行过程，大致分为两步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过编译工具 &lt;code&gt;javac&lt;/code&gt;  将源码文件（.java）转换成字节码（.class）。&lt;/li&gt;
&lt;li&gt;通过 &lt;code&gt;JVM&lt;/code&gt;  将字节码解释为机器码，进而在具体的系统平台上执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;源码——&amp;gt;字节码&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;词汇和语法分析&lt;/code&gt; ：分析源码的执行逻辑，并将其绘制成一个抽象的语法树。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;填写符号表&lt;/code&gt; ：复杂的程序之间会相互引用，此阶段就会对这些引用关系进行一些预处理工作。（理解：用一些符号来表示各个程序之间的关系。）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;注释处理&lt;/code&gt; ：对注释进行分析和归类。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;生成字节码&lt;/code&gt; ：根据前三个阶段的结果，最终生成字节码文件。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://imgtu.com/i/Wnwran&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/15/Wnwran.png&#34; alt=&#34;Wnwran.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;字节码的解释过程&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;    java 字节码文件先后经过 &lt;code&gt;类加载器&lt;/code&gt; 、 &lt;code&gt;字节码校验器&lt;/code&gt; 、 &lt;code&gt;解释器&lt;/code&gt; 的处理后，最终在擦做系统平台上运行。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/Wnws5q&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/15/Wnws5q.png&#34; alt=&#34;Wnws5q.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;类装载器&lt;/code&gt; ：其主要功能是为执行程序寻找和装载所需要的类（把字节码文件装到 java 虚拟机中。）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;字节码校验器&lt;/code&gt; ：其功能是对字节码文件进行校验，保证代码的 &lt;code&gt;安全性&lt;/code&gt; 。负责测试代码段落格式并进行检查，检查伪造指针、违反对象访问权限或是试图改变对象类型的非法代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;解释器&lt;/code&gt; ：具体的平台并不认识字节码文件，最终起作用的还是这个最重要的解释器，它负责将字节码文件 &lt;code&gt;翻译&lt;/code&gt; 成所在平台的能识别的东西。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://example.com/2021/07/15/computer-science/java/Java-HelloWorld/</guid>
            <title>Java-HelloWorld</title>
            <link>http://example.com/2021/07/15/computer-science/java/Java-HelloWorld/</link>
            <pubDate>Thu, 15 Jul 2021 18:23:23 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;font-color7b68eehelloworldfont&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eehelloworldfont&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;HelloWorld&lt;/font&gt;&lt;/h1&gt;
&lt;p&gt;开发 java 程序步骤：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编写程序&lt;br&gt;
编译程序&lt;br&gt;
运行程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;常用dos命令&lt;/code&gt; &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在开发 java 程序的过程中，需要在 dos 命令窗口执行命令对源程序进行编译，因此我们需要了解基本的 dos 命令。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WElAr4&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WElAr4.md.png&#34; alt=&#34;WElAr4.md.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;编写程序&lt;/code&gt; &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新建一个.java 文件，用记事本打开，写入以下代码：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;HelloWorld&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;编译源程序&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;win+R&lt;/code&gt;  键入  &lt;code&gt;cmd&lt;/code&gt;  进入 dos 命令操作窗口。&lt;br&gt;
 &lt;code&gt;javac HelloWorld.java&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编译结束后会出现一个.class 文件，是字节码文件。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WE1Z6S&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WE1Z6S.md.jpg&#34; alt=&#34;WE1Z6S.md.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;执行程序&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;java HelloWorld&lt;/code&gt; &lt;br&gt;
 将该字节码文件通过 JVM 解释给计算机并执行。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WE1a79&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WE1a79.png&#34; alt=&#34;WE1a79.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;font color=&#34;#40E0D0&#34;&gt;源码解析&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1） &lt;code&gt;public&lt;/code&gt;  修饰符用于限定类或类成员的访问级别。&lt;br&gt;
（2） &lt;code&gt;class&lt;/code&gt;  关键字用于定义类，该类的标识符 是 HelloWorld。&lt;br&gt;
（3）HelloWorld 类被 public 修饰，应在名为 HelloWorld.java 的文件中声明。&lt;br&gt;
（5）类标识符后紧跟一对大括号，类成员一般定义在这对大括号中，例如实例成员或者静态成员。&lt;br&gt;
（6） &lt;code&gt;static&lt;/code&gt;  关键字用于声明静态成员，这里定义的是一个静态函数，标识符是 main。&lt;br&gt;
（7） &lt;code&gt;函数标识符&lt;/code&gt; 的命名一般采用 &lt;code&gt;驼峰命令法&lt;/code&gt; 。&lt;br&gt;
（8） &lt;code&gt;void&lt;/code&gt;  关键字用于定义无返回值的函数。&lt;br&gt;
（9） &lt;code&gt;main函数&lt;/code&gt; 是 Java 程序的主 &lt;code&gt;入口函数&lt;/code&gt; 。&lt;br&gt;
（10）函数标识符后紧跟一对小括号， &lt;code&gt;形式参数&lt;/code&gt; 一般定义在这对小括号中，这些形式参数在程序运行时可用于接受来自外部传入的实际参数。&lt;br&gt;
（11） &lt;code&gt;String&lt;/code&gt;  关键字用于定义字符串类型的变量。&lt;br&gt;
（12） &lt;code&gt;String[]&lt;/code&gt;  用于定义字符串类型的数组，该数组的标识符是 args。&lt;br&gt;
（13）该源程序中的 main 函数的 &lt;code&gt;函数签名&lt;/code&gt; 是： &lt;code&gt;public static void main(String[] args)&lt;/code&gt; &lt;br&gt;
（14）在函数签名后紧跟一堆大括号，代码块一般定义在这对大括号中，大括号（包括大括号本身）内的所有代码的集合被称之为 &lt;code&gt;函数体&lt;/code&gt; 。&lt;br&gt;
（15）一个完整的 &lt;code&gt;函数成员&lt;/code&gt; 是由函数签名和函数体组成。&lt;br&gt;
（16） &lt;code&gt;System&lt;/code&gt;  是来自 java.lang 包下的一个类。&lt;br&gt;
（17） &lt;code&gt;out&lt;/code&gt;  是 System 类中的一个静态成员，它是 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2phdmEuaW8=&#34;&gt;java.io&lt;/span&gt; 包下 PrintStream 类的实例。&lt;br&gt;
（18） &lt;code&gt;println&lt;/code&gt;  是 out 提供的一个实例成员，而且是函数成员。&lt;br&gt;
（19）访问静态成员的语法是  &lt;code&gt;类名.成员名&lt;/code&gt; ，访问实例成员的语法是  &lt;code&gt;实例名.成员名&lt;/code&gt; 。&lt;br&gt;
（20）在代码中 &lt;code&gt;调用一个函数&lt;/code&gt; 时需要在该函数名后跟一对小括号，如果该函数需要传递参数，则将对应的实际参数按类型和顺序写到小括号中，并使用英文逗号隔开即可。&lt;br&gt;
（21）定义 &lt;code&gt;字符串的字面量&lt;/code&gt; 是直接将字符串写在双引号中，例如 “Hello World!”。&lt;br&gt;
（22） &lt;code&gt;分号&lt;/code&gt; 代表一行或者一段代码的结束。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font color=&#34;#40E0D0&#34;&gt;Java11 新特性&lt;/font&gt;：编译运行一步到位： &lt;code&gt;java HelloWorld.java&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;font color=&#34;#40E0D0&#34;&gt;执行程序过程中可能遇到的问题&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;1&amp;gt; 文件扩展名修改失败。原因很可能是你没有显示出扩展名。&lt;br&gt;
&lt;font color=&#34;green&#34;&gt;解决办法：&lt;/font&gt;  显示文件的扩展名，然后再修改。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WE3H8x&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WE3H8x.md.png&#34; alt=&#34;WE3H8x.md.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;2&amp;gt; 编码问题。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WE8yee&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WE8yee.png&#34; alt=&#34;WE8yee.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;font color=&#34;green&#34;&gt;解决办法：&lt;/font&gt;一个方法是，可以将文件另存为，同时设置编码格式为 utf-8。&lt;br&gt;
另一个方法是，在编译时指定编码格式  &lt;code&gt;javac HelloWorld -encodeing utf-8&lt;/code&gt; 。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WEGltA&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WEGltA.md.png&#34; alt=&#34;WEGltA.md.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
 ]]></description>
        </item>
    </channel>
</rss>
