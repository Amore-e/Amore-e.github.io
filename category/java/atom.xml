<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>Hexo • Posts by &#34;java&#34; category</title>
    <link href="http://example.com" />
    <updated>2021-07-15T10:23:23.000Z</updated>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/Java-HelloWorld/</id>
        <title>Java-HelloWorld</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/Java-HelloWorld/"/>
        <content type="html">&lt;h1 id=&#34;font-color7b68eehelloworldfont&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eehelloworldfont&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;HelloWorld&lt;/font&gt;&lt;/h1&gt;
&lt;p&gt;开发 java 程序步骤：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编写程序&lt;br&gt;
编译程序&lt;br&gt;
运行程序&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;常用dos命令&lt;/code&gt; &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在开发 java 程序的过程中，需要在 dos 命令窗口执行命令对源程序进行编译，因此我们需要了解基本的 dos 命令。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WElAr4&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WElAr4.md.png&#34; alt=&#34;WElAr4.md.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt; &lt;code&gt;编写程序&lt;/code&gt; &lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新建一个.java 文件，用记事本打开，写入以下代码：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;HelloWorld&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;编译源程序&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;win+R&lt;/code&gt;  键入  &lt;code&gt;cmd&lt;/code&gt;  进入 dos 命令操作窗口。&lt;br&gt;
 &lt;code&gt;javac HelloWorld.java&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编译结束后会出现一个.class 文件，是字节码文件。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WE1Z6S&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WE1Z6S.md.jpg&#34; alt=&#34;WE1Z6S.md.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;执行程序&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;java HelloWorld&lt;/code&gt; &lt;br&gt;
 将该字节码文件通过 JVM 解释给计算机并执行。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WE1a79&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WE1a79.png&#34; alt=&#34;WE1a79.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;font color = &#34;#40E0D0&#34;&gt;源码解析&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;（1） &lt;code&gt;public&lt;/code&gt;  修饰符用于限定类或类成员的访问级别。&lt;br&gt;
（2） &lt;code&gt;class&lt;/code&gt;  关键字用于定义类，该类的标识符 是 HelloWorld。&lt;br&gt;
（3）HelloWorld 类被 public 修饰，应在名为 HelloWorld.java 的文件中声明。&lt;br&gt;
（5）类标识符后紧跟一对大括号，类成员一般定义在这对大括号中，例如实例成员或者静态成员。&lt;br&gt;
（6） &lt;code&gt;static&lt;/code&gt;  关键字用于声明静态成员，这里定义的是一个静态函数，标识符是 main。&lt;br&gt;
（7） &lt;code&gt;函数标识符&lt;/code&gt; 的命名一般采用 &lt;code&gt;驼峰命令法&lt;/code&gt; 。&lt;br&gt;
（8） &lt;code&gt;void&lt;/code&gt;  关键字用于定义无返回值的函数。&lt;br&gt;
（9） &lt;code&gt;main函数&lt;/code&gt; 是 Java 程序的主 &lt;code&gt;入口函数&lt;/code&gt; 。&lt;br&gt;
（10）函数标识符后紧跟一对小括号， &lt;code&gt;形式参数&lt;/code&gt; 一般定义在这对小括号中，这些形式参数在程序运行时可用于接受来自外部传入的实际参数。&lt;br&gt;
（11） &lt;code&gt;String&lt;/code&gt;  关键字用于定义字符串类型的变量。&lt;br&gt;
（12） &lt;code&gt;String[]&lt;/code&gt;  用于定义字符串类型的数组，该数组的标识符是 args。&lt;br&gt;
（13）该源程序中的 main 函数的 &lt;code&gt;函数签名&lt;/code&gt; 是： &lt;code&gt;public static void main(String[] args)&lt;/code&gt; &lt;br&gt;
（14）在函数签名后紧跟一堆大括号，代码块一般定义在这对大括号中，大括号（包括大括号本身）内的所有代码的集合被称之为 &lt;code&gt;函数体&lt;/code&gt; 。&lt;br&gt;
（15）一个完整的 &lt;code&gt;函数成员&lt;/code&gt; 是由函数签名和函数体组成。&lt;br&gt;
（16） &lt;code&gt;System&lt;/code&gt;  是来自 java.lang 包下的一个类。&lt;br&gt;
（17） &lt;code&gt;out&lt;/code&gt;  是 System 类中的一个静态成员，它是 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL2phdmEuaW8=&#34;&gt;java.io&lt;/span&gt; 包下 PrintStream 类的实例。&lt;br&gt;
（18） &lt;code&gt;println&lt;/code&gt;  是 out 提供的一个实例成员，而且是函数成员。&lt;br&gt;
（19）访问静态成员的语法是  &lt;code&gt;类名.成员名&lt;/code&gt; ，访问实例成员的语法是  &lt;code&gt;实例名.成员名&lt;/code&gt; 。&lt;br&gt;
（20）在代码中 &lt;code&gt;调用一个函数&lt;/code&gt; 时需要在该函数名后跟一对小括号，如果该函数需要传递参数，则将对应的实际参数按类型和顺序写到小括号中，并使用英文逗号隔开即可。&lt;br&gt;
（21）定义 &lt;code&gt;字符串的字面量&lt;/code&gt; 是直接将字符串写在双引号中，例如 “Hello World!”。&lt;br&gt;
（22） &lt;code&gt;分号&lt;/code&gt; 代表一行或者一段代码的结束。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font color = &#34;#40E0D0&#34;&gt;Java11 新特性&lt;/font&gt;：编译运行一步到位： &lt;code&gt;java HelloWorld.java&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;font color = &#34;#40E0D0&#34;&gt;执行程序过程中可能遇到的问题&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;1&amp;gt; 文件扩展名修改失败。原因很可能是你没有显示出扩展名。&lt;br&gt;
&lt;font color = green&gt;解决办法：&lt;/font&gt;  显示文件的扩展名，然后再修改。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WE3H8x&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WE3H8x.md.png&#34; alt=&#34;WE3H8x.md.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;2&amp;gt; 编码问题。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WE8yee&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WE8yee.png&#34; alt=&#34;WE8yee.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;font color = green&gt;解决办法：&lt;/font&gt;一个方法是，可以将文件另存为，同时设置编码格式为 utf-8。&lt;br&gt;
另一个方法是，在编译时指定编码格式  &lt;code&gt;javac HelloWorld -encodeing utf-8&lt;/code&gt; 。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WEGltA&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WEGltA.md.png&#34; alt=&#34;WEGltA.md.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/Java-%E5%88%9D%E9%81%87/</id>
        <title>Java-初遇</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/Java-%E5%88%9D%E9%81%87/"/>
        <content type="html">&lt;h1 id=&#34;font-color7b68eejava-发展历程font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejava-发展历程font&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;Java 发展历程&lt;/font&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1995 年， &lt;code&gt;Java 语言诞生&lt;/code&gt; ，由  &lt;code&gt;Sun&lt;/code&gt;  公司推出；&lt;/li&gt;
&lt;li&gt;2004 年，发布  &lt;code&gt;J2SE 1.5&lt;/code&gt;  ，成为 Java 语言发展史上重要版本。&lt;/li&gt;
&lt;li&gt;2009 年，Sun 公司被  &lt;code&gt;Oracle&lt;/code&gt;  公司收购。&lt;/li&gt;
&lt;li&gt;2014 年，发布  &lt;code&gt;JDK 8.0&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;2018 年，发布 JDK 11.0 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;font-color7b68eejava-体系font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejava-体系font&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;Java 体系&lt;/font&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JavaSE&lt;/code&gt; ，Java 的基础和核心。允许开发和部署在桌面、服务器、嵌入式环境和实时环境中使用的 Java 应用程序。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JavaEE&lt;/code&gt; ， Java 企业版。多用于 Web 系统的服务端开发。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JavaME&lt;/code&gt; ， Java 小型版。可以用于嵌入式设备的 Java 程序开发。可以用于移动端的开发（不同于 Android 开发）。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/WnouzF&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/15/WnouzF.png&#34; alt=&#34;WnouzF.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;font-color7b68eejava-特性和优势font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejava-特性和优势font&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;Java 特性和优势&lt;/font&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;跨平台性（可移植性）&lt;/code&gt; ：跨平台性是 Java 语言的核心优势。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;面向对象&lt;/code&gt; ： Java 是一门完全面向对象的语言。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;面向对象和面向过程的区别&lt;/code&gt; ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;面向对象具有三大特征：封装性、继承性和多态性，而面向过程没有继承性和多态性，并且面向过程的封装只是封装功能，而面向对象可以封装数据和功能。所以面向对象优势更明显。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个经典的比喻：面向对象是盖浇饭、面向过程是蛋炒饭。&lt;br&gt;
盖浇饭的好处就是 “菜”“饭” 分离，从而提高了制作盖浇饭的灵活性。饭不满意就换饭，菜不满意换菜。用软件工程的专业术语就是 “可维护性” 比较好，“饭” 和 “菜” 的耦合度比较低。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;健壮性&lt;/code&gt; ：归功于垃圾回收机制（GC）。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高能性： &lt;code&gt;即时编译技术&lt;/code&gt; 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;即时编译技术&lt;/code&gt; ：JVM 可判断某段字节码其是否属于 &lt;code&gt;使用频率较高&lt;/code&gt; 的热点代码。如果是，就会将字节码文件转换出的本地机器码保存，以便下次直接执行机器码文件。这使得 Java 程序的执行效率得到很大的提高。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全性：Java 的 &lt;code&gt;存储分配模型&lt;/code&gt; 是它防御恶意代码的要方法之一。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;简单性：Java 相较 C++，去掉了一些一般程序员很少使用的特征。例如:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java 不支持&lt;font color = red&gt;go to&lt;/font&gt;语句，代之以提供 break 和 continue 语句以及异常处理。&lt;/li&gt;
&lt;li&gt;Java 还剔除了 C++ 的操作符过载&lt;font color = red&gt;(overload)&lt;/font&gt;和多继承特征，并且不使用主文件，免去了预处理程序。&lt;/li&gt;
&lt;li&gt;因为 Java 没有结构，数组和串都是对象，所以不需要&lt;font color = red&gt;指针&lt;/font&gt;。Java 能够自动处理对象的引用和间接引用，实现自动的无用单元收集。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分布式：Java 设计成支持在网络上应用，它是分布式语言。网络变成软件应用的 &lt;code&gt;分布运载工具&lt;/code&gt; 。Java 程序只要编写一次，就可到处运行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;多线程性&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;font-color7b68eejava-两种核心机制font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejava-两种核心机制font&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;Java 两种核心机制&lt;/font&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JVM（Java虚拟机）&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不同平台，JVM 不同；&lt;/li&gt;
&lt;li&gt;一次编译，出出运行；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;垃圾回收机制（GC）&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C 语言中，是由程序员负责的。&lt;/li&gt;
&lt;li&gt;Java 中由系统级的线程跟踪存储空间的分配情况，当 JVM 空闲时，检查并释放可以被释放的空间。&lt;/li&gt;
&lt;li&gt;这个过程是自动的。程序员无法精确控制和干预。&lt;/li&gt;
&lt;li&gt;程序仍然会出现内存泄漏和内存溢出的问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;font-color7b68eejdk-jre-jvmfont&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejdk-jre-jvmfont&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;JDK、JRE、JVM&lt;/font&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JVM &lt;/code&gt; &lt;br&gt;
JVM（Java Virtual Machine，Java 虚拟机）是整个 Java 实现跨平台的最核心的部分，负责解释并执行字节码文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JRE&lt;/code&gt; &lt;br&gt;
JRE（Java Runtime Environment，Java 运行环境）&lt;br&gt;
 &lt;code&gt;JRE = JVM + 核心API&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;JDK&lt;/code&gt; &lt;br&gt;
JDK（Java Development Kit，Java 开发工具包），是整个 java 的核心。&lt;br&gt;
包括编译工具 &lt;code&gt;javac&lt;/code&gt; 、执行程序 &lt;code&gt;java&lt;/code&gt; 、文档工具 &lt;code&gt;javadoc&lt;/code&gt;  和反编译工具 &lt;code&gt;javap&lt;/code&gt;  等使用工具。&lt;br&gt;
 &lt;code&gt;JDK = JRE + java开发工具&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/WnowsH&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/15/WnowsH.png&#34; alt=&#34;WnowsH.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;font-color7b68eejava-程序工作原理font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color7b68eejava-程序工作原理font&#34;&gt;#&lt;/a&gt; &lt;font color=&#34;#7B68EE&#34;&gt;Java 程序工作原理&lt;/font&gt;&lt;/h1&gt;
&lt;p&gt; &lt;br&gt;
java 程序执行过程，大致分为两步：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过编译工具 &lt;code&gt;javac&lt;/code&gt;  将源码文件（.java）转换成字节码（.class）。&lt;/li&gt;
&lt;li&gt;通过 &lt;code&gt;JVM&lt;/code&gt;  将字节码解释为机器码，进而在具体的系统平台上执行。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;源码——&amp;gt;字节码&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;词汇和语法分析&lt;/code&gt; ：分析源码的执行逻辑，并将其绘制成一个抽象的语法树。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;填写符号表&lt;/code&gt; ：复杂的程序之间会相互引用，此阶段就会对这些引用关系进行一些预处理工作。（理解：用一些符号来表示各个程序之间的关系。）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;注释处理&lt;/code&gt; ：对注释进行分析和归类。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;生成字节码&lt;/code&gt; ：根据前三个阶段的结果，最终生成字节码文件。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://imgtu.com/i/Wnwran&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/15/Wnwran.png&#34; alt=&#34;Wnwran.png&#34;&gt;&lt;/a&gt;&lt;br&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;字节码的解释过程&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;    java 字节码文件先后经过 &lt;code&gt;类加载器&lt;/code&gt; 、 &lt;code&gt;字节码校验器&lt;/code&gt; 、 &lt;code&gt;解释器&lt;/code&gt; 的处理后，最终在擦做系统平台上运行。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/Wnws5q&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/15/Wnws5q.png&#34; alt=&#34;Wnws5q.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;类装载器&lt;/code&gt; ：其主要功能是为执行程序寻找和装载所需要的类（把字节码文件装到 java 虚拟机中。）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;字节码校验器&lt;/code&gt; ：其功能是对字节码文件进行校验，保证代码的 &lt;code&gt;安全性&lt;/code&gt; 。负责测试代码段落格式并进行检查，检查伪造指针、违反对象访问权限或是试图改变对象类型的非法代码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;解释器&lt;/code&gt; ：具体的平台并不认识字节码文件，最终起作用的还是这个最重要的解释器，它负责将字节码文件 &lt;code&gt;翻译&lt;/code&gt; 成所在平台的能识别的东西。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/Java-%E5%B0%81%E8%A3%85%E3%80%81%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/</id>
        <title>Java-封装、继承和多态</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/Java-%E5%B0%81%E8%A3%85%E3%80%81%E7%BB%A7%E6%89%BF%E5%92%8C%E5%A4%9A%E6%80%81/"/>
        <content type="html">&lt;h1 id=&#34;面向对象三大特点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面向对象三大特点&#34;&gt;#&lt;/a&gt; 面向对象三大特点&lt;/h1&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkturquoise封装font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkturquoise封装font&#34;&gt;#&lt;/a&gt; &lt;font color = DarkTurquoise&gt;封装&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkturquoise继承font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkturquoise继承font&#34;&gt;#&lt;/a&gt; &lt;font color = DarkTurquoise&gt;继承&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkturquoise多态font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkturquoise多态font&#34;&gt;#&lt;/a&gt; &lt;font color = DarkTurquoise&gt;多态&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/Java-%E5%B8%B8%E7%94%A8API/</id>
        <title>Java-常用API</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/Java-%E5%B8%B8%E7%94%A8API/"/>
        <content type="html"></content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/Java-%E6%95%B0%E7%BB%84/</id>
        <title>Java-数组</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/Java-%E6%95%B0%E7%BB%84/"/>
        <content type="html">&lt;h1 id=&#34;数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组&#34;&gt;#&lt;/a&gt; 数组&lt;/h1&gt;
&lt;p&gt;数组是相同类型数据的有序集合。数组描述的是相同类型的若干数据，按照一定的先后顺序排列组合。其中每一个数据称为元素，每个元素都可以通过数组的索引或者下标来定位。&lt;/p&gt;
&lt;p&gt;&lt;em&gt; &lt;code&gt;数组的特点&lt;/code&gt; &lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数组本身是引用数据类型。而数组中的元素可以是任意类型。&lt;/li&gt;
&lt;li&gt;创建数组对象会在内存中开辟一块空间，他的空间是连续的。而数组名引用的是该连续空间的首地址。&lt;/li&gt;
&lt;li&gt;数组的长度，一旦确定就不能修改。&lt;/li&gt;
&lt;li&gt;数组中存储的数据类型必须是相同，不能出现混合类型。&lt;/li&gt;
&lt;li&gt;数组的长度属性： &lt;code&gt;length&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;数组的索引：从 0 开始连续计数，至 length-1。当数组的索引超过数组的长度，就会发生异常 &lt;code&gt;ArrayIndexOfBoundsException&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt; &lt;code&gt;数组的分类&lt;/code&gt; &lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;维度：一维数组、二维数组、多维数组…&lt;/li&gt;
&lt;li&gt;数据类型：基本类型的数组、引用类型的数组&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;一维数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一维数组&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;一维数组&lt;/code&gt; &lt;/strong&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;数组的定义格式：  &lt;code&gt;数据类型[] 变量名;&lt;/code&gt;   /  &lt;code&gt;数据类型 变量名[];&lt;/code&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&#34;数组的创建和初始化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组的创建和初始化&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;数组的创建和初始化&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;数组的初始化：java 中的数组必须进行进行初始化，才能使用。初始化是为数组中的元素分配内存空间，并为每个元素进行赋值。&lt;/p&gt;
&lt;p&gt;数组的初始化方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态初始化&lt;/li&gt;
&lt;li&gt;动态初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;动态初始化&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;动态初始化：数组元素的分配空间及赋值分开进行。&lt;br&gt;
格式： &lt;code&gt;数据类型[] 变量名 = new 数据类型[数组长度]&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] arr = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;];&lt;span class=&#34;comment&#34;&gt;//new:开辟内存空间；&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;arr[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] = &lt;span class=&#34;number&#34;&gt;78&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;静态初始化&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;静态初始化：在定义数组的同事就为数组元素分配空间并赋值。&lt;br&gt;
格式： &lt;code&gt;数据类型[] 变量名 = new 数据类型[]&amp;#123;数据1，数据2...&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此时，在声明数组的时候不需要指定长度，系统会根据数据类型自动分配空间。&lt;br&gt;
简化格式： &lt;code&gt;数据类型[] 变量名 = &amp;#123;数据1，数据2...&amp;#125;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;数组的默认值：数组元素即使我们没有赋值，都存在一个默认值。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt;、&lt;span class=&#34;keyword&#34;&gt;short&lt;/span&gt;、&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;类型的默认值是&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;；  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt;类型的默认值是&lt;span class=&#34;number&#34;&gt;0L&lt;/span&gt;；  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt;、&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt;的默认值是&lt;span class=&#34;number&#34;&gt;0.0&lt;/span&gt;；  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;类型的默认值是&lt;span class=&#34;string&#34;&gt;&amp;#x27;\u0000&amp;#x27;&lt;/span&gt;；  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt;类型的默认值是&lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;；  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    引用类型（String）的默认值是&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;``` &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;### **`内存管理`**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;内存申请：程序——&amp;gt;JVM——&amp;gt;操作系统。  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;计算的内存是非常重要的组件，程序要运行，必须加载到内存中才可以运行。但是由于内存空间有限，当运行结束之后，必须清空内存。java虚拟机要运行程序，必须进行内存空间的分配和管理。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;**`java中的内存分配`**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;堆区：存储对象或者数组。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;虚拟机栈：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;**`注意事项`**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;数组使用中需要注意两个问题：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* 数组下标越界异常&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;* 空指针异常 NullPointException&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;数组下标越界异常:  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;空指针异常：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;### **`数组的常见操作`**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;常见数组操作包括：遍历、拷贝、最值&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;**`遍历`**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;遍历：就是获取数组中的每一个元素。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;增强&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;循环（jdk &lt;span class=&#34;number&#34;&gt;1.5&lt;/span&gt; 新增）：专门用来读取数组或集合的所有元素。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;增强&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;循环，在整体遍历时相对于普通&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;循环更简洁；普通&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;循环，可以通过索引紧缺控制每一个数组元素。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;**`拷贝`**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;**`获取最大值和最小值`**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;  **`二维数组`**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;  -&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;### **`二维数组的初始化`**&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;动态初始化：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 定义一个维度为4*5的二维规则数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[][] arr = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;][&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[][] arr =&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;][]`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;静态初始化：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[][] arr = &amp;#123;&amp;#123;&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&amp;#125;,&amp;#123;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&amp;#125;,&amp;#123;&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在 java 中，二维数组不必遵循规则矩阵形式。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&#34;内存管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内存管理&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;内存管理&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;内存结构：&lt;/p&gt;
&lt;p&gt;杨辉三角：&lt;/p&gt;
&lt;h3 id=&#34;arrays工具类&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#arrays工具类&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;Arrays工具类&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/Java-%E6%8A%BD%E8%B1%A1%E7%B1%BB%E3%80%81%E6%8E%A5%E5%8F%A3%E5%92%8C%E5%86%85%E9%83%A8%E7%B1%BB/</id>
        <title>抽象类和接口</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/Java-%E6%8A%BD%E8%B1%A1%E7%B1%BB%E3%80%81%E6%8E%A5%E5%8F%A3%E5%92%8C%E5%86%85%E9%83%A8%E7%B1%BB/"/>
        <content type="html">&lt;h1 id=&#34;抽象类和接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#抽象类和接口&#34;&gt;#&lt;/a&gt; 抽象类和接口&lt;/h1&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkviolet抽-象-类font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkviolet抽-象-类font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;抽 象 类&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;抽象方法&lt;/code&gt; &lt;/strong&gt;：用 abstract 关键字修饰的方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;抽象方法的特点&lt;/code&gt; &lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font color = &#34;DarkTurquoise&#34;&gt;不能有方法体&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;抽象方法是用来&lt;font color = &#34;DarkTurquoise&#34;&gt;被重写 (Override)&lt;/font&gt;的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;抽象类&lt;/code&gt; &lt;/strong&gt;：存在抽象方法的类就叫抽象类。用 abstract 关键字修饰。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;抽象类的成员&lt;/code&gt; &lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;成员变量：可以是变量，也可以是常量。&lt;/li&gt;
&lt;li&gt;成员方法：
&lt;ul&gt;
&lt;li&gt;抽象方法：限定子类中必须重写的一些方法；&lt;/li&gt;
&lt;li&gt;非抽象方法：直接被子类继承，提高代码的复用性。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;构造器：存在。便于子类访问父类的成员数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;抽象类的特点&lt;/code&gt; &lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;抽象类&lt;font color = &#34;DarkTurquoise&#34;&gt;不能实例化&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;抽象类是用来&lt;font color = &#34;DarkTurquoise&#34;&gt;被继承（extends）&lt;/font&gt;的。&lt;/li&gt;
&lt;li&gt;可以通过&lt;font color = &#34;DarkTurquoise&#34;&gt;多态&lt;/font&gt;来访问成员变量。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;抽象方法与抽象类的关系&lt;/code&gt; &lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;包含抽象方法的类一定是抽象类；&lt;/li&gt;
&lt;li&gt;抽象类中的方法不一定是抽象方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkviolet接-口font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkviolet接-口font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;接 口&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;接口(interface)&lt;/code&gt; &lt;/strong&gt;：接口是一种特殊的抽象类，是一系列抽象方法的集合。与抽象类不同，不可以声明普通方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;接口的特点&lt;/code&gt; &lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接口&lt;font color = &#34;DarkTurquoise&#34;&gt;不能被实例化&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;接口是用来&lt;font color = &#34;DarkTurquoise&#34;&gt;被实现（implements）&lt;/font&gt;的。&lt;/li&gt;
&lt;li&gt;要实现接口，就&lt;font color = &#34;DarkTurquoise&#34;&gt;必须实现接口中的所有（抽象）方法&lt;/font&gt;。这就决定了实现类要么实现接口的所有方法，要么是是抽象类。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;接口的成员&lt;/code&gt; &lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;成员变量：默认是&lt;font color = &#34;DarkTurquoise&#34;&gt;常量&lt;/font&gt;，由 public static final 修饰。&lt;/li&gt;
&lt;li&gt;构造器：无。&lt;/li&gt;
&lt;li&gt;成员方法：只能是抽象方法，由 public static final 修饰。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;接口与类的关系&lt;/code&gt; &lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类和类的关系：&lt;font color = &#34;DarkTurquoise&#34;&gt;继承 extends&lt;/font&gt;。只能是单继承，可以多层继承（非多重继承）。&lt;/li&gt;
&lt;li&gt;接口和接口的关系：&lt;font color = &#34;DarkTurquoise&#34;&gt;继承 extends&lt;/font&gt;。接口的而继承可以是单继承，可以是 &lt;code&gt;多重继承&lt;/code&gt; ，还可以是多层继承。&lt;/li&gt;
&lt;li&gt;类和接口的关系：&lt;font color = &#34;DarkTurquoise&#34;&gt;实现 implements&lt;/font&gt;。可以单实现，也可以多实现。在实现接口的同时，还可以继承一个父类。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;接口与抽象类的区别&lt;/code&gt; &lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;成员组成。&lt;/li&gt;
&lt;li&gt;使用方式：
&lt;ul&gt;
&lt;li&gt;抽象类：子类继承。&lt;/li&gt;
&lt;li&gt;接口：实现类实现。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;关系：抽象类可以实现接口。接口不能继承抽象类，可以继承多个接口。&lt;/li&gt;
&lt;li&gt;面向对象编程的设计思想层面:
&lt;ul&gt;
&lt;li&gt;抽象类更侧重于对相似的类进行抽象，形成抽象的父类以供子类继承使用；&lt;/li&gt;
&lt;li&gt;而接口往往在程序设计的时候，定义模块与模块之间应满足的规约或者定义一种标准，使各模块之间能协调工作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkviolet内-部-类font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkviolet内-部-类font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;内 部 类&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;内部类是定义在类中的类。根据定义的类位置及修饰符的不同，分为了成员内部类，静态内部类，局部内部类、匿名内部类等四种类型。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;成员内部类&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;成员内部类定义在外部类的内部，相当于外部类的一个成员变量，可以使用任意访问控制符的修饰。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;成员内部类访问外部类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以不受访问控制符的影响，&lt;font color = &#34;DarkTurquoise&#34;&gt;直接访问外部类&lt;/font&gt;中的属性和方法，包括私有成员。&lt;/li&gt;
&lt;li&gt;如果外部类和内部类具有&lt;u&gt;相同的成员变量或方法&lt;/u&gt;，内部类&lt;font color = &#34;DarkTurquoise&#34;&gt;默认访问自己的成员变量和方法&lt;/font&gt;，如果要访问外部类的成员变量，可以使用 &lt;code&gt;Outer.this.成员变量&lt;/code&gt; 来访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;访问成员内部类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;外部类&lt;/u&gt;&lt;font color = &#34;DarkTurquoise&#34;&gt;不能直接使用&lt;/font&gt;内部类的成员和方法。（可以先创建内部类的对象，然后通过内部类的对象来访问其成员变量和方法）&lt;/li&gt;
&lt;li&gt;&lt;u&gt;在外部类范围之外&lt;/u&gt;，成员内部类的使用，需要先生成外部类对象，然后再以  &lt;code&gt;外部类对象.new 内部类()&lt;/code&gt;  的形式生成内部类对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;  Java 编译器在创建内部类对象时，隐式的把其外部类对象的引用也传了进去并一直保存着。这样就使得内部类对象始终可以访问其外部类对象，同时这也是为什么在外部 类作用范围之外向要创建内部类对象必须先创建其外部类对象的原因。
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt; &lt;code&gt;注意&lt;/code&gt; &lt;/em&gt;：&lt;br&gt;
将一个类 设计为内部类的目的 ，大多数都是不想外界访问，所以内部类的定义应该私有化，私有化之后  在提供一个可以让外界调用的方法，方法内部常见内部类对象并调用。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; day7.inner;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//外部类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Oter&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number1 = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//外部类成员变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number2 = &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Oter&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Oter&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.number1 = number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//成员内部类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt;   &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Inner1&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number1 = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number3 = &lt;span class=&#34;number&#34;&gt;21&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//编译错误！非静态内部类中不能存在静态成员&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//static int happy = 1000;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Inner1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;span class=&#34;comment&#34;&gt;//成员内部类的构造方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;inTest1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;内部类默认访问自己的成员变量：&amp;quot;&lt;/span&gt;+number1); &lt;span class=&#34;comment&#34;&gt;//20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;调用外部类的同名成员变量(方法一)：&amp;quot;&lt;/span&gt;+Oter.&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.number1); &lt;span class=&#34;comment&#34;&gt;//10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;调用外部类的同名成员变量(方法二)：&amp;quot;&lt;/span&gt;+&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Oter().number1);&lt;span class=&#34;comment&#34;&gt;//10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;调用外部类的非同名成员变量：&amp;quot;&lt;/span&gt;+number2);&lt;span class=&#34;comment&#34;&gt;//11&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Inner1 in1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Inner1(); &lt;span class=&#34;comment&#34;&gt;//外部类中，要访问内部类的成员，必须先创建内部类对象，通过对象访问&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number4 = in1.number3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//成员内部类2：private修饰,隐藏内部类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Inner2&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//提供一个方法，访问私有内部类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; Inner2 &lt;span class=&#34;title&#34;&gt;outerTest1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Inner2 in2 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Inner2();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; in2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;package&lt;/span&gt; day7.inner;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//1、编译错误！！非静态内部类不能直接通过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//Oter.Inner1 = new Oter.Inner1();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Oter.Inner1 in1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Oter().&lt;span class=&#34;function&#34;&gt;new &lt;span class=&#34;title&#34;&gt;Inner1&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//成员内部类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        in1.inTest1();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//2、编译错误！！无法通过本方法访问私有化成员内部类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//Oter.Inner2 in2 = new Oter().new Inner2();//成员内部类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//对于私有的成员内部类，可以通过此方式从外部类之外进行访问&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Oter out1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Oter();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(out1.outerTest1());&lt;span class=&#34;comment&#34;&gt;//day7.inner.Oter$Inner2@edf4efb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;静态内部类&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态内部类是&lt;u&gt;static&lt;/u&gt;修饰的内部类。&lt;/li&gt;
&lt;li&gt;静态内部类访问外部类：
&lt;ul&gt;
&lt;li&gt;&lt;font color = &#34;DarkTurquoise&#34;&gt;只能访问&lt;/font&gt;外部类的&lt;font color = &#34;DarkTurquoise&#34;&gt;静态属性和静态方法&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;如果外部类的静态成员与内部类的成员&lt;u&gt;名称相同&lt;/u&gt;，可通过 &lt;code&gt;类名.静态成员&lt;/code&gt; 访问外部类的静态成员；&lt;/li&gt;
&lt;li&gt;&lt;font color = &#34;DarkTurquoise&#34;&gt;不能直接访问&lt;/font&gt;外部类的非静态成员，但可以通过 &lt;code&gt;new Oter().成员&lt;/code&gt; 的方式访问。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;访问静态内部类：
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;外部类中&lt;/u&gt;，创建静态内部类的对象时，不需要外部类的对象，可以直接创建  &lt;code&gt;内部类 对象名= new 内部类()&lt;/code&gt; ；其静态方法也可以通过  &lt;code&gt;静态内部类名.方法() &lt;/code&gt; 的形式调用；。&lt;/li&gt;
&lt;li&gt;如果测试类和静态内部类&lt;u&gt;不在同一个 &lt;code&gt;.java&lt;/code&gt;  文件&lt;/u&gt;中，那么可以通过  &lt;code&gt;外部类名.静态内部类.方法()&lt;/code&gt;  的形式调用静态方法；通过 &lt;code&gt;外部类.内部类  内部类名 = new 外部类.内部类()&lt;/code&gt;  创建对象。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//外部类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Oter&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number5 = &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number6 = &lt;span class=&#34;number&#34;&gt;31&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number7 = &lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Oter&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Oter&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.number1 = number;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//静态内部类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Inner3&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;  number5 = &lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number8 = &lt;span class=&#34;number&#34;&gt;41&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Inner3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125; &lt;span class=&#34;comment&#34;&gt;//静态内部类的构造器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt;   &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;innerTest2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;调用外部类的静态成员(与内部类成员变量同名)：&amp;quot;&lt;/span&gt;+Oter.number5);&lt;span class=&#34;comment&#34;&gt;//30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;调用外部类的静态成员&amp;quot;&lt;/span&gt;+ number7);&lt;span class=&#34;comment&#34;&gt;//32&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;调用外部类的非静态成员：&amp;quot;&lt;/span&gt;+&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Oter().number6);&lt;span class=&#34;comment&#34;&gt;//31&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;innerTest3&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;静态内部类的静态方法&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;outTest2&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Inner3 in2 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Inner3(); &lt;span class=&#34;comment&#34;&gt;//在外部类内创建内部类对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        in2.innerTest2();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Inner3.innerTest3(); &lt;span class=&#34;comment&#34;&gt;//调用内部类的静态方法:直接用类调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Oter.Inner3 in3 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Oter.Inner3();&lt;span class=&#34;comment&#34;&gt;//创建静态内部类对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        in3.innerTest2();&lt;span class=&#34;comment&#34;&gt;//调用非静态方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Oter.Inner3.innerTest3();&lt;span class=&#34;comment&#34;&gt;//调用静态方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;局部内部类&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义在外部类的&lt;u&gt;方法中&lt;/u&gt;。局部内部类，只能在该方法内部可见，即&lt;font color = &#34;DarkTurquoise&#34;&gt;只能在该方法内使用&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;由于方法内部类不能在外部类的方法以外的地方使用，因此方法内部类&lt;font color = &#34;DarkTurquoise&#34;&gt;不能使用访问控制符和 static 修饰符&lt;/font&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Oter&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number1 = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//外部类成员变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number2 = &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;outTest4&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//不能有任何访问控制符和static修饰&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Inner4&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; number9 = &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;innerTest4&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//局部内部类直接可以互相访问成员内部类和静态内部类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;局部内部类在访问静态内部类：&amp;quot;&lt;/span&gt;+Inner3.number5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;局部内部类的方法在执行！&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Inner4  in4 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Inner4();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        in4.innerTest4();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;outTest5&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//编译错误！！局部内部类只能在对应方法内有效。方法外无法使用，更无法创建对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// Inner4  in4 = new Inner4();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// in4.innerTest4();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;匿名内部类&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;匿名类是&lt;u&gt;不能有名称的类&lt;/u&gt;。&lt;/li&gt;
&lt;li&gt;无法引用，必须在创建时，作为&lt;u&gt;new 语句&lt;/u&gt;的一部分来声明。
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;new &amp;lt;类或接口&amp;gt; &amp;lt;类的主体&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;前提条件：&lt;font color = &#34;DarkTurquoise&#34;&gt;必须继承一个父类或实现一个接口&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;匿名内部类的成员特点：
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;font color = &#34;DarkTurquoise&#34;&gt;不能定义构造函数的&lt;/font&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;匿名内部类为局部内部类，所以局部内部类的所有限制同样对匿名内部类生效。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;匿名内部类中&lt;font color = &#34;DarkTurquoise&#34;&gt;不能存在任何的静态成员变量和静态方法&lt;/font&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;匿名内部类&lt;font color = &#34;DarkTurquoise&#34;&gt;不能是抽象的&lt;/font&gt;，它必须要实现继承的类或者实现的接口的所有抽象方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;interface&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Student&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;comment&#34;&gt;//创建一个接口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;study&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;//实现Student接口的匿名类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Student student = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Student() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;study&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;好好学习，天天向上！&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        student.study();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkviolet代-码-块font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkviolet代-码-块font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;代 码 块&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;代码块（Code block）：Java 中，用 &lt;code&gt; &amp;#123;&amp;#125; &lt;/code&gt; 括起来的代码称为代码块。根据位置和声明不同，分为局部代码块、构造代码块、静态代码块和同步代码块。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;局部代码块&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;局部代码块：在方法中出现，执行完后消失，可以&lt;font color = &#34;DarkTurquoise&#34;&gt;限定变量的生命周期&lt;/font&gt;，使用完即释放，提高内存利用率。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;//局部代码块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           System.out.println(n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;//System. out.println(n);//此时n已经被释放&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;构造代码块&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;构造代码块：在类中方法外出现。&lt;/li&gt;
&lt;li&gt;构造代码块依赖于构造方法，每次调用构造方法都会执行。并且&lt;font color = &#34;DarkTurquoise&#34;&gt;在构造方法前执行&lt;/font&gt;。即实例对象建立，才会运行构造代码块，类不能调用构造代码块。&lt;/li&gt;
&lt;li&gt;代码块可以通过 this 对成员变量进行初始化。&lt;/li&gt;
&lt;li&gt;构造代码块与构造方法的区别：
&lt;ul&gt;
&lt;li&gt;构造代码块是给所有对象进行统一初始化，而构造方法是给对应的对象进行初始化。因为构造方法可以是多个，运行哪个构造方法就会建立什么样的对象，但无论创建哪个对象，都会先执行相同的构造代码块。&lt;font color = &#34;DarkTurquoise&#34;&gt;构造代码块中定义的是不同对象共性的初始化内容&lt;/font&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Student&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; String name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; age ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//构造代码块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;代码块执行......&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.name = &lt;span class=&#34;string&#34;&gt;&amp;quot;小张&amp;quot;&lt;/span&gt;：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.age = &lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;无参构造执行....&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String name, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;带参构造执行......&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//构造代码块测试类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 创建对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Student student1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Student();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(student1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 注意：构造代码块通过构造方法自动调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Student student2 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Student(&lt;span class=&#34;string&#34;&gt;&amp;quot;小明&amp;quot;&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(student2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行结果：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;代码块执行......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;无参构造执行......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Student&amp;#123;name=&lt;span class=&#34;string&#34;&gt;&amp;quot;小张&amp;quot;&lt;/span&gt;,age=&lt;span class=&#34;number&#34;&gt;17&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;代码块只想......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;带参构造执行......&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Student&amp;#123;name=&lt;span class=&#34;string&#34;&gt;&amp;quot;小明&amp;quot;&lt;/span&gt;,age=&lt;span class=&#34;number&#34;&gt;18&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;静态代码块&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态代码块：在类中方法外出现，由&lt;font color = &#34;DarkTurquoise&#34;&gt;static&lt;/font&gt;修饰。&lt;/li&gt;
&lt;li&gt;常用来&lt;font color = &#34;DarkTurquoise&#34;&gt;给类进行初始化&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;在类加载的时候就执行。且&lt;font color = &#34;DarkTurquoise&#34;&gt;只执行一次&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;执行顺序优先于各种代码及构造方法。&lt;/li&gt;
&lt;li&gt;静态代码块&lt;font color = &#34;DarkTurquoise&#34;&gt;只能访问静态变量&lt;/font&gt;，不能访问普通变量，&lt;font color = &#34;DarkTurquoise&#34;&gt;不能用 this&lt;/font&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//静态代码块&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;代码块执行顺序&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color = &#34;ForestGreen&#34;&gt;静态代码块 ===&amp;gt;main () 方法 ===&amp;gt; 构造代码块 ===&amp;gt; 构造方法 ===&amp;gt; 局部代码块。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;继承中代码块执行顺序&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;font color = &#34;MediumSlateBlue&#34;&gt;父类静态块 ==&amp;gt; 子类静态块 ==&amp;gt; 父类代码块 ==&amp;gt; 父类构造器 ==&amp;gt; 子类代码块 ==&amp;gt; 子类构造器&lt;/font&gt; 。&lt;/p&gt;
</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/Java-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/</id>
        <title>Java-流程控制</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/Java-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
        <content type="html">&lt;blockquote&gt;
&lt;h1 id=&#34;从控制台获取数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#从控制台获取数据&#34;&gt;#&lt;/a&gt; 从控制台获取数据&lt;/h1&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//1.创建一个Scanner对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Scanner sc =  &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Scanner(System.in);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//2.调用Scanner对象的方法，从控制获台取一个各个类型的数据，此处是获取一个整数。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; in = sc.nextInt();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;h1 id=&#34;顺序结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#顺序结构&#34;&gt;#&lt;/a&gt; 顺序结构&lt;/h1&gt;
&lt;/blockquote&gt;
&lt;p&gt;程序的执行是 &lt;code&gt;从main方法开始，自上而下，依次执行&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n1 = &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n2 = n1 +&lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n2 = n1 +&lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//解析不到n1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n1 = &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;h1 id=&#34;分支结构选择结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分支结构选择结构&#34;&gt;#&lt;/a&gt; 分支结构 / 选择结构&lt;/h1&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;if-单分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#if-单分支&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;if 单分支&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;if(关系表达式)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#x2F;&amp;#x2F; 关系表达式为true,则执行if下的语句&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	语句;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 1  if 单分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;  a  = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; b = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// 需求  判断a和b是否相同&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (a == b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;a等于b&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(a != b)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;a不等于b&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;if-else-双分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#if-else-双分支&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;if - else 双分支&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;if(关系表达式)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	语句体1;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	语句体2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*双分支  if  else&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;       * 需求  给出任意的整数，使用程序来判断该整数是奇数还是偶数  并在控制台输出判断结果&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;        */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;//获取键盘输入数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       Scanner sc = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Scanner(System.in);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;请输入您要判断的整数：&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; in = sc.nextInt();&lt;span class=&#34;comment&#34;&gt;// 保存用户输入的整数到变量in中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// 判断整数是奇数还是偶数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(in % &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;您输入的整数为偶数&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;您输入的整数为奇数&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;else-if-多分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#else-if-多分支&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;else if 多分支&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;if(条件表达式1)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	语句1；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;else if(条件表达式2)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	语句2；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;...else&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	语句n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;          多分支&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;          需求：在该高考时，父母许诺，如果考上211   奖励一个mac笔记本     如果考上一本  奖励  iphone   如果考上二本   奖励小米手机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;          如果没考上  奖励回去复读&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;       */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;等待成绩公布,请录入您的高考成绩：&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;  score  = sc.nextInt();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(score &amp;gt; &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;奖励mac笔记本&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (score &amp;gt; &lt;span class=&#34;number&#34;&gt;550&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;奖励  iphone&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(score &amp;gt; &lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;奖励小米手机&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;奖励回去复读&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;注意边界值的处理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;嵌套分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#嵌套分支&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;嵌套分支&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;等待成绩公布,请录入您的高考成绩：&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;  score  = sc.nextInt();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(score &amp;gt;=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; score &amp;lt;= &lt;span class=&#34;number&#34;&gt;750&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(score &amp;gt;= &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;奖励mac笔记本&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (score &amp;gt;= &lt;span class=&#34;number&#34;&gt;550&lt;/span&gt; &amp;amp;&amp;amp; score &amp;lt; &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;奖励  iphone&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(score &amp;gt;= &lt;span class=&#34;number&#34;&gt;500&lt;/span&gt; &amp;amp;&amp;amp; score &amp;lt; &lt;span class=&#34;number&#34;&gt;550&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;奖励小米手机&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;奖励回去复读&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;您输入的成绩有误，请查证后重新输入&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;switch分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#switch分支&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;switch分支&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;switch(表达式)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    case 值1：&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        语句；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    case 值2；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        语句；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    default:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        语句；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        break;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;switch 表达式的类型：int、byte、short、char、String (JDK 以上)、enum (枚举)。&lt;/li&gt;
&lt;li&gt;break 作用：结束当前执行。如果没有 break，将发生 case 穿透。&lt;/li&gt;
&lt;li&gt;default 的位置：可以出现在任意位置，习惯写在最后。&lt;/li&gt;
&lt;li&gt;对于多个 case 对应相同的代码，则可以进行合并。&lt;/li&gt;
&lt;li&gt;switch 判断的数据的值一定是可列举的、有穷的。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; (month)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前月份属于冬季&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前月份属于春季&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前月份属于夏季&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前月份属于秋季&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;您输入的数据有误，请重新输入!!!&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;switch 的表达式类型可以使 String。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;String  str = &lt;span class=&#34;string&#34;&gt;&amp;quot;audi&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; (str)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;audi&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;这是奥迪&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;bmw&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;这是宝马&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;h1 id=&#34;循环结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#循环结构&#34;&gt;#&lt;/a&gt; 循环结构&lt;/h1&gt;
&lt;/blockquote&gt;
&lt;p&gt;特点：所执行的代码是重复的；需要明确的开始和停止标志。&lt;/p&gt;
&lt;h3 id=&#34;for循环&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#for循环&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;for循环&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;for(初始化语句；条件判断语句；条件控制语句)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    循环语句；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;循环结构的语法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初始化语句，可以是一条或者多条语句，中间用 &lt;code&gt;，&lt;/code&gt; 分割。这些语句主要完成一些初始化工作。&lt;/li&gt;
&lt;li&gt;条件判断语句，该语句的执行结果一定是一个 Boolean 值，这个语句决定是否执行循环语句。&lt;/li&gt;
&lt;li&gt;条件控制语句，通常是一条语句。用来改变判断条件的值  从而达到控制语句是否继续向下执行的效果。此处使用自增自减操作居多。&lt;/li&gt;
&lt;li&gt;循环语句，这里可以使一条或者多条语句 也可以是其他结构。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;DaffodilNumber&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; num = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//统计水仙花的个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;1000以内的水仙花总数为：&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;; i&amp;lt;&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; o = i  % &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 个位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; p = i / &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt; % &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 十位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; q = i / &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//百位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;//判断是否为水仙花数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(o*o*o+p*p*p+q*q*q == i)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(i); &lt;span class=&#34;comment&#34;&gt;//打印水仙花数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                num++; &lt;span class=&#34;comment&#34;&gt;//累加水仙花数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;总计个数：&amp;quot;&lt;/span&gt;+num); &lt;span class=&#34;comment&#34;&gt;//打印1000以内的水仙花总数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;while循环&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#while循环&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;while循环&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;先判断，后执行。&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;while(条件判断语句)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    循环语句；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    条件控制语句；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// 需求  珠穆朗玛峰高度 8844.43 米 = 8844430毫米   加入我们有一张足够大的纸，值得厚度是0.1毫米&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// 计算将纸对着多少次 可以折成珠穆朗玛峰的高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// 统计折叠的次数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;  count = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;//  定义纸的厚度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt;  paper = &lt;span class=&#34;number&#34;&gt;0.1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// 珠穆朗玛峰的高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;  zf = &lt;span class=&#34;number&#34;&gt;8844430&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(paper &amp;lt;= zf)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;comment&#34;&gt;// 完成纸的折叠&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           paper *= &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;comment&#34;&gt;// 此时的折叠次数加一&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           count++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;总共折叠的次数为：&amp;quot;&lt;/span&gt; +count);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;dowhile循环&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dowhile循环&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;do...while循环&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;先执行，后判断，无论条件是否满足，都至少会执行一次。&lt;/p&gt;
&lt;figure class=&#34;highlight plain&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;do&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    循环语句;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    条件控制语句;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;while(条语句件判断);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果一个整数大于10.则输出大   否则输出小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; num = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;大.....&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        num -= &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (num &amp;gt; &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//此处的分号不可遗忘&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;do…while 的使用场景：eg: 用户登录。&lt;/p&gt;
&lt;p&gt;三种循环的区别：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;for 循环和 while 循环，先判断条件是否成立，然后决定是否执行循环语句；do while 循环是先执行一次循环语句，再判断条件是否成立。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 for 循环内声明的变量，作用域仅限 for 循环内。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;死循环&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(;;)&amp;#123;&lt;span class=&#34;comment&#34;&gt;// 两个分号在任何时候都不能少&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;aaaa&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;循环跳转控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#循环跳转控制&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;循环跳转控制&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;在任何循环语句的主体部分，可以采用 break 进行控制循环的流程。break 用于强制退出循环，终止整个循环。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;continue 用于强制退出本次循环，继续下一次循环。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;带标签的 break 和 continue&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;outter: &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;101&lt;/span&gt;; i &amp;lt; &lt;span class=&#34;number&#34;&gt;150&lt;/span&gt; ;i ++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;; j &amp;lt; i/&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; ; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(i % j == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; )&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt; outter;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           System.out.println(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;嵌套循环&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//模拟时钟的时针和分针  时针  1--24   分针1-60  当分钟走一圈  时针走一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; hour = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; hour &amp;lt; &lt;span class=&#34;number&#34;&gt;24&lt;/span&gt;; hour++)&amp;#123;&lt;span class=&#34;comment&#34;&gt;// 模拟时针循环&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; minute = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; minute &amp;lt; &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;;minute++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前时间为：&amp;quot;&lt;/span&gt; + hour +&lt;span class=&#34;string&#34;&gt;&amp;quot;:&amp;quot;&lt;/span&gt; + minute);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            System.out.println(&lt;span class=&#34;string&#34;&gt;&amp;quot;-----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;控制台输出 99 乘法表&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i&amp;lt;=&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; j=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;j&amp;lt;=i;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; result=i*j;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.print(j+&lt;span class=&#34;string&#34;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;+i+&lt;span class=&#34;string&#34;&gt;&amp;quot;=&amp;quot;&lt;/span&gt;+result+&lt;span class=&#34;string&#34;&gt;&amp;quot;\t&amp;quot;&lt;/span&gt;);           &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/Java%E8%BF%9B%E9%98%B6-%E5%BC%82%E5%B8%B8/</id>
        <title>Java-异常</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/Java%E8%BF%9B%E9%98%B6-%E5%BC%82%E5%B8%B8/"/>
        <content type="html">&lt;h1 id=&#34;异常&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#异常&#34;&gt;#&lt;/a&gt; 异常&lt;/h1&gt;
</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/Java%E8%BF%9B%E9%98%B6-%E9%9B%86%E5%90%88/</id>
        <title>Java进阶-集合</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/Java%E8%BF%9B%E9%98%B6-%E9%9B%86%E5%90%88/"/>
        <content type="html">&lt;h1 id=&#34;集合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集合&#34;&gt;#&lt;/a&gt; 集合&lt;/h1&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkturquoise集合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkturquoise集合&#34;&gt;#&lt;/a&gt; &lt;font color = DarkTurquoise&gt;集合&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://gitee.com/MoonHalo/blog-photos/raw/master/java-img/01.png&#34;&gt;&lt;img data-src=&#34;https://gitee.com/MoonHalo/blog-photos/raw/master/java-img/01.png&#34; alt=&#34;01.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%8E%92%E5%BA%8F%E5%92%8C%E6%9F%A5%E6%89%BE/</id>
        <title>数据结构-排序算法</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%8E%92%E5%BA%8F%E5%92%8C%E6%9F%A5%E6%89%BE/"/>
        <content type="html">&lt;blockquote&gt;
&lt;h1 id=&#34;常见算法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见算法&#34;&gt;#&lt;/a&gt; 常见算法&lt;/h1&gt;
&lt;/blockquote&gt;
&lt;p&gt;算法：一系列解决问题的清晰指令。&lt;/p&gt;
&lt;p&gt;不同的算法能用不同的时间、空间或者效率来完成相同的任务。&lt;br&gt;
算法的优劣的衡量标准： &lt;code&gt;时间复杂度&lt;/code&gt; 和 &lt;code&gt;空间复杂度&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;递归算法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#递归算法&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;递归算法&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;递归：直接或者间接调用自身函数或者方法的算法。&lt;/p&gt;
&lt;p&gt;递归的基本原理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每一级的函数调用都有自己的变量；&lt;/li&gt;
&lt;li&gt;每一次的函数的调用都会有一次返回。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;递归的三大要素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;明确函数功能；&lt;/li&gt;
&lt;li&gt;明确递归结束条件；&lt;/li&gt;
&lt;li&gt;找出函数的等价关系式；&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;func&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//结束条件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(n == &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; res = n * func(n-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; res;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;排序算法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#排序算法&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;排序算法&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;选择排序、交换排序&lt;br&gt;
插入排序&lt;br&gt;
归并排序&lt;br&gt;
桶排序&lt;br&gt;
基数排序&lt;/p&gt;
&lt;p&gt;&lt;code&gt;冒泡排序&lt;/code&gt; &lt;br&gt;
冒泡排序的思想：&lt;br&gt;
代码实现：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; j =&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;j&amp;lt;arr.length-j-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;i&amp;lt;arr.length-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(arr[i]&amp;gt;arr[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            arr[i] = arr[i]^arr[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            arr[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = arr[i]^arr[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            arr[i] = arr[i]^arr[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;快速排序&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;查找算法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查找算法&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;查找算法&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;二分检索法&lt;/code&gt; &lt;br&gt;
二分检索（折半检索）。&lt;/p&gt;
&lt;p&gt;二分检索法的基本思想：假设数组中的元素是有序存放的。&lt;/p&gt;
&lt;p&gt;二分检索法是一种效率较高的检索方法。&lt;/p&gt;
</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E9%93%BE%E8%A1%A8/</id>
        <title>数据结构-栈、队列和链表</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%A0%88%E3%80%81%E9%98%9F%E5%88%97%E5%92%8C%E9%93%BE%E8%A1%A8/"/>
        <content type="html">&lt;h1 id=&#34;链表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#链表&#34;&gt;#&lt;/a&gt; 链表&lt;/h1&gt;
&lt;p&gt;链表通常是由一连串的节点组成的，每个节点包含任意类型的实例&lt;u&gt;数据&lt;/u&gt;和一个或者两个用来指向下一个或上一个节点&lt;u&gt;位置的链接&lt;/u&gt;（指针）。&lt;br&gt;
链表是一种&lt;u&gt;线性表&lt;/u&gt;，但是并不会按照线性的顺序存储数据，而是在每一个节点存放下一个节点的指针。&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkturquoise单链表font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkturquoise单链表font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkTurquoise&#34;&gt;单链表&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;一个单链表的&lt;u&gt;节点组成&lt;/u&gt;分为两个部分，第一部分保存节点的&lt;u&gt;数据&lt;/u&gt;，第二个部分保存下一个节点的&lt;u&gt;地址&lt;/u&gt;。最后一个节点存储地址的部分指向&lt;u&gt;空指针&lt;/u&gt;。&lt;/li&gt;
&lt;li&gt;单链表&lt;strong&gt;只可以向一个方向遍历&lt;/strong&gt;。查找一个节点的时候，都需要从第一个节点开始，每次访问下一个节点，一直到目标位置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;单链表和数组&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存储空间：数组的存储空间是连续的，链表的存储空间是不连续的。&lt;/li&gt;
&lt;li&gt;长度可变性：链表的长度可以根据实际需要，自定伸缩。数组长度的长度一旦定义就不能改变。&lt;/li&gt;
&lt;li&gt;数据访问：链表的访问，需要一定访问，数组访问更加便捷。&lt;/li&gt;
&lt;li&gt;使用场景：数据量大，而且需要频繁的访问数据时，数组更适合。频繁需要插入和删除操作的链表更适合。&lt;/li&gt;
&lt;li&gt;存储结构：&lt;/li&gt;
&lt;li&gt;运算规则：&lt;/li&gt;
&lt;li&gt;遍历：数组是连续的，所以遍历效率高；链表必须从头开始，遍历效率低。&lt;/li&gt;
&lt;li&gt;插入和删除：数组的操作，需要移位（效率高），链表只需要改变指针的指向。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;栈、队列、链表的区别&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;栈、队列是线性表，操作受限。区别在于&lt;u&gt;运算规则不同&lt;/u&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkturquoise双向链表font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkturquoise双向链表font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkTurquoise&#34;&gt;双向链表&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkturquoise循环链表font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkturquoise循环链表font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkTurquoise&#34;&gt;循环链表&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h1 id=&#34;非线性结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#非线性结构&#34;&gt;#&lt;/a&gt; 非线性结构&lt;/h1&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkturquoise循环链表font-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkturquoise循环链表font-2&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkTurquoise&#34;&gt;循环链表&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/Java-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</id>
        <title>Java-基础语法</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/Java-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
        <content type="html">&lt;blockquote&gt;
&lt;h2 id=&#34;标识符和关键字&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标识符和关键字&#34;&gt;#&lt;/a&gt; 标识符和关键字&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;关键字&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关键字&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;关键字&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;被 java 语言赋予了特殊含义的单词即为 &lt;code&gt;关键字&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/WEtikQ&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WEtikQ.png&#34; alt=&#34;WEtikQ.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/WEtCTg&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/13/WEtCTg.png&#34; alt=&#34;WEtCTg.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关键字的特点&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关键字的字母 &lt;code&gt;全部小写&lt;/code&gt; ；&lt;/li&gt;
&lt;li&gt;常用的代码编辑器，针对关键字有特殊的颜色标记，非常直观。&lt;br&gt;
 &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;标识符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#标识符&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;标识符&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;凡是在 java 中需要由我们命名的类名、方法名、变量名、接口名、常量名等成为 &lt;code&gt;标识符&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;标识符的命名规则&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;只能由数字、字母、下划线（_）、美元符号（$）组成。&lt;/li&gt;
&lt;li&gt;不能以数字开头。&lt;/li&gt;
&lt;li&gt;不能是关键字和保留字。&lt;/li&gt;
&lt;li&gt;大小写敏感（严格区分大小写）。&lt;/li&gt;
&lt;li&gt;尽量做到 “见名知意”。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; _123=&lt;span class=&#34;number&#34;&gt;23&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; $&lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;a=&lt;span class=&#34;number&#34;&gt;33&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; 变量a = &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//java支持中文命名  但是最好不要&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;111&lt;/span&gt;a = &lt;span class=&#34;number&#34;&gt;1111&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//不合法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int a# = 0;//不合法&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//不合法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;驼峰命名法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;方法名和变量名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标识符是一个单独的单词时，所有的字母都小写，eg: main；&lt;/li&gt;
&lt;li&gt;标识符由多个单词组成时，除第一个单词外其他所有的单词首字母大写，eg: getName；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类名和接口名：每个单词的首字母都要大写，其余字母小写，eg: BookStore。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;常量： 所有单词的所有字母都大写，多个单词时，单词和单词之间用下划线分隔，eg：SALE_PRICE。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;常量和变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常量和变量&#34;&gt;#&lt;/a&gt; 常量和变量&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;常量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常量&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;常量&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;在程序运行过程中，值不可以发生改变的量，称为 &lt;code&gt;常量&lt;/code&gt; 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;常量通常指的是一个固定的值，eg：1、2、3、’a’、’b’、true、false、”helloWorld” 等。&lt;/li&gt;
&lt;li&gt;在 java 语言中，主要利用关键字 final 来定义一个常量。&lt;/li&gt;
&lt;li&gt;常量一旦被初始化后就不能更改其值。&lt;/li&gt;
&lt;li&gt;声明格式：final type varName = value;&lt;/li&gt;
&lt;li&gt;为了更好的区分和表述，一般将 1、2、3、’a’、’b’、true、false、”helloWorld” 等称为 &lt;code&gt;字符常量&lt;/code&gt; ，而使用 final 修饰的 PI 等称为 &lt;code&gt;符号常量&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;常量分类&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;常量类型&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;举例&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;字符串常量&lt;/td&gt;
&lt;td&gt;用双引号括起来的内容&lt;/td&gt;
&lt;td&gt;“HelloWorld”，“程序员”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;整数常量&lt;/td&gt;
&lt;td&gt;不带小数的数字&lt;/td&gt;
&lt;td&gt;666，-88&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;小数常量&lt;/td&gt;
&lt;td&gt;带小数的数字&lt;/td&gt;
&lt;td&gt;13.14，-5.21&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字符常量&lt;/td&gt;
&lt;td&gt;用单引号括起来的内容&lt;/td&gt;
&lt;td&gt;‘A’，‘0’， ‘我’&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;布尔常量&lt;/td&gt;
&lt;td&gt;布尔值，表示真假&lt;/td&gt;
&lt;td&gt;只有两个值：true，false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;空常量&lt;/td&gt;
&lt;td&gt;一个特殊的值，空值&lt;/td&gt;
&lt;td&gt;值是：null&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h3 id=&#34;变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#变量&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;变量&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;&lt;code&gt;变量&lt;/code&gt; 就是计算机内存中的一块存储单元。变量就是申请内存来存储值。即，当创建变量的时候，需要在内存申请空间。&lt;br&gt;
变量所占据的空间大小有 &lt;code&gt;数据类型&lt;/code&gt; 来决定。&lt;br&gt;
内存管理系统根据变量的类型为变量分配存储空间，分配的空间只能用来存储该类型数据。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WEv6xO&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/14/WEv6xO.png&#34; alt=&#34;WEv6xO.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;因此，通过不同类型的变量，可以在内存中存储整数、小数或者字符。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;定义变量：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;数据类型  变量名  = 变量值；&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;变量使用的注意事项：
&lt;ul&gt;
&lt;li&gt;在同一个大括号范围内，变量名称不允许重复。&lt;/li&gt;
&lt;li&gt;变量在第一次使用之前必须进行初始化（赋值）。&lt;/li&gt;
&lt;li&gt;对于我们的 long 和 flot 类型，在声明该类型的变量的时候，必须在其末尾添加标记。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//声明的同时完成了变量的初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       a = &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; b;&lt;span class=&#34;comment&#34;&gt;//声明变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       b = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//初始化变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       b = b+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//变量使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       System.out.println(b);&lt;span class=&#34;comment&#34;&gt;//使用变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;数据类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据类型&#34;&gt;#&lt;/a&gt; 数据类型&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;进制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#进制&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;进制&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;二进制， &lt;code&gt;基数为2&lt;/code&gt; ，进位规则是 &lt;code&gt;“逢二进一”&lt;/code&gt; 。&lt;br&gt;
二进制数据是用 &lt;code&gt;0&lt;/code&gt;  和 &lt;code&gt;1&lt;/code&gt;  两个数码来表示的数。&lt;br&gt;
java 中，二进制数以 0b 或 0B 开头。&lt;br&gt;
数字计算机只能识别和处理由‘0’、‘1’符号串组成的代码，其运算模式是二进制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;八进制， &lt;code&gt;基数为8&lt;/code&gt; ，进位规则是 &lt;code&gt;“逢八进一”&lt;/code&gt; 。&lt;br&gt;
八进制数据是由 &lt;code&gt;0-7&lt;/code&gt;  八个数码表示的数。&lt;br&gt;
java 中，二进制数以 0 开头。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;十六进制， &lt;code&gt;基数为16&lt;/code&gt; ，进位规则是 &lt;code&gt;“逢十六进一”&lt;/code&gt; 。&lt;br&gt;
十六进制数据是用 &lt;code&gt;0-9&lt;/code&gt;  和 &lt;code&gt;A-F(a-f)&lt;/code&gt;  十六个数码来表示的数据。&lt;br&gt;
java 中，二进制数以 0x 或 0X 开头。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;十进制与二进制的转换&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;十进制转换成二进制：&amp;quot;除 2 取余，逆序排列&amp;quot; 法。&lt;/li&gt;
&lt;li&gt;二进制转换成十进制：使用权相加法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;二进制与八进制的转换&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二进制转换成八进制：从右往左每 3 位按二进制转十进制的方式转换。&lt;/li&gt;
&lt;li&gt;八进制转换成二进制：每个数按十进制转二进制的方式转换为 3 位二进制，不足时补齐。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;二进制与十六进制的转换&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二进制转换成十六进制：从右往左每 4 位按二进制转十进制的方式转换。&lt;/li&gt;
&lt;li&gt;十六进制转换成二进制：每个数按十进制转二进制的方式转换为 4 位二进制，不足时补齐。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;计算机存储单元&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计算机存储单元&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;计算机存储单元&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;计算机可以用来存储数据，无论内存还是硬盘，计算机存储设备的最小信息单元叫 “位（bit）”, 又称 “比特位”，通常小写字母 b 表示。而计算机中的基本存储单元叫 “字节（byte）”，通常用大写字母 “B” 表示，字节是由连续的 8 个位组成的。&lt;/p&gt;
&lt;p&gt;1 B = 8bit    1KB = 1024B&lt;br&gt;
1MB = 1024KB  1GB = 1024MB&lt;br&gt;
1TB = 1024GB&lt;/p&gt;
&lt;h3 id=&#34;数据类型-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据类型-2&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;数据类型&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;java 是强类型语言。对于每一种数据都给出了明确的数据类型，不同数据类型也分配了不同的存储空间，所以他们表示的数据大小也是不一样的。&lt;br&gt;
java 的两大数据类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内置数据类型&lt;/li&gt;
&lt;li&gt;引用数据类型&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/WVSJRP&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/14/WVSJRP.jpg&#34; alt=&#34;WVSJRP.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对比 C 语言的数据类型，进行学习。&lt;br&gt;
&lt;a href=&#34;https://imgtu.com/i/WV9HbD&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/14/WV9HbD.jpg&#34; alt=&#34;WV9HbD.jpg&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;java 语言提供了 8 种基本数据类型。包括六中数字类型（四个整数型，两个浮点型），一种字符型，还有一种布尔类型。&lt;/p&gt;
&lt;p&gt;各个数据类型占用内存和取值范围，如表所示。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/WM5RRf&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/16/WM5RRf.png&#34; alt=&#34;WM5RRf.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意：&lt;/code&gt; 在 java 中整数默认数据类型时 int，浮点数的默认数据类型是 double。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5pdGhlaW1hLmNvbS9uZXdzLzIwMjAwMTE2LzEwMzQzNi5odG1s&#34;&gt;取值范围的推理过程参考&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;整型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#整型&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;整型&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;byte、short、int、long。&lt;/li&gt;
&lt;li&gt;java 各个整数类型取值范围和字段长度，不受操作系统的影响，以保证 java 程序的可移植性。&lt;/li&gt;
&lt;li&gt;java 的整型常量默认为 int 型，声明 long 型变量必须在其后加‘l’或‘L’。&lt;/li&gt;
&lt;li&gt;java 程序中变量通常声明为 int 类型，除非不足以表示较大的数，才使用 long 类型。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;浮点型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#浮点型&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;浮点型&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;十进制数形式：形如：5.12、6.430f、.67 (必须有小数点)。&lt;/li&gt;
&lt;li&gt;科学计数形式：形如：5.12e2、6.87E3、7896e-6&lt;/li&gt;
&lt;li&gt;float, 单精度，可以精确到 7 位有效数字。&lt;/li&gt;
&lt;li&gt;double，双精度，精度是 float 的两倍。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt; f = &lt;span class=&#34;number&#34;&gt;3.14F&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//浮点数默认的类型是double  当我们想要表示一个float类型的浮点数的时候   此时我们就需要在数值后边加上一个F或者f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt;  d = &lt;span class=&#34;number&#34;&gt;3.14D&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt;  f1 = &lt;span class=&#34;number&#34;&gt;0.1f&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; d1 = &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt;/&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(f1 == d1);&lt;span class=&#34;comment&#34;&gt;//false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt; f2 = &lt;span class=&#34;number&#34;&gt;42323442F&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt; f3 = f2 +&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(f2==f3);&lt;span class=&#34;comment&#34;&gt;//true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;以上代码中，由于受到 &lt;code&gt;长度&lt;/code&gt; 和 &lt;code&gt;精度&lt;/code&gt; 的限制， &lt;code&gt;无法精确的表示一些浮点数&lt;/code&gt; ，只是近似的等于。因此在以后的开发中，当我们在遇到需要精确表示小数的时候 特别是金融方面的时候，千万不要直接使用 float 和 double 去表示。&lt;/p&gt;
&lt;h3 id=&#34;字符型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符型&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;字符型&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;java 中的所有字符都是使用 Unicode 编码。一个字符可以存储一个字母，可以存储 &lt;code&gt;一个&lt;/code&gt; 汉字，还可以存储其他字符。&lt;/li&gt;
&lt;li&gt;字符的表示形式：&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;comment&#34;&gt;//字符的第一种表示形式  使用单引号引起来的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;  c1 =&lt;span class=&#34;string&#34;&gt;&amp;#x27;1&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;  c2 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;中&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; c3 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;a&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; c4 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;amp;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//转义字符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt;  c5= &lt;span class=&#34;string&#34;&gt;&amp;#x27;\t&amp;#x27;&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//制表符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; c6=&lt;span class=&#34;string&#34;&gt;&amp;#x27;\r&amp;#x27;&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//回车&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;keyword&#34;&gt;char&lt;/span&gt; c7 = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//换行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;comment&#34;&gt;//常量表示   直接使用unicoide值进行表示&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;布尔类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#布尔类型&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;布尔类型&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;boolean 表示的是逻辑值，只有两个值：true 和 false。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;字符串类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串类型&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;字符串类型&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;字符串类型不属于基本数据类型，属于引用数据类型。&lt;/li&gt;
&lt;li&gt;字符串是由 &lt;code&gt;双引号&lt;/code&gt; 引起来的多个字符的组合序列。&lt;/li&gt;
&lt;li&gt;字符串的默认值是 null。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;数据类型转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据类型转换&#34;&gt;#&lt;/a&gt; 数据类型转换&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;数据类型转换分为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动类型转换&lt;/li&gt;
&lt;li&gt;强制类型转换&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;自动类型转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#自动类型转换&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;自动类型转换&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;自动类型转换：把一个数据类型范围小的数值或者变量赋值给一个数据类型范围大的变量。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//完成了数据类型的转换  将int类型转换为了double&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt;  d  = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;// 100 这个数值单独来说他是属于int类型   但是当我们完成赋值操作之后 此时保存在d这个变量中的数据就是double  自动类型转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt;  b = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;// byte -128--127&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i= b;&lt;span class=&#34;comment&#34;&gt;//  将byte转换为了int   有小范围到大范围 自动类型转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;i = &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;b = (&lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt;)i;&lt;span class=&#34;comment&#34;&gt;//强制转换  转换是存在一定的风险的   会造成数据的损失&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(b);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/WMO4yt&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/16/WMO4yt.png&#34; alt=&#34;WMO4yt.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上图从左到右可以进行自动类型转换。&lt;/p&gt;
&lt;h3 id=&#34;强制类型转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#强制类型转换&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;强制类型转换&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;强制类型转换：把一个数据类型范围大的数值或者变量赋值给另一个数据类型范围小的变量。&lt;br&gt;
当把大范围的数据强制转换为小范围的数据的时候 &lt;code&gt;保留低位,舍弃高位&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;数据类型  变量  = （目标类型） 变量/数据；&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt;  b1 = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt;  b2 =&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt; b3 = (&lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt;) (b1 + b2);&lt;span class=&#34;comment&#34;&gt;// 在进行算术运算时  会默认自动将整数转换为int类型 在计算结果   结果就是一个int类型  此时如果要将b1 + b2的结果赋值给b3  则需要强制转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;运算符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#运算符&#34;&gt;#&lt;/a&gt; 运算符&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;运算符：对常量或者变量进行操作的符号。&lt;br&gt;
表达式：用运算符把常量或者变量连接起来的符合 java 语法的字符串，称为表达式。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; b = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//int c = a + b ;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;c  = a + b;&lt;span class=&#34;comment&#34;&gt;//表达式   类型  将a+b的结果赋值给c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;java 提供的运算符分为以下几类：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;算数运算符
关系运算符
位运算符（左*2，右/2）
逻辑运算符
赋值运算符
其他运算符
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;算数运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#算数运算&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;算数运算&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;算数运算符包括加法（+）、减法（-）、乘法（*）、除法（/）、取余（%）、自增（++）、自减（–）。&lt;/p&gt;
&lt;p&gt;&lt;font color = red&gt;注意：&lt;/font&gt;  除法运算结果是两数相除取整。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//算术运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;  aa =   &lt;span class=&#34;number&#34;&gt;15&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; bb = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; dd = aa / bb;&lt;span class=&#34;comment&#34;&gt;//商&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; ee = aa % bb;&lt;span class=&#34;comment&#34;&gt;//余数   取余运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(dd);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(ee);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;自增（减）运算
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;a++;a--;&lt;/code&gt;  表示先运算再自增 (减) 1。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;++a;--a;&lt;/code&gt;  表示先自增（减）1，再进行运算。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 自增自减&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;  a2 = &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  a2--;&lt;span class=&#34;comment&#34;&gt;//先取值 后运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  System.out.println(a2);&lt;span class=&#34;comment&#34;&gt;// 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  --a2;&lt;span class=&#34;comment&#34;&gt;// 先运算  后取值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  System.out.println(a2);&lt;span class=&#34;comment&#34;&gt;//9 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;单独使用的时候，++ 和 -- 无论放在变量的左边或者右边 ，结果都是一样的。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//自增自减&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;  a2 = &lt;span class=&#34;number&#34;&gt;11&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       a3= a2--;&lt;span class=&#34;comment&#34;&gt;// 先取值（a3 = a2）  后运算（a2=a2-1）   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       System.out.println(a3);&lt;span class=&#34;comment&#34;&gt;//a3 =11  a2 =10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       a3= --a2;&lt;span class=&#34;comment&#34;&gt;// 先运算（a2= a2-1）a2=9  后取值 a3= a2  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       System.out.println(a3);&lt;span class=&#34;comment&#34;&gt;//9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;思考练习：&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//自增自减的练习&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; x = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; y = x++ + x++ + x++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(y);&lt;span class=&#34;comment&#34;&gt;// 10 +11 + 12 = 33&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(x);&lt;span class=&#34;comment&#34;&gt;// 13 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;整数运算
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;byte、short、int&lt;/code&gt;  类型的数据之间进行运算，结果均为 &lt;code&gt;int类型&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;任意操作数为 long 类型，则结果必为 &lt;code&gt;long类型&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;   i1 = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i2 = &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; sum1 = i1 + i2; &lt;span class=&#34;comment&#34;&gt;// int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;byte&lt;/span&gt;  b1 = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;short&lt;/span&gt; s1 = &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; sum2 = b1 +s1 ;&lt;span class=&#34;comment&#34;&gt;// int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt;  l1 = &lt;span class=&#34;number&#34;&gt;23L&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; sum3 =  i1 + l1;&lt;span class=&#34;comment&#34;&gt;// long&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;浮点运算
&lt;ul&gt;
&lt;li&gt;两个操作数都是 float 时，结果为 &lt;code&gt;float类型&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;任意操作数为 double 类型时，结果必为 &lt;code&gt;double类型&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 浮点运算规则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt;  f1 = &lt;span class=&#34;number&#34;&gt;3.14F&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt; f2 = &lt;span class=&#34;number&#34;&gt;2.56F&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt; sumf  = f1 + f2;&lt;span class=&#34;comment&#34;&gt;// 如果两个操作数都是float类型 则结果可以使用float保存也可以使用double（这是类型自动转换）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      System.out.println(sumf);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; d1 = &lt;span class=&#34;number&#34;&gt;4.5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; sumd = f1 + d1 ;&lt;span class=&#34;comment&#34;&gt;//浮点数在进行运算的时候  如果有一个操作数为double  则结果肯定为double&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;取模求余
&lt;ul&gt;
&lt;li&gt;浮点数也可以作取余运算。&lt;/li&gt;
&lt;li&gt;取余运算的结果为两操作数相除的余数， 余数的符号和符号与左边操作数的符号保持一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//取模求余运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; ss1 =  &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; % &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; ss2 = -&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; % &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; ss3 = &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; % -&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; ; &lt;span class=&#34;comment&#34;&gt;// 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;字符算数运算
&lt;ul&gt;
&lt;li&gt;char 类型参与算数运算，使用的是字符的 &lt;code&gt;ascii码&lt;/code&gt; 。‘A’=97,‘a’=65,‘0’=48。&lt;/li&gt;
&lt;li&gt;算数表达式中包含 &lt;code&gt;多个基本数据类型&lt;/code&gt; 的操作数的时候，整个算数表达式的 &lt;code&gt;类型会自动提升&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;提升规则：&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//字符串的操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      String  str1 = &lt;span class=&#34;string&#34;&gt;&amp;quot;hello&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; aa = &lt;span class=&#34;number&#34;&gt;22&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      String str2 = str1 + aa;&lt;span class=&#34;comment&#34;&gt;// hello22&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;字符串的 “+” 操作
&lt;ul&gt;
&lt;li&gt;当字符串和数值型的数据进行运算时（+），此时进行的是字符串拼接，而不是算术运算。&lt;/li&gt;
&lt;li&gt;&amp;quot;+&amp;quot; 称为字符串拼接字符。混合拼接时是 &lt;code&gt;从左往右依次运算&lt;/code&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt; String  str3 = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;999&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;&amp;quot;年中国&amp;quot;&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;// 1000年中国&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(&lt;span class=&#34;number&#34;&gt;2000&lt;/span&gt;+ &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt; +&lt;span class=&#34;string&#34;&gt;&amp;quot;中国&amp;quot;&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;+&lt;span class=&#34;number&#34;&gt;666&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//2020中国6666&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;关系运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关系运算&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;关系运算&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;为 Java 支持的关系运算符。关系运算的结果都是 &lt;code&gt;Boolean类型&lt;/code&gt; 。结果只能是 true 或 false。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;== &lt;/code&gt; 、 &lt;code&gt;！=&lt;/code&gt;  、 &lt;code&gt;&amp;gt;&lt;/code&gt;  、 &lt;code&gt;&amp;lt;&lt;/code&gt;  、   &lt;code&gt;&amp;gt;=&lt;/code&gt;  、  &lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 关系运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;  m = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(m==n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(m!=n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(m&amp;gt;n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(m&amp;lt;n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(m&amp;gt;=n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(m&amp;lt;=n);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//如果在开发中，  比较的结果在后续程序中需要使用，此时我们则需要使用一个变量将比较的结果保存起来&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt;  flag = m &amp;gt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(flag);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;赋值运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#赋值运算&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;赋值运算&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;赋值运算符： &lt;code&gt;=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;扩展的赋值运算符： &lt;code&gt;=&lt;/code&gt; 、 &lt;code&gt;+=&lt;/code&gt; 、 &lt;code&gt;-=&lt;/code&gt; 、 &lt;code&gt;*=&lt;/code&gt; 、 &lt;code&gt;/=&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;扩展赋值运算符中，先进性算术运算后进行赋值，隐含着强制类型转换。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//  赋值运算符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;  a1 = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      a1 += &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// a1 = a1 + 10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      System.out.println(a1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;short&lt;/span&gt; s1 = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      s1 = (&lt;span class=&#34;keyword&#34;&gt;short&lt;/span&gt;)(s1 + &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      s1 += &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;// 类似于 s1 = s1 + 10  此时的扩展赋值运算符  隐含着类型的强制转换&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;条件运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#条件运算&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;条件运算&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;三元运算符： &lt;code&gt;关系表达式 ? 表达式1： 表达式2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;运算规则：
&lt;ul&gt;
&lt;li&gt;计算关系表达式的值。&lt;/li&gt;
&lt;li&gt;如果关系表达式的值为 true，则结果为表达式 1 的值。&lt;/li&gt;
&lt;li&gt;如果关系表达式的值为 fasle，则结果为表达式 2 的值。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 9 三元运算符&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a9 = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a10 = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  System.out.println(a9 &amp;gt; a10 ? a10 : a9);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;逻辑运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#逻辑运算&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;逻辑运算&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;逻辑运算符：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;(与)&lt;/code&gt; : 只要有一个为 false 结果就 false。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;|(或)&lt;/code&gt; : 只要有一个为 true 结果就 true。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;！(非)&lt;/code&gt; : 取反。true 变 false，false 变 true。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^(异或)&lt;/code&gt;  : 结果不同为 true，相同为 false。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//逻辑运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; k = &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      System.out.println((i &amp;gt; j) &amp;amp; (i &amp;gt;k));&lt;span class=&#34;comment&#34;&gt;//false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      System.out.println((i &amp;lt; j)&amp;amp;(i &amp;gt; k));&lt;span class=&#34;comment&#34;&gt;//false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      System.out.println((i&amp;gt;j) | (i &amp;lt; k)); &lt;span class=&#34;comment&#34;&gt;// true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;短路逻辑运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#短路逻辑运算&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;短路逻辑运算&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;amp;&amp;amp; 短路与&lt;/code&gt;  ：作用和 &amp;amp; 相同，但是有短路效果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;|| 短路或&lt;/code&gt;  ：作用和 | 相同，但是有短路效果。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;amp; ，无论左边真或假 右边都会执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;amp;&amp;amp; ， 若果左边为真，右边肯定会执行。如果左边为 false 右边就不执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;| 无论左边为真或假，右边都是要执行。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;|| 如果左边为 true ， 右边不执行 。  如果左边为 false，此时右边才需要执行。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//6 短路逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; p = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; c = &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//        System.out.println(p++ &amp;gt;4 &amp;amp; c++ &amp;gt;5);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//        System.out.println(p+&amp;quot;----&amp;quot;+c);// 4 ---5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(p++ &amp;gt;&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; &amp;amp;&amp;amp; c++ &amp;gt;&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//左边为false  右边则不参与运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(p+&lt;span class=&#34;string&#34;&gt;&amp;quot;----&amp;quot;&lt;/span&gt;+c);&lt;span class=&#34;comment&#34;&gt;//4---4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;位运算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#位运算&#34;&gt;#&lt;/a&gt; &lt;strong&gt; &lt;code&gt;位运算&lt;/code&gt; &lt;/strong&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;位运算指的是进行二进制位的运算。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;位运算符：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;~ 取反 &lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp; 按位与&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;| 按位或&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;^&lt;/code&gt;  按位异或&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;&amp;lt; 左移&lt;/code&gt; ：将整个 2 进制数据左移一位 相当与将原来的数乘 2。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;gt;&amp;gt; 右移 &lt;/code&gt;  : 将整个的 2 进制右移一位  相当与将原来的数除 2。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&amp;amp; 和 |，如果两边的操作数类型是 boolean 类型，则是 &lt;code&gt;逻辑运算&lt;/code&gt;  。如果两边的操作数是整数 则为 &lt;code&gt;位运算&lt;/code&gt; 。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//7 位运算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a4 = &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a5 = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a6=&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       System.out.println(~a4);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       System.out.println(a4 &amp;amp; a5);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// 使用最高效的方法   计算2的三次方&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       System.out.println(a6 * a6  * a6);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       System.out.println(a6 &amp;lt;&amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//8 面试题&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a7 = &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a8 = &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 需求  在不增加变量的情况下  交换两个整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//        int a9 = a7;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//        a7 = a8;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//        a8 = a9;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//        System.out.println(a7 +&amp;quot;-------&amp;quot;+ a8);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//经过三次异或  就可以交换两个数的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a7 = a7 ^ a8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a8 = a7 ^ a8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        a7 = a7 ^ a8;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        System.out.println(a7 +&lt;span class=&#34;string&#34;&gt;&amp;quot;-------&amp;quot;&lt;/span&gt;+ a8);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMjEvMDEvX3hvci5odG1s&#34;&gt;异或运算详解参考&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
    <entry>
        <id>http://example.com/2021/07/15/computer-science/java/Java-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</id>
        <title>Java-面向对象</title>
        <link rel="alternate" href="http://example.com/2021/07/15/computer-science/java/Java-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
        <content type="html">&lt;h1 id=&#34;面向对象&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#面向对象&#34;&gt;#&lt;/a&gt; 面向对象&lt;/h1&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkviolet面向对象font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkviolet面向对象font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;面向对象&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;表格思维就是一种典型的面向对象的思维。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;面向对象和面向过程的区别&lt;/code&gt; &lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;面向对象具有三大特征：封装性、&lt;font color = &#34;DarkTurquoise&#34;&gt;继承性和多态性&lt;/font&gt;，而面向过程没有继承性和多态性，并且面向过程的封装只是封装功能，而面向对象可以封装数据和功能。所以面向对象优势更明显。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一个经典的比喻：面向对象是盖浇饭、面向过程是蛋炒饭。盖浇饭的好处就是 “菜”“饭” 分离，从而提高了制作盖浇饭的灵活性。饭不满意就换饭，菜不满意换菜。用软件工程的专业术语就是&lt;font color = &#34;DarkTurquoise&#34;&gt;“可维护性”&lt;/font&gt;比较好，“饭” 和 “菜” 的&lt;font color = &#34;DarkTurquoise&#34;&gt;耦合度&lt;/font&gt;比较低。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkviolet类和对象font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkviolet类和对象font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;类和对象&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;面向对象的两大核心：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;类&lt;/code&gt; ：是对现实生活中一类具有共同属性的行为的事物的抽象。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;类的特点：
&lt;ul&gt;
&lt;li&gt;类是对象的数据类型。&lt;/li&gt;
&lt;li&gt;类是具有相同属性和行为的一组对象的集合。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;对象&lt;/code&gt; ：类的具体化。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;属性：对象具有的各种特种，每个对象的每个属性拥有特定的值。&lt;/li&gt;
&lt;li&gt;行为：对象能够执行的操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;类和对象的关系&lt;/code&gt; ：&lt;/p&gt;
&lt;p&gt;​	类 ，是对现实生活中一类具有共同属性的行为的事物的抽象。&lt;br&gt;
​	对象，就是该类下的一个真实存在的实体。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt; 类 &lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;类的重要性：是 java 程序的基本组成单元。类可以看作是一类对象的模板，对象可以看作是该类的一个具体实例。类是用于描述同一类型的对象的抽象概念，类中定义了这一类对象所具有的共同属性和方法。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类的组成：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font color = &#34;DarkTurquoise&#34;&gt;成员变量&lt;/font&gt;： 定义在类的内部，方法的外部的变量。体现类的&lt;font color = &#34;DarkTurquoise&#34;&gt;属性&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;&lt;font color = &#34;DarkTurquoise&#34;&gt;成员方法&lt;/font&gt;：体现类的&lt;font color = &#34;DarkTurquoise&#34;&gt;行为&lt;/font&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;类的定义步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;定义一个类。&lt;/li&gt;
&lt;li&gt;编写类的成员变量。&lt;/li&gt;
&lt;li&gt;编写类的成员方法。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Triangle&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//成员变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; side1 = &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; side2 = &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; side3 = &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//无参构造器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Triangle&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//带参构造器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Triangle&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; side1,&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; side2,&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; side3)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.side1 = side1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.side2 = side2;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.side3 = side3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//字符描述&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Triangle:side1 = &amp;quot;&lt;/span&gt;+side1+&lt;span class=&#34;string&#34;&gt;&amp;quot; side2 = &amp;quot;&lt;/span&gt;+side2+&lt;span class=&#34;string&#34;&gt;&amp;quot; side3 = &amp;quot;&lt;/span&gt;+side3;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;对象&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建对象：类名（类型） 对象名（变量）= new 类名 ();&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Phone p = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Phone();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;使用对象：
&lt;ul&gt;
&lt;li&gt;使用成员变量：
&lt;ul&gt;
&lt;li&gt;对象名。属性名；// 获取属性&lt;/li&gt;
&lt;li&gt;对象名。属性名 = 对应类型的值；// 给属性赋值&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;使用成员方法：
&lt;ul&gt;
&lt;li&gt;格式  对象名。方法名（实参列表）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;对象的内存分析&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Java 中的类，属于引用数据类型。引用数据类型的内存分析，涉及两块常见的内存空间：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font color = &#34;DarkTurquoise&#34;&gt;堆内存&lt;/font&gt;：保存对象的&lt;u&gt;具体信息&lt;/u&gt;。在程序中通过 &lt;code&gt;new&lt;/code&gt;  来开辟堆内存。&lt;/li&gt;
&lt;li&gt;&lt;font color = &#34;DarkTurquoise&#34;&gt;栈内存&lt;/font&gt;：保存一块堆内存的&lt;u&gt;地址&lt;/u&gt;。(通过地址找到堆内存，然后找到对象内容)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://imgtu.com/i/WccXrT&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/07/24/WccXrT.png&#34; alt=&#34;WccXrT.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gitee.com/MoonHalo/blog-photos/raw/master/java-img/01.png&#34;&gt;&lt;img data-src=&#34;https://gitee.com/MoonHalo/blog-photos/raw/master/java-img/01.png&#34; alt=&#34;01.png&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对象的实例化有两种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;声明并完成实例化对象。（一步到位）&lt;/li&gt;
&lt;li&gt;先声明，再实例化。（分步进行）&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;new 类()&lt;/code&gt;  的作用是派皮堆内存，而将他赋值给一个变量，本质上是将堆内存的地址存在了栈内存中。&lt;/li&gt;
&lt;li&gt;将对象进行信息修改时，先通过栈内存中存放的地址找到堆内存中的具体信息，然后对对象信息进行修改。&lt;/li&gt;
&lt;li&gt;如果程序只声明了对象，但未进行实例化，此时无法调用对象信息。常常会出现 &lt;code&gt;空指针异常&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;多个对象&lt;/code&gt; （同类）在内存中，都有&lt;u&gt;不同&lt;/u&gt;的内存划分。&lt;font color = &#34;DarkTurquoise&#34;&gt;成员变量&lt;/font&gt;存储在各自的内存区域中，&lt;font color = &#34;DarkTurquoise&#34;&gt;成员方法&lt;/font&gt;多个对象共有的。&lt;/li&gt;
&lt;li&gt;当&lt;font color = &#34;DarkTurquoise&#34;&gt;多个对象&lt;/font&gt;的引用指向&lt;font color = &#34;DarkTurquoise&#34;&gt;相同的内存空间&lt;/font&gt;时（即，多个变量记录的对内存地址相同）：只要任何一个对象修改了内存中的数据，之后任何一个对象去访问数据，都是&lt;u&gt;修改后的数据&lt;/u&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Student stu1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Student(&lt;span class=&#34;string&#34;&gt;&amp;quot;李明&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Student stu2 = stu1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stu2.name = &lt;span class=&#34;string&#34;&gt;&amp;quot;张二&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;System.out.println(stu1.name);&lt;span class=&#34;comment&#34;&gt;//张二&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkviolet成员变量和局部变量font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkviolet成员变量和局部变量font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;成员变量和局部变量&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;存在位置：
&lt;ul&gt;
&lt;li&gt;成员变量位于类的内部，方法的外部；&lt;/li&gt;
&lt;li&gt;局部变量位于方法的内部 / 形参。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;内存中的位置：
&lt;ul&gt;
&lt;li&gt;成员变量位于&lt;font color = &#34;DarkTurquoise&#34;&gt;堆内存&lt;/font&gt;；&lt;/li&gt;
&lt;li&gt;局部变量位于&lt;font color = &#34;DarkTurquoise&#34;&gt;栈内存&lt;/font&gt;；&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;生命周期：
&lt;ul&gt;
&lt;li&gt;成员变量随着&lt;font color = &#34;DarkTurquoise&#34;&gt;对象&lt;/font&gt;的产生而产生，随着对象的消亡而消亡。&lt;/li&gt;
&lt;li&gt;局部变量随着&lt;font color = &#34;DarkTurquoise&#34;&gt;方法&lt;/font&gt;的调用而产生，随着方法的执行结束而消失。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;初始值：
&lt;ul&gt;
&lt;li&gt;成员变量有&lt;font color = &#34;DarkTurquoise&#34;&gt;默认的初始值&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;局部变量没有默认值。必须先定义再使用，并且在使用之前必须进行&lt;font color = &#34;DarkTurquoise&#34;&gt;显示的初始化&lt;/font&gt;操作。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Test&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a;&lt;span class=&#34;comment&#34;&gt;//成员变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(a);&lt;span class=&#34;comment&#34;&gt;//a=0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; b ;&lt;span class=&#34;comment&#34;&gt;//局部变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    System.out.println(b);&lt;span class=&#34;comment&#34;&gt;//b未进行初始化，编译会报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkviolet权限修饰符font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkviolet权限修饰符font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;权限修饰符&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;访问级别&lt;/th&gt;
&lt;th&gt;访问控制修饰符&lt;/th&gt;
&lt;th&gt;同类&lt;/th&gt;
&lt;th&gt;同包不同类（不含子类）&lt;/th&gt;
&lt;th&gt;同包子类&lt;/th&gt;
&lt;th&gt;不同包不同类（不含子类）&lt;/th&gt;
&lt;th&gt;不同包子类&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;font color= &#34;DarkTurquoise&#34;&gt;公开&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;public&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;受保护&lt;/td&gt;
&lt;td&gt;protected&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;–&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√（注意）&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;默认&lt;/td&gt;
&lt;td&gt;没有访问控制修饰符&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;–&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;–&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;私有&lt;/td&gt;
&lt;td&gt;private&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;√&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;—&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;—&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;–&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;–&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkviolet状态修饰符font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkviolet状态修饰符font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;状态修饰符&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;final&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;final 是一个关键字，他可以修饰成员变量、成员方法、类。&lt;br&gt;
final 修饰的特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;u&gt;修饰方法&lt;/u&gt;：修饰的方法，不能被&lt;font color = DarkTurquoise&gt;重写&lt;/font&gt;；&lt;/li&gt;
&lt;li&gt;&lt;u&gt;修饰成员变量&lt;/u&gt;：修饰的变量是常量。不能被二次赋值，只能赋值一次。&lt;/li&gt;
&lt;li&gt;&lt;u&gt;修饰类&lt;/u&gt;：修饰的类不能被&lt;u&gt;继承&lt;/u&gt;。&lt;/li&gt;
&lt;li&gt;&lt;u&gt;修饰局部变量&lt;/u&gt;：被修饰的变量是基本类型时，变量的值不能被改变。被修饰的是引用类型时，变量的&lt;font color = DarkTurquoise&gt;地址值无法改变&lt;/font&gt;，但是引用&lt;font color = DarkTurquoise&gt;地址指向的对象的属性&lt;/font&gt;是可以改变的。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;static&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;static 可以修饰成员方法、成员变量。在 java 类中，可以使用 static 修饰属性、方法、代码块、内部类。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;被 static 修饰的成员的特点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;随着类得加载而加载，&lt;font color = DarkTurquoise&gt;优先于对象存在&lt;/font&gt;；&lt;/li&gt;
&lt;li&gt;修饰的成员，被所有对象所&lt;font color = tomato&gt;共享&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;访问权限允许时，可以不创建对象，&lt;font color = DarkTurquoise&gt;直接被类调用&lt;/font&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;static 的访问特点&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;非静态成员方法：能访问静态的成员变量、成员方法，也能访问非静态的成员变量和方法。&lt;/li&gt;
&lt;li&gt;静态成员方法：&lt;font color = DarkTurquoise&gt;只能&lt;/font&gt;访问静态的成员变量和成员方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkviolet方法font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkviolet方法font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;方法&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;方法的定义和调用&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;无参方法的定义和调用&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//方法的定义&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; 方法名()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    方法体;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//方法的调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  方法名();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;每个方法在被调用执行的时候，都会被加载到&lt;font color = SkyBlue&gt;栈内存&lt;/font&gt;，并且拥有自己独立的内存空间，方法内部的代码执行完毕之后，会从栈内存中出栈 ，释放空间。&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;带参方法的定义和调用&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;  方法名称（参数类型  参数名称，参数类型  参数名称,....）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;调用：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;方法名称（参数&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;，参数&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;，参数&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,....,参数n）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;方法调用时，传入的参数的数量和类型必须和方法定义中的类型和数量相匹配。否则 程序就会报错。&lt;/p&gt;
&lt;p&gt;&lt;u&gt;形参&lt;/u&gt;：方法定义是的参数。&lt;br&gt;
&lt;u&gt;实参&lt;/u&gt;：方法调用时传递进来的参数。&lt;/p&gt;
&lt;p&gt;形参和实参的功能就是传递数据，发生方法调用时， 实参的值会传递给形参。&lt;/p&gt;
&lt;p&gt;&lt;font color =Tomato &gt;形参和实参的区别和联系:&lt;/font&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;形参变量只有在方法被&lt;font color =SkyBlue &gt;调用时才会分配内存&lt;/font&gt;，调用结束后 ，就会被立即释放。所以形参变量只在方法内部有效，不能再方法的外部使用。&lt;/li&gt;
&lt;li&gt;实参可以是常量 、变量、表达式、方法等。无论实参是何种类型的数据，在进行方法的调用时，都&lt;font color =SkyBlue &gt;必须有确定的值&lt;/font&gt;。&lt;/li&gt;
&lt;li&gt;实参和形参在数量上、类型上、顺序上都必须严格一致。当然在其中，能够&lt;font color =SkyBlue &gt;自动类型转化&lt;/font&gt;的除外。&lt;/li&gt;
&lt;li&gt;方法调用中，发生的&lt;font color =SkyBlue &gt;数据的传递是单向&lt;/font&gt;。只能有实参传递给形参，而不能把形参反向传递给实参。一旦参数的传递完成，则实参和形参将不会有任何的关系。在方法的调用过程中，形参的值的改变不会影响实参。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;带返回值的方法的定义和调用&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt;  返回值类型   方法名称（参数列表）&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	方法体；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;  数据;&lt;span class=&#34;comment&#34;&gt;//(返回的数据的数据类型必须和返回值类型匹配)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; s =   sum(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     System.out.println(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;comment&#34;&gt;// 计算 1-N之间整数的和&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; sum = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; i &amp;lt; n; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         sum += i;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;  sum;&lt;span class=&#34;comment&#34;&gt;//return 表示将数据返回给方法的调用者&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;&lt;font color = SkyBlue&gt;注意事项&lt;/font&gt;：&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方法不能嵌套定义。方法和方法之间是平行关系，方法和方法之间只能存在&lt;strong&gt;调用关系&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;void 表示无返回值，可以省略 return。或者 &lt;code&gt;return ;&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;方法必须被调用才能执行，不调用是不会执行的。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;方法的参数传递&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font color = &#34;DarkTurquoise&#34;&gt;值传递：&lt;/font&gt;传递的数据本身 。&lt;/li&gt;
&lt;li&gt;&lt;font color = &#34;DarkTurquoise&#34;&gt;引用传递：&lt;/font&gt;传递的地址  传递的是一个引用  所以引用的只要是同一个地址空间，那么任何地方对空间内容的修改，都将引起整个的变化。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     yh(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//此时的8 就是实参&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;  &lt;span class=&#34;title&#34;&gt;yh&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; row)&lt;/span&gt;&lt;/span&gt;&amp;#123; &lt;span class=&#34;comment&#34;&gt;//row 就是形参  需要客户告传递给你的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[][] yh = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[row][];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; i &amp;lt; yh.length; i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         yh[i] = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[i+&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j &amp;lt; i + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(j==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || i==j)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 yh[i][j]= &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &amp;#125;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                 yh[i][j] = yh[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] + yh[i-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;][j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;comment&#34;&gt;// 调用遍历数组的方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     printArr(yh);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;comment&#34;&gt;// 遍历任意的二维数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;  &lt;span class=&#34;title&#34;&gt;printArr&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[][] arr)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; i &amp;lt; arr.length;i++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ; j &amp;lt; arr[i].length; j++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             System.out.print(arr[i][j]+&lt;span class=&#34;string&#34;&gt;&amp;quot;    &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         System.out.println();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] arr = &amp;#123;&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       swap(arr,&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      printArr(arr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;/* 交换数组中两个元素的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;      arr 我们操作的目标数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;      index1 和index2 就是要交换的两个元素的索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;    */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;  &lt;span class=&#34;title&#34;&gt;swap&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] arr,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; index1,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; index2 )&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; temp = arr[index1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       arr[index1] = arr[index2];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       arr[index2]= temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       printArr(arr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;// 遍历数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt;  &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt;  &lt;span class=&#34;title&#34;&gt;printArr&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;[] arr)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; a : arr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           System.out.print (a + &lt;span class=&#34;string&#34;&gt;&amp;quot;  &amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       System.out.println();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;方法的重载&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;构成方法重载的条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;形参的个数不同&lt;/li&gt;
&lt;li&gt;形参类型不同&lt;/li&gt;
&lt;li&gt;不同类型的参数，顺序不同也可以构成重载&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;comment&#34;&gt;//方法1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//方法体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n,&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; m)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;comment&#34;&gt;//方法2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//方法体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; m,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; n)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;comment&#34;&gt;//方法3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//方法体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;double&lt;/span&gt; m)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;span class=&#34;comment&#34;&gt;//方法4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//方法体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//以上四个方法均构成方法重载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;特别注意：&lt;/code&gt; 方法的返回值类型，&lt;strong&gt;不能&lt;/strong&gt;作为方法是否重载的判断依据。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkviolet构造方法font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkviolet构造方法font&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;构造方法&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;构造方法也称为构造器（constructor），用于&lt;strong&gt;对象的初始化&lt;/strong&gt;。构造方法是一个创建对象时被自动调用的特殊方法。&lt;/p&gt;
&lt;p&gt;构造方法的名称要与类名完全一致。构造方法&lt;strong&gt;没有返回值&lt;/strong&gt;（void 也不写）。Java 通过&lt;strong&gt; new&lt;/strong&gt; 关键字来调用构造方法，从而返回该类的一个实例对象，是一种特殊的方法。&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;访问修饰符 类名(参数列表)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//方法体&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;构造方法的注意事项&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果没有自定义构造方法，系统将会给出一个&lt;strong&gt;默认&lt;/strong&gt;的无参构造方法。如果自定义了构造方法，系统将不再提供默认的无参构造器，若还需要使用无参构造器，就必须手动添加。&lt;/li&gt;
&lt;li&gt;无论是否使用无参构造，在开发中，都推荐显式定义无参构造。&lt;/li&gt;
&lt;li&gt;构造方法的一个重要作用是使用带参构造器为成员变量进行初始化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;构造方法的调用&lt;/strong&gt;：在构造方法中可以调用其他的构造方法。可以使用 &lt;code&gt;this参数列表）&lt;/code&gt; 调用本类的其它构造方法。可以使用  &lt;code&gt;super(参数列表)&lt;/code&gt;  调用父类的构造方法。需要注意的一点是，使用 this 和 super 调用构造方法。必须位于构造方法的&lt;strong&gt;第一条语句&lt;/strong&gt;。因此对于构造方法的调用，只能调用一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String name , &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; age)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;(name);&lt;span class=&#34;comment&#34;&gt;// 调用本类的构造方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.age =age;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;font-color-darkvioletjava-beanfont&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-color-darkvioletjava-beanfont&#34;&gt;#&lt;/a&gt; &lt;font color = &#34;DarkViolet&#34;&gt;Java Bean&lt;/font&gt;&lt;/h2&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt; &lt;code&gt;标准Java Bean的写法&lt;/code&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;成员变量：使用 private 修饰。&lt;/li&gt;
&lt;li&gt;提供 getter 和 seter 方法，来访问成员变量。&lt;/li&gt;
&lt;li&gt;提供构造方法： 无参的和带有多个参数的。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Student&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; String name ;&lt;span class=&#34;comment&#34;&gt;//私有化成员变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; age ; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//无参构造器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//带参构造器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Student&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String name ,&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; age)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.name = name ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.age  = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//get、set方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;getAge&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; age;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;setAge&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; age)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.age = age;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; String &lt;span class=&#34;title&#34;&gt;getName&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;setName&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(String name)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;.name = name;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <updated>2021-07-15T10:23:23.000Z</updated>
    </entry>
</feed>
