{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo • All posts by \"计算机科学\" category",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/07/15/computer-science/java/Java-HelloWorld/",
            "url": "http://example.com/2021/07/15/computer-science/java/Java-HelloWorld/",
            "title": "Java-HelloWorld",
            "date_published": "2021-07-15T10:23:23.000Z",
            "content_html": "<h1 id=\"font-color7b68eehelloworldfont\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eehelloworldfont\">#</a> <font color=\"#7B68EE\">HelloWorld</font></h1>\n<p>开发 java 程序步骤：</p>\n<blockquote>\n<p>编写程序<br>\n编译程序<br>\n运行程序</p>\n</blockquote>\n<ul>\n<li><strong> <code>常用dos命令</code> </strong></li>\n</ul>\n<p>在开发 java 程序的过程中，需要在 dos 命令窗口执行命令对源程序进行编译，因此我们需要了解基本的 dos 命令。<br>\n<a href=\"https://imgtu.com/i/WElAr4\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WElAr4.md.png\" alt=\"WElAr4.md.png\"></a></p>\n<ul>\n<li><strong> <code>编写程序</code> </strong></li>\n</ul>\n<p>新建一个.java 文件，用记事本打开，写入以下代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello World!&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> </p>\n<ul>\n<li>\n<p><strong> <code>编译源程序</code> </strong></p>\n<p><code>win+R</code>  键入  <code>cmd</code>  进入 dos 命令操作窗口。<br>\n <code>javac HelloWorld.java</code></p>\n</li>\n</ul>\n<p>编译结束后会出现一个.class 文件，是字节码文件。<br>\n<a href=\"https://imgtu.com/i/WE1Z6S\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WE1Z6S.md.jpg\" alt=\"WE1Z6S.md.jpg\"></a></p>\n<ul>\n<li>\n<p><strong> <code>执行程序</code> </strong></p>\n<p><code>java HelloWorld</code> <br>\n 将该字节码文件通过 JVM 解释给计算机并执行。<br>\n<a href=\"https://imgtu.com/i/WE1a79\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WE1a79.png\" alt=\"WE1a79.png\"></a></p>\n</li>\n</ul>\n<p> </p>\n<p><font color = \"#40E0D0\">源码解析</font></p>\n<blockquote>\n<p>（1） <code>public</code>  修饰符用于限定类或类成员的访问级别。<br>\n（2） <code>class</code>  关键字用于定义类，该类的标识符 是 HelloWorld。<br>\n（3）HelloWorld 类被 public 修饰，应在名为 HelloWorld.java 的文件中声明。<br>\n（5）类标识符后紧跟一对大括号，类成员一般定义在这对大括号中，例如实例成员或者静态成员。<br>\n（6） <code>static</code>  关键字用于声明静态成员，这里定义的是一个静态函数，标识符是 main。<br>\n（7） <code>函数标识符</code> 的命名一般采用 <code>驼峰命令法</code> 。<br>\n（8） <code>void</code>  关键字用于定义无返回值的函数。<br>\n（9） <code>main函数</code> 是 Java 程序的主 <code>入口函数</code> 。<br>\n（10）函数标识符后紧跟一对小括号， <code>形式参数</code> 一般定义在这对小括号中，这些形式参数在程序运行时可用于接受来自外部传入的实际参数。<br>\n（11） <code>String</code>  关键字用于定义字符串类型的变量。<br>\n（12） <code>String[]</code>  用于定义字符串类型的数组，该数组的标识符是 args。<br>\n（13）该源程序中的 main 函数的 <code>函数签名</code> 是： <code>public static void main(String[] args)</code> <br>\n（14）在函数签名后紧跟一堆大括号，代码块一般定义在这对大括号中，大括号（包括大括号本身）内的所有代码的集合被称之为 <code>函数体</code> 。<br>\n（15）一个完整的 <code>函数成员</code> 是由函数签名和函数体组成。<br>\n（16） <code>System</code>  是来自 java.lang 包下的一个类。<br>\n（17） <code>out</code>  是 System 类中的一个静态成员，它是 <span class=\"exturl\" data-url=\"aHR0cDovL2phdmEuaW8=\">java.io</span> 包下 PrintStream 类的实例。<br>\n（18） <code>println</code>  是 out 提供的一个实例成员，而且是函数成员。<br>\n（19）访问静态成员的语法是  <code>类名.成员名</code> ，访问实例成员的语法是  <code>实例名.成员名</code> 。<br>\n（20）在代码中 <code>调用一个函数</code> 时需要在该函数名后跟一对小括号，如果该函数需要传递参数，则将对应的实际参数按类型和顺序写到小括号中，并使用英文逗号隔开即可。<br>\n（21）定义 <code>字符串的字面量</code> 是直接将字符串写在双引号中，例如 “Hello World!”。<br>\n（22） <code>分号</code> 代表一行或者一段代码的结束。</p>\n</blockquote>\n<p> </p>\n<blockquote>\n<p><font color = \"#40E0D0\">Java11 新特性</font>：编译运行一步到位： <code>java HelloWorld.java</code></p>\n</blockquote>\n<p> </p>\n<p><font color = \"#40E0D0\">执行程序过程中可能遇到的问题</font></p>\n<blockquote>\n<p>&lt;1&gt; 文件扩展名修改失败。原因很可能是你没有显示出扩展名。<br>\n<font color = green>解决办法：</font>  显示文件的扩展名，然后再修改。<br>\n<a href=\"https://imgtu.com/i/WE3H8x\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WE3H8x.md.png\" alt=\"WE3H8x.md.png\"></a></p>\n</blockquote>\n<blockquote>\n<p>&lt;2&gt; 编码问题。<br>\n<a href=\"https://imgtu.com/i/WE8yee\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WE8yee.png\" alt=\"WE8yee.png\"></a><br>\n<font color = green>解决办法：</font>一个方法是，可以将文件另存为，同时设置编码格式为 utf-8。<br>\n另一个方法是，在编译时指定编码格式  <code>javac HelloWorld -encodeing utf-8</code> 。<br>\n<a href=\"https://imgtu.com/i/WEGltA\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WEGltA.md.png\" alt=\"WEGltA.md.png\"></a></p>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/07/15/computer-science/java/Java-%E5%88%9D%E9%81%87/",
            "url": "http://example.com/2021/07/15/computer-science/java/Java-%E5%88%9D%E9%81%87/",
            "title": "Java-初遇",
            "date_published": "2021-07-15T10:23:23.000Z",
            "content_html": "<h1 id=\"font-color7b68eejava-发展历程font\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejava-发展历程font\">#</a> <font color=\"#7B68EE\">Java 发展历程</font></h1>\n<ul>\n<li>1995 年， <code>Java 语言诞生</code> ，由  <code>Sun</code>  公司推出；</li>\n<li>2004 年，发布  <code>J2SE 1.5</code>  ，成为 Java 语言发展史上重要版本。</li>\n<li>2009 年，Sun 公司被  <code>Oracle</code>  公司收购。</li>\n<li>2014 年，发布  <code>JDK 8.0</code>  。</li>\n<li>2018 年，发布 JDK 11.0 。</li>\n</ul>\n<h1 id=\"font-color7b68eejava-体系font\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejava-体系font\">#</a> <font color=\"#7B68EE\">Java 体系</font></h1>\n<ul>\n<li>\n<p><code>JavaSE</code> ，Java 的基础和核心。允许开发和部署在桌面、服务器、嵌入式环境和实时环境中使用的 Java 应用程序。</p>\n</li>\n<li>\n<p><code>JavaEE</code> ， Java 企业版。多用于 Web 系统的服务端开发。</p>\n</li>\n<li>\n<p><code>JavaME</code> ， Java 小型版。可以用于嵌入式设备的 Java 程序开发。可以用于移动端的开发（不同于 Android 开发）。</p>\n</li>\n</ul>\n<p><a href=\"https://imgtu.com/i/WnouzF\"><img data-src=\"https://z3.ax1x.com/2021/07/15/WnouzF.png\" alt=\"WnouzF.png\"></a></p>\n<h1 id=\"font-color7b68eejava-特性和优势font\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejava-特性和优势font\">#</a> <font color=\"#7B68EE\">Java 特性和优势</font></h1>\n<ul>\n<li>\n<p><code>跨平台性（可移植性）</code> ：跨平台性是 Java 语言的核心优势。</p>\n</li>\n<li>\n<p><code>面向对象</code> ： Java 是一门完全面向对象的语言。</p>\n<p><code>面向对象和面向过程的区别</code> ：</p>\n<ul>\n<li>\n<p>面向对象具有三大特征：封装性、继承性和多态性，而面向过程没有继承性和多态性，并且面向过程的封装只是封装功能，而面向对象可以封装数据和功能。所以面向对象优势更明显。</p>\n</li>\n<li>\n<p>一个经典的比喻：面向对象是盖浇饭、面向过程是蛋炒饭。<br>\n盖浇饭的好处就是 “菜”“饭” 分离，从而提高了制作盖浇饭的灵活性。饭不满意就换饭，菜不满意换菜。用软件工程的专业术语就是 “可维护性” 比较好，“饭” 和 “菜” 的耦合度比较低。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>健壮性</code> ：归功于垃圾回收机制（GC）。</p>\n</li>\n<li>\n<p>高能性： <code>即时编译技术</code> 。</p>\n<ul>\n<li><code>即时编译技术</code> ：JVM 可判断某段字节码其是否属于 <code>使用频率较高</code> 的热点代码。如果是，就会将字节码文件转换出的本地机器码保存，以便下次直接执行机器码文件。这使得 Java 程序的执行效率得到很大的提高。</li>\n</ul>\n</li>\n<li>\n<p>安全性：Java 的 <code>存储分配模型</code> 是它防御恶意代码的要方法之一。</p>\n</li>\n<li>\n<p>简单性：Java 相较 C++，去掉了一些一般程序员很少使用的特征。例如:</p>\n<ul>\n<li>Java 不支持<font color = red>go to</font>语句，代之以提供 break 和 continue 语句以及异常处理。</li>\n<li>Java 还剔除了 C++ 的操作符过载<font color = red>(overload)</font>和多继承特征，并且不使用主文件，免去了预处理程序。</li>\n<li>因为 Java 没有结构，数组和串都是对象，所以不需要<font color = red>指针</font>。Java 能够自动处理对象的引用和间接引用，实现自动的无用单元收集。</li>\n</ul>\n</li>\n<li>\n<p>分布式：Java 设计成支持在网络上应用，它是分布式语言。网络变成软件应用的 <code>分布运载工具</code> 。Java 程序只要编写一次，就可到处运行。</p>\n</li>\n<li>\n<p>多线程性</p>\n</li>\n</ul>\n<h1 id=\"font-color7b68eejava-两种核心机制font\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejava-两种核心机制font\">#</a> <font color=\"#7B68EE\">Java 两种核心机制</font></h1>\n<ul>\n<li>\n<p><code>JVM（Java虚拟机）</code></p>\n<ul>\n<li>不同平台，JVM 不同；</li>\n<li>一次编译，出出运行；</li>\n</ul>\n</li>\n<li>\n<p><code>垃圾回收机制（GC）</code></p>\n<ul>\n<li>C 语言中，是由程序员负责的。</li>\n<li>Java 中由系统级的线程跟踪存储空间的分配情况，当 JVM 空闲时，检查并释放可以被释放的空间。</li>\n<li>这个过程是自动的。程序员无法精确控制和干预。</li>\n<li>程序仍然会出现内存泄漏和内存溢出的问题。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"font-color7b68eejdk-jre-jvmfont\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejdk-jre-jvmfont\">#</a> <font color=\"#7B68EE\">JDK、JRE、JVM</font></h1>\n<ul>\n<li>\n<p><code>JVM </code> <br>\nJVM（Java Virtual Machine，Java 虚拟机）是整个 Java 实现跨平台的最核心的部分，负责解释并执行字节码文件。</p>\n</li>\n<li>\n<p><code>JRE</code> <br>\nJRE（Java Runtime Environment，Java 运行环境）<br>\n <code>JRE = JVM + 核心API</code></p>\n</li>\n<li>\n<p><code>JDK</code> <br>\nJDK（Java Development Kit，Java 开发工具包），是整个 java 的核心。<br>\n包括编译工具 <code>javac</code> 、执行程序 <code>java</code> 、文档工具 <code>javadoc</code>  和反编译工具 <code>javap</code>  等使用工具。<br>\n <code>JDK = JRE + java开发工具</code></p>\n</li>\n</ul>\n<p><a href=\"https://imgtu.com/i/WnowsH\"><img data-src=\"https://z3.ax1x.com/2021/07/15/WnowsH.png\" alt=\"WnowsH.png\"></a></p>\n<h1 id=\"font-color7b68eejava-程序工作原理font\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejava-程序工作原理font\">#</a> <font color=\"#7B68EE\">Java 程序工作原理</font></h1>\n<p> <br>\njava 程序执行过程，大致分为两步：</p>\n<ul>\n<li>通过编译工具 <code>javac</code>  将源码文件（.java）转换成字节码（.class）。</li>\n<li>通过 <code>JVM</code>  将字节码解释为机器码，进而在具体的系统平台上执行。</li>\n</ul>\n<p><code>源码——&gt;字节码</code></p>\n<ul>\n<li><code>词汇和语法分析</code> ：分析源码的执行逻辑，并将其绘制成一个抽象的语法树。</li>\n<li><code>填写符号表</code> ：复杂的程序之间会相互引用，此阶段就会对这些引用关系进行一些预处理工作。（理解：用一些符号来表示各个程序之间的关系。）</li>\n<li><code>注释处理</code> ：对注释进行分析和归类。</li>\n<li><code>生成字节码</code> ：根据前三个阶段的结果，最终生成字节码文件。</li>\n<li><a href=\"https://imgtu.com/i/Wnwran\"><img data-src=\"https://z3.ax1x.com/2021/07/15/Wnwran.png\" alt=\"Wnwran.png\"></a><br>\n </li>\n</ul>\n<p><code>字节码的解释过程</code></p>\n<p>    java 字节码文件先后经过 <code>类加载器</code> 、 <code>字节码校验器</code> 、 <code>解释器</code> 的处理后，最终在擦做系统平台上运行。</p>\n<p><a href=\"https://imgtu.com/i/Wnws5q\"><img data-src=\"https://z3.ax1x.com/2021/07/15/Wnws5q.png\" alt=\"Wnws5q.png\"></a></p>\n<ul>\n<li>\n<p><code>类装载器</code> ：其主要功能是为执行程序寻找和装载所需要的类（把字节码文件装到 java 虚拟机中。）</p>\n</li>\n<li>\n<p><code>字节码校验器</code> ：其功能是对字节码文件进行校验，保证代码的 <code>安全性</code> 。负责测试代码段落格式并进行检查，检查伪造指针、违反对象访问权限或是试图改变对象类型的非法代码。</p>\n</li>\n<li>\n<p><code>解释器</code> ：具体的平台并不认识字节码文件，最终起作用的还是这个最重要的解释器，它负责将字节码文件 <code>翻译</code> 成所在平台的能识别的东西。</p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/07/15/computer-science/java/Java-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/",
            "url": "http://example.com/2021/07/15/computer-science/java/Java-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6/",
            "title": "Java-流程控制",
            "date_published": "2021-07-15T10:23:23.000Z",
            "content_html": "<blockquote>\n<h1 id=\"从控制台获取数据\"><a class=\"markdownIt-Anchor\" href=\"#从控制台获取数据\">#</a> 从控制台获取数据</h1>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//1.创建一个Scanner对象</span></span><br><span class=\"line\">Scanner sc =  <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\"><span class=\"comment\">//2.调用Scanner对象的方法，从控制获台取一个各个类型的数据，此处是获取一个整数。</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> in = sc.nextInt();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<h1 id=\"顺序结构\"><a class=\"markdownIt-Anchor\" href=\"#顺序结构\">#</a> 顺序结构</h1>\n</blockquote>\n<p>程序的执行是 <code>从main方法开始，自上而下，依次执行</code> 。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n1 = <span class=\"number\">12</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n2 = n1 +<span class=\"number\">23</span>;</span><br><span class=\"line\">    <span class=\"comment\">//错误</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> n2 = n1 +<span class=\"number\">23</span>;<span class=\"comment\">//解析不到n1</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> n1 = <span class=\"number\">12</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<h1 id=\"分支结构选择结构\"><a class=\"markdownIt-Anchor\" href=\"#分支结构选择结构\">#</a> 分支结构 / 选择结构</h1>\n</blockquote>\n<h3 id=\"if-单分支\"><a class=\"markdownIt-Anchor\" href=\"#if-单分支\">#</a> <strong> <code>if 单分支</code> </strong></h3>\n<hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(关系表达式)&#123;</span><br><span class=\"line\">    &#x2F;&#x2F; 关系表达式为true,则执行if下的语句</span><br><span class=\"line\">\t语句;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 1  if 单分支</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span>  a  = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> b = <span class=\"number\">20</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 需求  判断a和b是否相同</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (a == b)&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;a等于b&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(a != b)&#123;</span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;a不等于b&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"if-else-双分支\"><a class=\"markdownIt-Anchor\" href=\"#if-else-双分支\">#</a> <strong> <code>if - else 双分支</code> </strong></h3>\n<hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(关系表达式)&#123;</span><br><span class=\"line\">\t语句体1;\t</span><br><span class=\"line\">&#125;else&#123;</span><br><span class=\"line\">\t语句体2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*双分支  if  else</span></span><br><span class=\"line\"><span class=\"comment\">       * 需求  给出任意的整数，使用程序来判断该整数是奇数还是偶数  并在控制台输出判断结果</span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">       <span class=\"comment\">//获取键盘输入数据</span></span><br><span class=\"line\">       Scanner sc = <span class=\"keyword\">new</span> Scanner(System.in);</span><br><span class=\"line\">       System.out.println(<span class=\"string\">&quot;请输入您要判断的整数：&quot;</span>);</span><br><span class=\"line\">       <span class=\"keyword\">int</span> in = sc.nextInt();<span class=\"comment\">// 保存用户输入的整数到变量in中</span></span><br><span class=\"line\">       <span class=\"comment\">// 判断整数是奇数还是偶数</span></span><br><span class=\"line\">       <span class=\"keyword\">if</span>(in % <span class=\"number\">2</span> == <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">           System.out.println(<span class=\"string\">&quot;您输入的整数为偶数&quot;</span>);</span><br><span class=\"line\">       &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">           System.out.println(<span class=\"string\">&quot;您输入的整数为奇数&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"else-if-多分支\"><a class=\"markdownIt-Anchor\" href=\"#else-if-多分支\">#</a> <strong> <code>else if 多分支</code> </strong></h3>\n<hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(条件表达式1)&#123;</span><br><span class=\"line\">\t语句1；</span><br><span class=\"line\">&#125;else if(条件表达式2)&#123;</span><br><span class=\"line\">\t语句2；</span><br><span class=\"line\">&#125;...else&#123;</span><br><span class=\"line\">\t语句n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">          多分支</span></span><br><span class=\"line\"><span class=\"comment\">          需求：在该高考时，父母许诺，如果考上211   奖励一个mac笔记本     如果考上一本  奖励  iphone   如果考上二本   奖励小米手机</span></span><br><span class=\"line\"><span class=\"comment\">          如果没考上  奖励回去复读</span></span><br><span class=\"line\"><span class=\"comment\">       */</span></span><br><span class=\"line\">      System.out.println(<span class=\"string\">&quot;等待成绩公布,请录入您的高考成绩：&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">int</span>  score  = sc.nextInt();</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(score &gt; <span class=\"number\">600</span>)&#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">&quot;奖励mac笔记本&quot;</span>);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt; <span class=\"number\">550</span>)&#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">&quot;奖励  iphone&quot;</span>);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score &gt; <span class=\"number\">500</span>)&#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">&quot;奖励小米手机&quot;</span>);</span><br><span class=\"line\">      &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">          System.out.println(<span class=\"string\">&quot;奖励回去复读&quot;</span>);</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>注意边界值的处理。</li>\n</ul>\n<h3 id=\"嵌套分支\"><a class=\"markdownIt-Anchor\" href=\"#嵌套分支\">#</a> <strong> <code>嵌套分支</code> </strong></h3>\n<hr>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(<span class=\"string\">&quot;等待成绩公布,请录入您的高考成绩：&quot;</span>);</span><br><span class=\"line\">       <span class=\"keyword\">int</span>  score  = sc.nextInt();</span><br><span class=\"line\">       <span class=\"keyword\">if</span>(score &gt;=<span class=\"number\">0</span> &amp;&amp; score &lt;= <span class=\"number\">750</span>)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">if</span>(score &gt;= <span class=\"number\">600</span>)&#123;</span><br><span class=\"line\">               System.out.println(<span class=\"string\">&quot;奖励mac笔记本&quot;</span>);</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">550</span> &amp;&amp; score &lt; <span class=\"number\">600</span>)&#123;</span><br><span class=\"line\">               System.out.println(<span class=\"string\">&quot;奖励  iphone&quot;</span>);</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(score &gt;= <span class=\"number\">500</span> &amp;&amp; score &lt; <span class=\"number\">550</span>)&#123;</span><br><span class=\"line\">               System.out.println(<span class=\"string\">&quot;奖励小米手机&quot;</span>);</span><br><span class=\"line\">           &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">               System.out.println(<span class=\"string\">&quot;奖励回去复读&quot;</span>);</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">           System.out.println(<span class=\"string\">&quot;您输入的成绩有误，请查证后重新输入&quot;</span>);</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"switch分支\"><a class=\"markdownIt-Anchor\" href=\"#switch分支\">#</a> <strong> <code>switch分支</code> </strong></h3>\n<hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">switch(表达式)&#123;</span><br><span class=\"line\">    case 值1：</span><br><span class=\"line\">        语句；</span><br><span class=\"line\">        break;</span><br><span class=\"line\">    case 值2；</span><br><span class=\"line\">        语句；</span><br><span class=\"line\">        break;</span><br><span class=\"line\">    default:</span><br><span class=\"line\">        语句；</span><br><span class=\"line\">        break;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>switch 表达式的类型：int、byte、short、char、String (JDK 以上)、enum (枚举)。</li>\n<li>break 作用：结束当前执行。如果没有 break，将发生 case 穿透。</li>\n<li>default 的位置：可以出现在任意位置，习惯写在最后。</li>\n<li>对于多个 case 对应相同的代码，则可以进行合并。</li>\n<li>switch 判断的数据的值一定是可列举的、有穷的。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">switch</span> (month)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">12</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;当前月份属于冬季&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;当前月份属于春季&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">8</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;当前月份属于夏季&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">9</span>:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">10</span>:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">11</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;当前月份属于秋季&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;您输入的数据有误，请重新输入!!!&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>switch 的表达式类型可以使 String。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String  str = <span class=\"string\">&quot;audi&quot;</span>;</span><br><span class=\"line\">   <span class=\"keyword\">switch</span> (str)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">case</span> <span class=\"string\">&quot;audi&quot;</span>:</span><br><span class=\"line\">           System.out.println(<span class=\"string\">&quot;这是奥迪&quot;</span>);</span><br><span class=\"line\">           <span class=\"keyword\">break</span>;</span><br><span class=\"line\">       <span class=\"keyword\">case</span> <span class=\"string\">&quot;bmw&quot;</span>:</span><br><span class=\"line\">           System.out.println(<span class=\"string\">&quot;这是宝马&quot;</span>);</span><br><span class=\"line\">           <span class=\"keyword\">break</span>;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<h1 id=\"循环结构\"><a class=\"markdownIt-Anchor\" href=\"#循环结构\">#</a> 循环结构</h1>\n</blockquote>\n<p>特点：所执行的代码是重复的；需要明确的开始和停止标志。</p>\n<h3 id=\"for循环\"><a class=\"markdownIt-Anchor\" href=\"#for循环\">#</a> <strong> <code>for循环</code> </strong></h3>\n<hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for(初始化语句；条件判断语句；条件控制语句)&#123;</span><br><span class=\"line\">    循环语句；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>循环结构的语法：</p>\n<ul>\n<li>初始化语句，可以是一条或者多条语句，中间用 <code>，</code> 分割。这些语句主要完成一些初始化工作。</li>\n<li>条件判断语句，该语句的执行结果一定是一个 Boolean 值，这个语句决定是否执行循环语句。</li>\n<li>条件控制语句，通常是一条语句。用来改变判断条件的值  从而达到控制语句是否继续向下执行的效果。此处使用自增自减操作居多。</li>\n<li>循环语句，这里可以使一条或者多条语句 也可以是其他结构。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DaffodilNumber</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> num = <span class=\"number\">0</span>; <span class=\"comment\">//统计水仙花的个数</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;1000以内的水仙花总数为：&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">100</span>; i&lt;<span class=\"number\">1000</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> o = i  % <span class=\"number\">10</span>; <span class=\"comment\">// 个位</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> p = i / <span class=\"number\">10</span> % <span class=\"number\">10</span>; <span class=\"comment\">// 十位</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> q = i / <span class=\"number\">100</span>; <span class=\"comment\">//百位</span></span><br><span class=\"line\">            <span class=\"comment\">//判断是否为水仙花数</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(o*o*o+p*p*p+q*q*q == i)&#123;</span><br><span class=\"line\">                System.out.println(i); <span class=\"comment\">//打印水仙花数</span></span><br><span class=\"line\">                num++; <span class=\"comment\">//累加水仙花数</span></span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;总计个数：&quot;</span>+num); <span class=\"comment\">//打印1000以内的水仙花总数</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"while循环\"><a class=\"markdownIt-Anchor\" href=\"#while循环\">#</a> <strong> <code>while循环</code> </strong></h3>\n<hr>\n<p>先判断，后执行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while(条件判断语句)&#123;</span><br><span class=\"line\">    循环语句；</span><br><span class=\"line\">    条件控制语句；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">       <span class=\"comment\">// 需求  珠穆朗玛峰高度 8844.43 米 = 8844430毫米   加入我们有一张足够大的纸，值得厚度是0.1毫米</span></span><br><span class=\"line\">       <span class=\"comment\">// 计算将纸对着多少次 可以折成珠穆朗玛峰的高度</span></span><br><span class=\"line\">       <span class=\"comment\">// 统计折叠的次数</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span>  count = <span class=\"number\">0</span>;</span><br><span class=\"line\">       <span class=\"comment\">//  定义纸的厚度</span></span><br><span class=\"line\">       <span class=\"keyword\">double</span>  paper = <span class=\"number\">0.1</span>;</span><br><span class=\"line\">       <span class=\"comment\">// 珠穆朗玛峰的高度</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span>  zf = <span class=\"number\">8844430</span>;</span><br><span class=\"line\">       <span class=\"keyword\">while</span>(paper &lt;= zf)&#123;</span><br><span class=\"line\">           <span class=\"comment\">// 完成纸的折叠</span></span><br><span class=\"line\">           paper *= <span class=\"number\">2</span>;</span><br><span class=\"line\">           <span class=\"comment\">// 此时的折叠次数加一</span></span><br><span class=\"line\">           count++;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       System.out.println(<span class=\"string\">&quot;总共折叠的次数为：&quot;</span> +count);</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"dowhile循环\"><a class=\"markdownIt-Anchor\" href=\"#dowhile循环\">#</a> <strong> <code>do...while循环</code> </strong></h3>\n<hr>\n<p>先执行，后判断，无论条件是否满足，都至少会执行一次。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">do&#123;</span><br><span class=\"line\">    循环语句;</span><br><span class=\"line\">    条件控制语句;</span><br><span class=\"line\">&#125;while(条语句件判断);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果一个整数大于10.则输出大   否则输出小</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> num = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;大.....&quot;</span>);</span><br><span class=\"line\">        num -= <span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">while</span> (num &gt; <span class=\"number\">10</span>);<span class=\"comment\">//此处的分号不可遗忘</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>do…while 的使用场景：eg: 用户登录。</p>\n<p>三种循环的区别：</p>\n<ul>\n<li>\n<p>for 循环和 while 循环，先判断条件是否成立，然后决定是否执行循环语句；do while 循环是先执行一次循环语句，再判断条件是否成立。</p>\n</li>\n<li>\n<p>在 for 循环内声明的变量，作用域仅限 for 循环内。</p>\n</li>\n<li>\n<p>死循环</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(;;)&#123;<span class=\"comment\">// 两个分号在任何时候都不能少</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;aaaa&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"循环跳转控制\"><a class=\"markdownIt-Anchor\" href=\"#循环跳转控制\">#</a> <strong> <code>循环跳转控制</code> </strong></h3>\n<hr>\n<ul>\n<li>\n<p>在任何循环语句的主体部分，可以采用 break 进行控制循环的流程。break 用于强制退出循环，终止整个循环。</p>\n</li>\n<li>\n<p>continue 用于强制退出本次循环，继续下一次循环。</p>\n</li>\n<li>\n<p>带标签的 break 和 continue</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outter: <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">101</span>; i &lt; <span class=\"number\">150</span> ;i ++)&#123;</span><br><span class=\"line\">           <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">2</span>; j &lt; i/<span class=\"number\">2</span> ; j++)&#123;</span><br><span class=\"line\">               <span class=\"keyword\">if</span>(i % j == <span class=\"number\">0</span> )&#123;</span><br><span class=\"line\">                   <span class=\"keyword\">continue</span> outter;</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">           System.out.println(i);</span><br><span class=\"line\">       &#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>嵌套循环</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//模拟时钟的时针和分针  时针  1--24   分针1-60  当分钟走一圈  时针走一次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> hour = <span class=\"number\">0</span> ; hour &lt; <span class=\"number\">24</span>; hour++)&#123;<span class=\"comment\">// 模拟时针循环</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> minute = <span class=\"number\">0</span> ; minute &lt; <span class=\"number\">60</span>;minute++)&#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;当前时间为：&quot;</span> + hour +<span class=\"string\">&quot;:&quot;</span> + minute);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;-----------------------------------------&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<p>控制台输出 99 乘法表</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i&lt;=<span class=\"number\">9</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=i;j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> result=i*j;</span><br><span class=\"line\">        System.out.print(j+<span class=\"string\">&quot;*&quot;</span>+i+<span class=\"string\">&quot;=&quot;</span>+result+<span class=\"string\">&quot;\\t&quot;</span>);           </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://example.com/2021/07/15/computer-science/java/Java-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/",
            "url": "http://example.com/2021/07/15/computer-science/java/Java-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/",
            "title": "Java-基础语法",
            "date_published": "2021-07-15T10:23:23.000Z",
            "content_html": "<blockquote>\n<h2 id=\"标识符和关键字\"><a class=\"markdownIt-Anchor\" href=\"#标识符和关键字\">#</a> 标识符和关键字</h2>\n</blockquote>\n<h3 id=\"关键字\"><a class=\"markdownIt-Anchor\" href=\"#关键字\">#</a> <strong> <code>关键字</code> </strong></h3>\n<hr>\n<p>被 java 语言赋予了特殊含义的单词即为 <code>关键字</code> 。</p>\n<p><a href=\"https://imgtu.com/i/WEtikQ\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WEtikQ.png\" alt=\"WEtikQ.png\"></a><br>\n<a href=\"https://imgtu.com/i/WEtCTg\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WEtCTg.png\" alt=\"WEtCTg.png\"></a></p>\n<p><strong>关键字的特点</strong></p>\n<ul>\n<li>关键字的字母 <code>全部小写</code> ；</li>\n<li>常用的代码编辑器，针对关键字有特殊的颜色标记，非常直观。<br>\n </li>\n</ul>\n<h3 id=\"标识符\"><a class=\"markdownIt-Anchor\" href=\"#标识符\">#</a> <strong> <code>标识符</code> </strong></h3>\n<hr>\n<p>凡是在 java 中需要由我们命名的类名、方法名、变量名、接口名、常量名等成为 <code>标识符</code> 。</p>\n<p><strong>标识符的命名规则</strong></p>\n<ul>\n<li>只能由数字、字母、下划线（_）、美元符号（$）组成。</li>\n<li>不能以数字开头。</li>\n<li>不能是关键字和保留字。</li>\n<li>大小写敏感（严格区分大小写）。</li>\n<li>尽量做到 “见名知意”。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> _123=<span class=\"number\">23</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> $<span class=\"number\">22</span>a=<span class=\"number\">33</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> 变量a = <span class=\"number\">11</span>;<span class=\"comment\">//java支持中文命名  但是最好不要</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> <span class=\"number\">111</span>a = <span class=\"number\">1111</span>;<span class=\"comment\">//不合法</span></span><br><span class=\"line\">int a# = 0;//不合法</span><br><span class=\"line\"><span class=\"keyword\">int</span> <span class=\"keyword\">int</span> = <span class=\"number\">20</span>;<span class=\"comment\">//不合法</span></span><br></pre></td></tr></table></figure>\n<p><strong>驼峰命名法</strong></p>\n<ul>\n<li>\n<p>方法名和变量名</p>\n<ul>\n<li>标识符是一个单独的单词时，所有的字母都小写，eg: main；</li>\n<li>标识符由多个单词组成时，除第一个单词外其他所有的单词首字母大写，eg: getName；</li>\n</ul>\n</li>\n<li>\n<p>类名和接口名：每个单词的首字母都要大写，其余字母小写，eg: BookStore。</p>\n</li>\n<li>\n<p>常量： 所有单词的所有字母都大写，多个单词时，单词和单词之间用下划线分隔，eg：SALE_PRICE。</p>\n</li>\n</ul>\n<blockquote>\n<h2 id=\"常量和变量\"><a class=\"markdownIt-Anchor\" href=\"#常量和变量\">#</a> 常量和变量</h2>\n</blockquote>\n<h3 id=\"常量\"><a class=\"markdownIt-Anchor\" href=\"#常量\">#</a> <strong> <code>常量</code> </strong></h3>\n<hr>\n<p>在程序运行过程中，值不可以发生改变的量，称为 <code>常量</code> 。</p>\n<ul>\n<li>常量通常指的是一个固定的值，eg：1、2、3、’a’、’b’、true、false、”helloWorld” 等。</li>\n<li>在 java 语言中，主要利用关键字 final 来定义一个常量。</li>\n<li>常量一旦被初始化后就不能更改其值。</li>\n<li>声明格式：final type varName = value;</li>\n<li>为了更好的区分和表述，一般将 1、2、3、’a’、’b’、true、false、”helloWorld” 等称为 <code>字符常量</code> ，而使用 final 修饰的 PI 等称为 <code>符号常量</code> 。</li>\n</ul>\n<p><strong>常量分类</strong></p>\n<table>\n<thead>\n<tr>\n<th>常量类型</th>\n<th>说明</th>\n<th>举例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>字符串常量</td>\n<td>用双引号括起来的内容</td>\n<td>“HelloWorld”，“程序员”</td>\n</tr>\n<tr>\n<td>整数常量</td>\n<td>不带小数的数字</td>\n<td>666，-88</td>\n</tr>\n<tr>\n<td>小数常量</td>\n<td>带小数的数字</td>\n<td>13.14，-5.21</td>\n</tr>\n<tr>\n<td>字符常量</td>\n<td>用单引号括起来的内容</td>\n<td>‘A’，‘0’， ‘我’</td>\n</tr>\n<tr>\n<td>布尔常量</td>\n<td>布尔值，表示真假</td>\n<td>只有两个值：true，false</td>\n</tr>\n<tr>\n<td>空常量</td>\n<td>一个特殊的值，空值</td>\n<td>值是：null</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<h3 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> <strong> <code>变量</code> </strong></h3>\n<hr>\n<p><code>变量</code> 就是计算机内存中的一块存储单元。变量就是申请内存来存储值。即，当创建变量的时候，需要在内存申请空间。<br>\n变量所占据的空间大小有 <code>数据类型</code> 来决定。<br>\n内存管理系统根据变量的类型为变量分配存储空间，分配的空间只能用来存储该类型数据。<br>\n<a href=\"https://imgtu.com/i/WEv6xO\"><img data-src=\"https://z3.ax1x.com/2021/07/14/WEv6xO.png\" alt=\"WEv6xO.png\"></a></p>\n<p>因此，通过不同类型的变量，可以在内存中存储整数、小数或者字符。</p>\n<ul>\n<li>定义变量：</li>\n</ul>\n<p><code>数据类型  变量名  = 变量值；</code></p>\n<ul>\n<li>变量使用的注意事项：\n<ul>\n<li>在同一个大括号范围内，变量名称不允许重复。</li>\n<li>变量在第一次使用之前必须进行初始化（赋值）。</li>\n<li>对于我们的 long 和 flot 类型，在声明该类型的变量的时候，必须在其末尾添加标记。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">static</span>  <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> a = <span class=\"number\">100</span>;<span class=\"comment\">//声明的同时完成了变量的初始化</span></span><br><span class=\"line\">       a = <span class=\"number\">200</span>;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> b;<span class=\"comment\">//声明变量</span></span><br><span class=\"line\">       b = <span class=\"number\">20</span>;<span class=\"comment\">//初始化变量</span></span><br><span class=\"line\">       b = b+<span class=\"number\">1</span>;<span class=\"comment\">//变量使用</span></span><br><span class=\"line\">       System.out.println(b);<span class=\"comment\">//使用变量</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<h2 id=\"数据类型\"><a class=\"markdownIt-Anchor\" href=\"#数据类型\">#</a> 数据类型</h2>\n</blockquote>\n<h3 id=\"进制\"><a class=\"markdownIt-Anchor\" href=\"#进制\">#</a> <strong> <code>进制</code> </strong></h3>\n<hr>\n<ul>\n<li>\n<p>二进制， <code>基数为2</code> ，进位规则是 <code>“逢二进一”</code> 。<br>\n二进制数据是用 <code>0</code>  和 <code>1</code>  两个数码来表示的数。<br>\njava 中，二进制数以 0b 或 0B 开头。<br>\n数字计算机只能识别和处理由‘0’、‘1’符号串组成的代码，其运算模式是二进制。</p>\n</li>\n<li>\n<p>八进制， <code>基数为8</code> ，进位规则是 <code>“逢八进一”</code> 。<br>\n八进制数据是由 <code>0-7</code>  八个数码表示的数。<br>\njava 中，二进制数以 0 开头。</p>\n</li>\n<li>\n<p>十六进制， <code>基数为16</code> ，进位规则是 <code>“逢十六进一”</code> 。<br>\n十六进制数据是用 <code>0-9</code>  和 <code>A-F(a-f)</code>  十六个数码来表示的数据。<br>\njava 中，二进制数以 0x 或 0X 开头。</p>\n</li>\n</ul>\n<p><code>十进制与二进制的转换</code></p>\n<ul>\n<li>十进制转换成二进制：&quot;除 2 取余，逆序排列&quot; 法。</li>\n<li>二进制转换成十进制：使用权相加法。</li>\n</ul>\n<p><code>二进制与八进制的转换</code></p>\n<ul>\n<li>二进制转换成八进制：从右往左每 3 位按二进制转十进制的方式转换。</li>\n<li>八进制转换成二进制：每个数按十进制转二进制的方式转换为 3 位二进制，不足时补齐。</li>\n</ul>\n<p><code>二进制与十六进制的转换</code></p>\n<ul>\n<li>二进制转换成十六进制：从右往左每 4 位按二进制转十进制的方式转换。</li>\n<li>十六进制转换成二进制：每个数按十进制转二进制的方式转换为 4 位二进制，不足时补齐。</li>\n</ul>\n<h3 id=\"计算机存储单元\"><a class=\"markdownIt-Anchor\" href=\"#计算机存储单元\">#</a> <strong> <code>计算机存储单元</code> </strong></h3>\n<hr>\n<p>计算机可以用来存储数据，无论内存还是硬盘，计算机存储设备的最小信息单元叫 “位（bit）”, 又称 “比特位”，通常小写字母 b 表示。而计算机中的基本存储单元叫 “字节（byte）”，通常用大写字母 “B” 表示，字节是由连续的 8 个位组成的。</p>\n<p>1 B = 8bit    1KB = 1024B<br>\n1MB = 1024KB  1GB = 1024MB<br>\n1TB = 1024GB</p>\n<h3 id=\"数据类型-2\"><a class=\"markdownIt-Anchor\" href=\"#数据类型-2\">#</a> <strong> <code>数据类型</code> </strong></h3>\n<hr>\n<p>java 是强类型语言。对于每一种数据都给出了明确的数据类型，不同数据类型也分配了不同的存储空间，所以他们表示的数据大小也是不一样的。<br>\njava 的两大数据类型：</p>\n<ul>\n<li>内置数据类型</li>\n<li>引用数据类型</li>\n</ul>\n<p><a href=\"https://imgtu.com/i/WVSJRP\"><img data-src=\"https://z3.ax1x.com/2021/07/14/WVSJRP.jpg\" alt=\"WVSJRP.jpg\"></a></p>\n<p>对比 C 语言的数据类型，进行学习。<br>\n<a href=\"https://imgtu.com/i/WV9HbD\"><img data-src=\"https://z3.ax1x.com/2021/07/14/WV9HbD.jpg\" alt=\"WV9HbD.jpg\"></a></p>\n<p>java 语言提供了 8 种基本数据类型。包括六中数字类型（四个整数型，两个浮点型），一种字符型，还有一种布尔类型。</p>\n<p>各个数据类型占用内存和取值范围，如表所示。</p>\n<p><a href=\"https://imgtu.com/i/WM5RRf\"><img data-src=\"https://z3.ax1x.com/2021/07/16/WM5RRf.png\" alt=\"WM5RRf.png\"></a></p>\n<p><code>注意：</code> 在 java 中整数默认数据类型时 int，浮点数的默认数据类型是 double。</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5pdGhlaW1hLmNvbS9uZXdzLzIwMjAwMTE2LzEwMzQzNi5odG1s\">取值范围的推理过程参考</span></p>\n</blockquote>\n<h3 id=\"整型\"><a class=\"markdownIt-Anchor\" href=\"#整型\">#</a> <strong> <code>整型</code> </strong></h3>\n<hr>\n<ul>\n<li>byte、short、int、long。</li>\n<li>java 各个整数类型取值范围和字段长度，不受操作系统的影响，以保证 java 程序的可移植性。</li>\n<li>java 的整型常量默认为 int 型，声明 long 型变量必须在其后加‘l’或‘L’。</li>\n<li>java 程序中变量通常声明为 int 类型，除非不足以表示较大的数，才使用 long 类型。</li>\n</ul>\n<h3 id=\"浮点型\"><a class=\"markdownIt-Anchor\" href=\"#浮点型\">#</a> <strong> <code>浮点型</code> </strong></h3>\n<hr>\n<ul>\n<li>十进制数形式：形如：5.12、6.430f、.67 (必须有小数点)。</li>\n<li>科学计数形式：形如：5.12e2、6.87E3、7896e-6</li>\n<li>float, 单精度，可以精确到 7 位有效数字。</li>\n<li>double，双精度，精度是 float 的两倍。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">float</span> f = <span class=\"number\">3.14F</span>; <span class=\"comment\">//浮点数默认的类型是double  当我们想要表示一个float类型的浮点数的时候   此时我们就需要在数值后边加上一个F或者f</span></span><br><span class=\"line\"><span class=\"keyword\">double</span>  d = <span class=\"number\">3.14D</span>;</span><br><span class=\"line\"><span class=\"keyword\">float</span>  f1 = <span class=\"number\">0.1f</span>;</span><br><span class=\"line\"><span class=\"keyword\">double</span> d1 = <span class=\"number\">1.0</span>/<span class=\"number\">10</span>;</span><br><span class=\"line\">System.out.println(f1 == d1);<span class=\"comment\">//false</span></span><br><span class=\"line\"><span class=\"keyword\">float</span> f2 = <span class=\"number\">42323442F</span>;</span><br><span class=\"line\"><span class=\"keyword\">float</span> f3 = f2 +<span class=\"number\">1</span>;</span><br><span class=\"line\">System.out.println(f2==f3);<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n<p>以上代码中，由于受到 <code>长度</code> 和 <code>精度</code> 的限制， <code>无法精确的表示一些浮点数</code> ，只是近似的等于。因此在以后的开发中，当我们在遇到需要精确表示小数的时候 特别是金融方面的时候，千万不要直接使用 float 和 double 去表示。</p>\n<h3 id=\"字符型\"><a class=\"markdownIt-Anchor\" href=\"#字符型\">#</a> <strong> <code>字符型</code> </strong></h3>\n<hr>\n<ul>\n<li>java 中的所有字符都是使用 Unicode 编码。一个字符可以存储一个字母，可以存储 <code>一个</code> 汉字，还可以存储其他字符。</li>\n<li>字符的表示形式：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//字符的第一种表示形式  使用单引号引起来的</span></span><br><span class=\"line\"><span class=\"keyword\">char</span>  c1 =<span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span>  c2 = <span class=\"string\">&#x27;中&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> c3 = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">char</span> c4 = <span class=\"string\">&#x27;&amp;&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">//转义字符</span></span><br><span class=\"line\"> <span class=\"keyword\">char</span>  c5= <span class=\"string\">&#x27;\\t&#x27;</span>;<span class=\"comment\">//制表符</span></span><br><span class=\"line\"> <span class=\"keyword\">char</span> c6=<span class=\"string\">&#x27;\\r&#x27;</span>;<span class=\"comment\">//回车</span></span><br><span class=\"line\"> <span class=\"keyword\">char</span> c7 = <span class=\"string\">&#x27;\\n&#x27;</span>;<span class=\"comment\">//换行</span></span><br><span class=\"line\"> <span class=\"comment\">//常量表示   直接使用unicoide值进行表示</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"布尔类型\"><a class=\"markdownIt-Anchor\" href=\"#布尔类型\">#</a> <strong> <code>布尔类型</code> </strong></h3>\n<hr>\n<ul>\n<li>boolean 表示的是逻辑值，只有两个值：true 和 false。</li>\n</ul>\n<h3 id=\"字符串类型\"><a class=\"markdownIt-Anchor\" href=\"#字符串类型\">#</a> <strong> <code>字符串类型</code> </strong></h3>\n<hr>\n<ul>\n<li>字符串类型不属于基本数据类型，属于引用数据类型。</li>\n<li>字符串是由 <code>双引号</code> 引起来的多个字符的组合序列。</li>\n<li>字符串的默认值是 null。</li>\n</ul>\n<blockquote>\n<h2 id=\"数据类型转换\"><a class=\"markdownIt-Anchor\" href=\"#数据类型转换\">#</a> 数据类型转换</h2>\n</blockquote>\n<p>数据类型转换分为：</p>\n<ul>\n<li>自动类型转换</li>\n<li>强制类型转换</li>\n</ul>\n<h3 id=\"自动类型转换\"><a class=\"markdownIt-Anchor\" href=\"#自动类型转换\">#</a> <strong> <code>自动类型转换</code> </strong></h3>\n<hr>\n<p>自动类型转换：把一个数据类型范围小的数值或者变量赋值给一个数据类型范围大的变量。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">//完成了数据类型的转换  将int类型转换为了double</span></span><br><span class=\"line\"><span class=\"keyword\">double</span>  d  = <span class=\"number\">100</span>;<span class=\"comment\">// 100 这个数值单独来说他是属于int类型   但是当我们完成赋值操作之后 此时保存在d这个变量中的数据就是double  自动类型转换</span></span><br><span class=\"line\"><span class=\"keyword\">byte</span>  b = <span class=\"number\">100</span>;<span class=\"comment\">// byte -128--127</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> i= b;<span class=\"comment\">//  将byte转换为了int   有小范围到大范围 自动类型转换</span></span><br><span class=\"line\">i = <span class=\"number\">200</span>;</span><br><span class=\"line\">b = (<span class=\"keyword\">byte</span>)i;<span class=\"comment\">//强制转换  转换是存在一定的风险的   会造成数据的损失</span></span><br><span class=\"line\">System.out.println(b);</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://imgtu.com/i/WMO4yt\"><img data-src=\"https://z3.ax1x.com/2021/07/16/WMO4yt.png\" alt=\"WMO4yt.png\"></a></p>\n<p>上图从左到右可以进行自动类型转换。</p>\n<h3 id=\"强制类型转换\"><a class=\"markdownIt-Anchor\" href=\"#强制类型转换\">#</a> <strong> <code>强制类型转换</code> </strong></h3>\n<hr>\n<p>强制类型转换：把一个数据类型范围大的数值或者变量赋值给另一个数据类型范围小的变量。<br>\n当把大范围的数据强制转换为小范围的数据的时候 <code>保留低位,舍弃高位</code> 。</p>\n<p><code>数据类型  变量  = （目标类型） 变量/数据；</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t</span><br><span class=\"line\"><span class=\"keyword\">byte</span>  b1 = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">byte</span>  b2 =<span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"keyword\">byte</span> b3 = (<span class=\"keyword\">byte</span>) (b1 + b2);<span class=\"comment\">// 在进行算术运算时  会默认自动将整数转换为int类型 在计算结果   结果就是一个int类型  此时如果要将b1 + b2的结果赋值给b3  则需要强制转换</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<h2 id=\"运算符\"><a class=\"markdownIt-Anchor\" href=\"#运算符\">#</a> 运算符</h2>\n</blockquote>\n<p>运算符：对常量或者变量进行操作的符号。<br>\n表达式：用运算符把常量或者变量连接起来的符合 java 语法的字符串，称为表达式。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> b = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"comment\">//int c = a + b ;</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> c;</span><br><span class=\"line\">c  = a + b;<span class=\"comment\">//表达式   类型  将a+b的结果赋值给c</span></span><br></pre></td></tr></table></figure>\n<p>java 提供的运算符分为以下几类：</p>\n<pre><code>算数运算符\n关系运算符\n位运算符（左*2，右/2）\n逻辑运算符\n赋值运算符\n其他运算符\n</code></pre>\n<h3 id=\"算数运算\"><a class=\"markdownIt-Anchor\" href=\"#算数运算\">#</a> <strong> <code>算数运算</code> </strong></h3>\n<hr>\n<p>算数运算符包括加法（+）、减法（-）、乘法（*）、除法（/）、取余（%）、自增（++）、自减（–）。</p>\n<p><font color = red>注意：</font>  除法运算结果是两数相除取整。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//算术运算</span></span><br><span class=\"line\"><span class=\"keyword\">int</span>  aa =   <span class=\"number\">15</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> bb = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dd = aa / bb;<span class=\"comment\">//商</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> ee = aa % bb;<span class=\"comment\">//余数   取余运算</span></span><br><span class=\"line\">System.out.println(dd);</span><br><span class=\"line\">System.out.println(ee);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>自增（减）运算\n<ul>\n<li><code>a++;a--;</code>  表示先运算再自增 (减) 1。</li>\n<li><code>++a;--a;</code>  表示先自增（减）1，再进行运算。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 自增自减</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span>  a2 = <span class=\"number\">11</span>;</span><br><span class=\"line\">  a2--;<span class=\"comment\">//先取值 后运算</span></span><br><span class=\"line\">  System.out.println(a2);<span class=\"comment\">// 10</span></span><br><span class=\"line\">  --a2;<span class=\"comment\">// 先运算  后取值</span></span><br><span class=\"line\">  System.out.println(a2);<span class=\"comment\">//9 </span></span><br></pre></td></tr></table></figure>\n<p>单独使用的时候，++ 和 -- 无论放在变量的左边或者右边 ，结果都是一样的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//自增自减</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span>  a2 = <span class=\"number\">11</span>;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> a3;</span><br><span class=\"line\">       a3= a2--;<span class=\"comment\">// 先取值（a3 = a2）  后运算（a2=a2-1）   </span></span><br><span class=\"line\">       System.out.println(a3);<span class=\"comment\">//a3 =11  a2 =10</span></span><br><span class=\"line\">       a3= --a2;<span class=\"comment\">// 先运算（a2= a2-1）a2=9  后取值 a3= a2  </span></span><br><span class=\"line\">       System.out.println(a3);<span class=\"comment\">//9</span></span><br></pre></td></tr></table></figure>\n<p><code>思考练习：</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//自增自减的练习</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> x = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> y = x++ + x++ + x++;</span><br><span class=\"line\">System.out.println(y);<span class=\"comment\">// 10 +11 + 12 = 33</span></span><br><span class=\"line\">System.out.println(x);<span class=\"comment\">// 13 </span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>整数运算\n<ul>\n<li><code>byte、short、int</code>  类型的数据之间进行运算，结果均为 <code>int类型</code> 。</li>\n<li>任意操作数为 long 类型，则结果必为 <code>long类型</code> 。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>   i1 = <span class=\"number\">20</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> i2 = <span class=\"number\">30</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> sum1 = i1 + i2; <span class=\"comment\">// int</span></span><br><span class=\"line\"><span class=\"keyword\">byte</span>  b1 = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">short</span> s1 = <span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> sum2 = b1 +s1 ;<span class=\"comment\">// int</span></span><br><span class=\"line\"><span class=\"keyword\">long</span>  l1 = <span class=\"number\">23L</span>;</span><br><span class=\"line\"><span class=\"keyword\">long</span> sum3 =  i1 + l1;<span class=\"comment\">// long</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>浮点运算\n<ul>\n<li>两个操作数都是 float 时，结果为 <code>float类型</code> 。</li>\n<li>任意操作数为 double 类型时，结果必为 <code>double类型</code> 。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 浮点运算规则</span></span><br><span class=\"line\">      <span class=\"keyword\">float</span>  f1 = <span class=\"number\">3.14F</span>;</span><br><span class=\"line\">      <span class=\"keyword\">float</span> f2 = <span class=\"number\">2.56F</span>;</span><br><span class=\"line\">      <span class=\"keyword\">float</span> sumf  = f1 + f2;<span class=\"comment\">// 如果两个操作数都是float类型 则结果可以使用float保存也可以使用double（这是类型自动转换）</span></span><br><span class=\"line\">      System.out.println(sumf);</span><br><span class=\"line\">      <span class=\"keyword\">double</span> d1 = <span class=\"number\">4.5</span>;</span><br><span class=\"line\">      <span class=\"keyword\">double</span> sumd = f1 + d1 ;<span class=\"comment\">//浮点数在进行运算的时候  如果有一个操作数为double  则结果肯定为double</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>取模求余\n<ul>\n<li>浮点数也可以作取余运算。</li>\n<li>取余运算的结果为两操作数相除的余数， 余数的符号和符号与左边操作数的符号保持一致。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//取模求余运算</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> ss1 =  <span class=\"number\">7</span> % <span class=\"number\">3</span>;<span class=\"comment\">// 1</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> ss2 = -<span class=\"number\">7</span> % <span class=\"number\">3</span>; <span class=\"comment\">//-1</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> ss3 = <span class=\"number\">7</span> % -<span class=\"number\">3</span> ; <span class=\"comment\">// 1</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>字符算数运算\n<ul>\n<li>char 类型参与算数运算，使用的是字符的 <code>ascii码</code> 。‘A’=97,‘a’=65,‘0’=48。</li>\n<li>算数表达式中包含 <code>多个基本数据类型</code> 的操作数的时候，整个算数表达式的 <code>类型会自动提升</code> 。</li>\n<li>提升规则：</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字符串的操作</span></span><br><span class=\"line\">      String  str1 = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> aa = <span class=\"number\">22</span>;</span><br><span class=\"line\">      String str2 = str1 + aa;<span class=\"comment\">// hello22</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>字符串的 “+” 操作\n<ul>\n<li>当字符串和数值型的数据进行运算时（+），此时进行的是字符串拼接，而不是算术运算。</li>\n<li>&quot;+&quot; 称为字符串拼接字符。混合拼接时是 <code>从左往右依次运算</code> 。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> String  str3 = <span class=\"number\">1</span> + <span class=\"number\">999</span> + <span class=\"string\">&quot;年中国&quot;</span>;<span class=\"comment\">// 1000年中国</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">2000</span>+ <span class=\"number\">20</span> +<span class=\"string\">&quot;中国&quot;</span>+<span class=\"number\">6</span>+<span class=\"number\">666</span>);<span class=\"comment\">//2020中国6666</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"关系运算\"><a class=\"markdownIt-Anchor\" href=\"#关系运算\">#</a> <strong> <code>关系运算</code> </strong></h3>\n<hr>\n<p>为 Java 支持的关系运算符。关系运算的结果都是 <code>Boolean类型</code> 。结果只能是 true 或 false。</p>\n<p><code>== </code> 、 <code>！=</code>  、 <code>&gt;</code>  、 <code>&lt;</code>     <code>&gt;=</code>  、  <code>&lt;=</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 关系运算</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span>  m = <span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = <span class=\"number\">20</span>;</span><br><span class=\"line\">    System.out.println(m==n);</span><br><span class=\"line\">    System.out.println(m!=n);</span><br><span class=\"line\">    System.out.println(m&gt;n);</span><br><span class=\"line\">    System.out.println(m&lt;n);</span><br><span class=\"line\">    System.out.println(m&gt;=n);</span><br><span class=\"line\">    System.out.println(m&lt;=n);</span><br><span class=\"line\">    <span class=\"comment\">//如果在开发中，  比较的结果在后续程序中需要使用，此时我们则需要使用一个变量将比较的结果保存起来</span></span><br><span class=\"line\">    <span class=\"keyword\">boolean</span>  flag = m &gt; n;</span><br><span class=\"line\">    System.out.println(flag);</span><br></pre></td></tr></table></figure>\n<h3 id=\"赋值运算\"><a class=\"markdownIt-Anchor\" href=\"#赋值运算\">#</a> <strong> <code>赋值运算</code> </strong></h3>\n<hr>\n<ul>\n<li>赋值运算符： <code>=</code></li>\n<li>扩展的赋值运算符： <code>=</code> 、 <code>+=</code> 、 <code>-=</code> 、 <code>*=</code> 、 <code>/=</code></li>\n<li>扩展赋值运算符中，先进性算术运算后进行赋值，隐含着强制类型转换。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//  赋值运算符</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span>  a1 = <span class=\"number\">10</span>;</span><br><span class=\"line\">      a1 += <span class=\"number\">10</span>; <span class=\"comment\">// a1 = a1 + 10</span></span><br><span class=\"line\">      System.out.println(a1);</span><br><span class=\"line\">      <span class=\"keyword\">short</span> s1 = <span class=\"number\">20</span>;</span><br><span class=\"line\">      s1 = (<span class=\"keyword\">short</span>)(s1 + <span class=\"number\">10</span>);</span><br><span class=\"line\">      s1 += <span class=\"number\">10</span>;<span class=\"comment\">// 类似于 s1 = s1 + 10  此时的扩展赋值运算符  隐含着类型的强制转换</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"条件运算\"><a class=\"markdownIt-Anchor\" href=\"#条件运算\">#</a> <strong> <code>条件运算</code> </strong></h3>\n<hr>\n<ul>\n<li>三元运算符： <code>关系表达式 ? 表达式1： 表达式2</code></li>\n<li>运算规则：\n<ul>\n<li>计算关系表达式的值。</li>\n<li>如果关系表达式的值为 true，则结果为表达式 1 的值。</li>\n<li>如果关系表达式的值为 fasle，则结果为表达式 2 的值。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 9 三元运算符</span></span><br><span class=\"line\">  <span class=\"keyword\">int</span> a9 = <span class=\"number\">10</span>;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> a10 = <span class=\"number\">20</span>;</span><br><span class=\"line\">  System.out.println(a9 &gt; a10 ? a10 : a9);</span><br></pre></td></tr></table></figure>\n<h3 id=\"逻辑运算\"><a class=\"markdownIt-Anchor\" href=\"#逻辑运算\">#</a> <strong> <code>逻辑运算</code> </strong></h3>\n<hr>\n<ul>\n<li>逻辑运算符：\n<ul>\n<li><code>&amp;(与)</code> : 只要有一个为 false 结果就 false。</li>\n<li><code>|(或)</code> : 只要有一个为 true 结果就 true。</li>\n<li><code>！(非)</code> : 取反。true 变 false，false 变 true。</li>\n<li><code>^(异或)</code>  : 结果不同为 true，相同为 false。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//逻辑运算</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> i = <span class=\"number\">10</span>;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> j = <span class=\"number\">20</span>;</span><br><span class=\"line\">      <span class=\"keyword\">int</span> k = <span class=\"number\">30</span>;</span><br><span class=\"line\">      System.out.println((i &gt; j) &amp; (i &gt;k));<span class=\"comment\">//false</span></span><br><span class=\"line\">      System.out.println((i &lt; j)&amp;(i &gt; k));<span class=\"comment\">//false</span></span><br><span class=\"line\">      System.out.println((i&gt;j) | (i &lt; k)); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"短路逻辑运算\"><a class=\"markdownIt-Anchor\" href=\"#短路逻辑运算\">#</a> <strong> <code>短路逻辑运算</code> </strong></h3>\n<hr>\n<ul>\n<li>\n<p><code>&amp;&amp; 短路与</code>  ：作用和 &amp; 相同，但是有短路效果。</p>\n</li>\n<li>\n<p><code>|| 短路或</code>  ：作用和 | 相同，但是有短路效果。</p>\n</li>\n<li>\n<p>&amp; ，无论左边真或假 右边都会执行。</p>\n</li>\n<li>\n<p>&amp;&amp; ， 若果左边为真，右边肯定会执行。如果左边为 false 右边就不执行。</p>\n</li>\n<li>\n<p>| 无论左边为真或假，右边都是要执行。</p>\n</li>\n<li>\n<p>|| 如果左边为 true ， 右边不执行 。  如果左边为 false，此时右边才需要执行。</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        <span class=\"comment\">//6 短路逻辑</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> p = <span class=\"number\">3</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> c = <span class=\"number\">4</span>;</span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(p++ &gt;4 &amp; c++ &gt;5);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(p+&quot;----&quot;+c);// 4 ---5</span></span><br><span class=\"line\">        System.out.println(p++ &gt;<span class=\"number\">4</span> &amp;&amp; c++ &gt;<span class=\"number\">5</span>);<span class=\"comment\">//左边为false  右边则不参与运算</span></span><br><span class=\"line\">        System.out.println(p+<span class=\"string\">&quot;----&quot;</span>+c);<span class=\"comment\">//4---4</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"位运算\"><a class=\"markdownIt-Anchor\" href=\"#位运算\">#</a> <strong> <code>位运算</code> </strong></h3>\n<hr>\n<p>位运算指的是进行二进制位的运算。</p>\n<ul>\n<li>\n<p>位运算符：</p>\n<ul>\n<li><code>~ 取反 </code></li>\n<li><code>&amp; 按位与</code></li>\n<li><code>| 按位或</code></li>\n<li><code>^</code>  按位异或</li>\n<li><code>&lt;&lt; 左移</code> ：将整个 2 进制数据左移一位 相当与将原来的数乘 2。</li>\n<li><code>&gt;&gt; 右移 </code>  : 将整个的 2 进制右移一位  相当与将原来的数除 2。</li>\n</ul>\n</li>\n<li>\n<p>&amp; 和 |，如果两边的操作数类型是 boolean 类型，则是 <code>逻辑运算</code>  。如果两边的操作数是整数 则为 <code>位运算</code> 。</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//7 位运算</span></span><br><span class=\"line\">       <span class=\"keyword\">int</span> a4 = <span class=\"number\">5</span>;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> a5 = <span class=\"number\">3</span>;</span><br><span class=\"line\">       <span class=\"keyword\">int</span> a6=<span class=\"number\">2</span>;</span><br><span class=\"line\">       System.out.println(~a4);</span><br><span class=\"line\">       System.out.println(a4 &amp; a5);</span><br><span class=\"line\">       <span class=\"comment\">// 使用最高效的方法   计算2的三次方</span></span><br><span class=\"line\">       System.out.println(a6 * a6  * a6);</span><br><span class=\"line\">       System.out.println(a6 &lt;&lt; <span class=\"number\">2</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">//8 面试题</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> a7 = <span class=\"number\">5</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> a8 = <span class=\"number\">6</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 需求  在不增加变量的情况下  交换两个整数</span></span><br><span class=\"line\"><span class=\"comment\">//        int a9 = a7;</span></span><br><span class=\"line\"><span class=\"comment\">//        a7 = a8;</span></span><br><span class=\"line\"><span class=\"comment\">//        a8 = a9;</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(a7 +&quot;-------&quot;+ a8);</span></span><br><span class=\"line\">        <span class=\"comment\">//经过三次异或  就可以交换两个数的位置</span></span><br><span class=\"line\">        a7 = a7 ^ a8;</span><br><span class=\"line\">        a8 = a7 ^ a8;</span><br><span class=\"line\">        a7 = a7 ^ a8;</span><br><span class=\"line\">        System.out.println(a7 +<span class=\"string\">&quot;-------&quot;</span>+ a8);</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMjEvMDEvX3hvci5odG1s\">异或运算详解参考</span></p>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2020/04/12/computer-science/r/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%AC%AC%E4%B8%80%E8%AF%BE/",
            "url": "http://example.com/2020/04/12/computer-science/r/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%AC%AC%E4%B8%80%E8%AF%BE/",
            "title": "R语言：第一课",
            "date_published": "2020-04-12T12:46:25.000Z",
            "content_html": "<h1 id=\"r语言第一课\"><a class=\"markdownIt-Anchor\" href=\"#r语言第一课\">#</a> R 语言：第一课</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9yL3Itc2V0dXAuaHRtbA==\">R 语言的环境安装</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8xYTBmMjUwODZlOGI=\">RStudio 安装</span></p>\n<h3 id=\"1-从帮助文档中获取信息\"><a class=\"markdownIt-Anchor\" href=\"#1-从帮助文档中获取信息\">#</a> <strong>1、从帮助文档中获取信息</strong></h3>\n<p>常用帮助函数包括：</p>\n<p><u>help.start()</u>: 该命令会打开浏览器的窗口，显示帮助文档的首页。</p>\n<p><u>help()、args()、example()</u>: 了解更多关于某个函数的信息、调用简介和操作实例。help (函数名)，等价于 <u>？函数名</u>    。</p>\n<p><u>help.search()</u>: 查看是否有实现某种功能的函数。等价于<u>?? 加函数名</u>。</p>\n<p><u>help(package=&quot;…&quot;)</u>: 查阅特定包的信息。</p>\n<p><u>RSiteSearch()</u>: 可以使用关键词来搜索在线的帮助文档和邮件列表存档。</p>\n<p><u>apropos()</u>: 以局部匹配的方式进行关键词搜索，即返回名称中含有某个关键词的所有对象。</p>\n<h3 id=\"2-基础包和扩展包\"><a class=\"markdownIt-Anchor\" href=\"#2-基础包和扩展包\">#</a> <strong>2、基础包和扩展包</strong></h3>\n<p>1）、随着 R 语言一起安装的、用于执行各种统计或制图等基本功能的程式包，称为基础包（标准包）。</p>\n<p>主要的基础包：</p>\n<table>\n<thead>\n<tr>\n<th>基础包</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>base</td>\n<td>提供各类基础函数</td>\n</tr>\n<tr>\n<td>datasets</td>\n<td>提供各种示例数据集</td>\n</tr>\n<tr>\n<td>graphics</td>\n<td>提供各种基础绘图函数</td>\n</tr>\n<tr>\n<td>grDevices</td>\n<td>提供基础或者 grid 图形设备</td>\n</tr>\n<tr>\n<td>methods</td>\n<td>用于 R 对象或者编程工具的方法和类的定义</td>\n</tr>\n<tr>\n<td>utils</td>\n<td>提供 R 语言工具函数</td>\n</tr>\n<tr>\n<td>stats</td>\n<td>提供常用统计函数</td>\n</tr>\n</tbody>\n</table>\n<p>2）、除了基础包以外，基于 R 语言的来源特性，各个领域的专家和使用者编写了大量扩展性的软件包，简称为扩展包（捐献包）。</p>\n<h3 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\">#</a> <strong>常用命令</strong></h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">命令</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">setwd()</td>\n<td style=\"text-align:left\">查看当前目录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setwd()</td>\n<td style=\"text-align:left\">设置目录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">install.package()</td>\n<td style=\"text-align:left\">安装包</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">library () 或 require ()</td>\n<td style=\"text-align:left\">加载包</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.packages(all.available=TRUE)</td>\n<td style=\"text-align:left\">查看本地安装的所有包</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">demo(package=.packages(all.available=TRUE))</td>\n<td style=\"text-align:left\">查看所有包中可供演示的部分</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">q()</td>\n<td style=\"text-align:left\">退出 R 语言</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3-变量\"><a class=\"markdownIt-Anchor\" href=\"#3-变量\">#</a> <strong>3、变量</strong></h3>\n<p>R 语言的变量名称由字母、数字以及 ** <code>.</code> ** 或者下划线 <code>_</code> 组成。</p>\n<p>变量名称以字母或者 <code>.</code>  开头。  <code>.</code>  号开头后面不能跟着数字。</p>\n<p>R 语言中区分大小写，A 和 a 是完全不同的变量。</p>\n<h3 id=\"4-注释\"><a class=\"markdownIt-Anchor\" href=\"#4-注释\">#</a> <strong>4、注释</strong></h3>\n<p>使用 “ <code>#</code> ” 添加必要的注释。</p>\n<h3 id=\"5-赋值\"><a class=\"markdownIt-Anchor\" href=\"#5-赋值\">#</a> <strong>5、赋值</strong></h3>\n<p>使用恰当的赋值符号。</p>\n<p><code>&lt;-</code> 、 <code>-&gt;</code>  都可以进行赋值，显示的操作是一样的，箭头指向是被赋值的对象。</p>\n<p><code>=</code>  也可以赋值，但不建议使用。</p>\n<p><code>assign(&quot;x&quot;,&quot;value&quot;)</code>  函数也可以进行赋值。</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2020/04/12/computer-science/r/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/",
            "url": "http://example.com/2020/04/12/computer-science/r/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/",
            "title": "数据操作",
            "date_published": "2020-04-12T12:46:25.000Z",
            "content_html": "<h1 id=\"数据操作\"><a class=\"markdownIt-Anchor\" href=\"#数据操作\">#</a> 数据操作</h1>\n<blockquote>\n<p><strong>1、对象</strong></p>\n<p><strong>2、属性、类和模式</strong></p>\n<p><strong>3、数据结构</strong></p>\n<ul>\n<li>\n<p>向量</p>\n</li>\n<li>\n<p>矩阵</p>\n</li>\n<li>\n<p>数组</p>\n</li>\n<li>\n<p>数据框</p>\n</li>\n<li>\n<p>因子</p>\n</li>\n<li>\n<p>列表</p>\n</li>\n<li>\n<p>时间序列</p>\n</li>\n</ul>\n<p><strong>4、数据载入</strong></p>\n<ul>\n<li>\n<p>R 语言中的内部数据测试集</p>\n</li>\n<li>\n<p>从外部文件读取数据</p>\n</li>\n</ul>\n<blockquote>\n<p>函数  <code>read.csv()</code></p>\n<p>函数 <code>read.table()</code></p>\n<p>使用扩展包 <code>gdata中</code> 的 <code>read.xls()</code>  函数</p>\n<p>使用扩展 <code>RODBC</code>  中的相关函数来读取数据</p>\n<p>使用扩展包 foreign 载入其他软件录入的数据</p>\n</blockquote>\n<p><strong>5、数据输出</strong></p>\n<ul>\n<li>\n<p>使用函数 <code>write.table()</code>  导出数据</p>\n</li>\n<li>\n<p>使用函数 sink () 输出信息</p>\n</li>\n</ul>\n<p><strong>6、数据管理</strong></p>\n<ul>\n<li>\n<p>通过下标访问数据</p>\n<blockquote>\n<p>访问向量中的元素</p>\n<p>访问矩阵的子集</p>\n<p>访问数组的子集</p>\n<p>访问数据框的子集</p>\n<p>访问列表的子集</p>\n</blockquote>\n</li>\n<li>\n<p>用 subset () 函数提子集</p>\n</li>\n<li>\n<p>数据排序</p>\n<blockquote>\n<p>使用 sort () 函数对向量进行排序</p>\n<p>使用 order () 和 arrange () 函数对数据框进行排序</p>\n<p>使用 rank () 函数进行排序</p>\n</blockquote>\n</li>\n<li>\n<p>数据合并</p>\n</li>\n<li>\n<p>扩展包 <code>reshape2</code>  重塑数据</p>\n</li>\n<li>\n<p>日期数据的处理</p>\n</li>\n</ul>\n<p><strong>7、常用命令</strong></p>\n</blockquote>\n<h2 id=\"一-对象\"><a class=\"markdownIt-Anchor\" href=\"#一-对象\">#</a> <strong>一、对象</strong></h2>\n<p>R 语言是一种<u><strong>基于对象</strong></u>的语言。</p>\n<h2 id=\"二-属性-类-模式-基本类型\"><a class=\"markdownIt-Anchor\" href=\"#二-属性-类-模式-基本类型\">#</a> <strong>二、属性、类、模式、基本类型</strong></h2>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; attributes(grade)</span><br><span class=\"line\">$levels</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;F&quot;</span> <span class=\"string\">&quot;D&quot;</span> <span class=\"string\">&quot;C&quot;</span> <span class=\"string\">&quot;B&quot;</span> <span class=\"string\">&quot;A&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">$class</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;ordered&quot;</span> <span class=\"string\">&quot;factor&quot;</span> </span><br><span class=\"line\"></span><br><span class=\"line\">&gt; storage.mode(grade)</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">&gt; class(grade)</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;ordered&quot;</span> <span class=\"string\">&quot;factor&quot;</span> </span><br><span class=\"line\">&gt; mode(grade)</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;numeric&quot;</span></span><br><span class=\"line\">&gt; typeof(grade)</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;integer&quot;</span></span><br></pre></td></tr></table></figure>\n<p><code>attributes()</code>  查看对象的属性。</p>\n<p><code>class()</code>  查看对象的类。</p>\n<p><code>mode()</code>  查看对象的存储类型。</p>\n<p><code>storage.mode()</code>  查询的是数据实际在内存中存储所用的方式。</p>\n<p><code>typeof()</code>  的输出结果和 <code>storage.mode()</code>  相同。</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th><code>class()</code></th>\n<th><code>MODE()</code></th>\n<th><code>TYPEOF()</code></th>\n<th><code>storage.mode()</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>逻辑型</td>\n<td>logical</td>\n<td>logical</td>\n<td>logical</td>\n<td>logical</td>\n</tr>\n<tr>\n<td>整数型</td>\n<td>numeric</td>\n<td>numeric</td>\n<td>integer</td>\n<td>integer</td>\n</tr>\n<tr>\n<td>实数型</td>\n<td>numeric</td>\n<td>numeric</td>\n<td>double</td>\n<td>double</td>\n</tr>\n<tr>\n<td>复数型</td>\n<td>complex</td>\n<td>complex</td>\n<td>complex</td>\n<td>complex</td>\n</tr>\n<tr>\n<td>字符型</td>\n<td>character</td>\n<td>character</td>\n<td>character</td>\n<td>character</td>\n</tr>\n<tr>\n<td>字节型</td>\n<td>raw</td>\n<td>raw</td>\n<td>raw</td>\n<td>raw</td>\n</tr>\n<tr>\n<td>列表</td>\n<td>list</td>\n<td>list</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>数据框</td>\n<td><code>data.frame</code></td>\n<td>list</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>矩阵</td>\n<td>matrix</td>\n<td>—</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>数组</td>\n<td>array</td>\n<td>—</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>因子</td>\n<td>factor</td>\n<td>—</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>日期</td>\n<td>Date</td>\n<td>—</td>\n<td>—</td>\n<td>—</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>当 x 是单个值，或者向量的时候，</p>\n<p>返回的结果 class 和 mode 一致，如 numeric，character</p>\n</li>\n<li>\n<p>当 x 是其他情况（矩阵，数组，日期，因子），</p>\n<p>class 返回（matrix，array，Date，factor）</p>\n<p>mode 返回（x 中元素的类型 —— 在内存中的存储类型）</p>\n</li>\n<li>\n<p>当 x 是数据框的时候，</p>\n<p>class 返回 <code>data.frame</code> ，</p>\n<p>mode 返回 list。</p>\n</li>\n<li>\n<p>当 x 是列表的时候，</p>\n<p>class 和 mode 都返回 list。</p>\n</li>\n<li>\n<p>为何数据框和列表不再适用于第二条 mode 返回 x 中元素的类型了呢？</p>\n<ul>\n<li>\n<p>因为数据框其实是列表的一种特殊情况。</p>\n</li>\n<li>\n<p>list 和 <code>data.frame</code>  中的数据类型可以不一致，所以没法返回一个类型代表多种元素类型。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三-数据结构\"><a class=\"markdownIt-Anchor\" href=\"#三-数据结构\">#</a> <strong>三、数据结构</strong></h2>\n<ul>\n<li>\n<h3 id=\"向量\"><a class=\"markdownIt-Anchor\" href=\"#向量\">#</a> <strong>向量</strong></h3>\n</li>\n</ul>\n<p>（1）向量是 R 语言中最基本的数据结构。</p>\n<p>（2）使用赋值符号 “ <code>&lt;-</code> ” 和组合函数 <code>c()</code> , 就能创建各种类型的向量。</p>\n<p>（3）向量必须由<strong>类型相同</strong>的元素组成。</p>\n<p>（4） <code>length()</code>  函数返回向量的长度。长度为 1 的向量为标量，是特殊的向量。</p>\n<p>（5） <code>attributes()</code>  函数可以查看向量的属性，诸如类、名称、维度等信息。</p>\n<p>（6） <code>names()</code>  函数用来给向量的元素命名。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; a&lt;-c(<span class=\"number\">88</span>,<span class=\"number\">77</span>,<span class=\"number\">66</span>)</span><br><span class=\"line\">&gt; names(a)&lt;-c(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>)</span><br><span class=\"line\">&gt; attributes(a)</span><br><span class=\"line\">$names</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;A&quot;</span> <span class=\"string\">&quot;B&quot;</span> <span class=\"string\">&quot;C&quot;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<h3 id=\"矩阵\"><a class=\"markdownIt-Anchor\" href=\"#矩阵\">#</a> <strong>矩阵</strong></h3>\n</li>\n</ul>\n<p>（1）矩阵，是用<strong>行和列</strong>对元素进行定位的二维数据结构。</p>\n<p>（2）基本用法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">matrix(data = <span class=\"literal\">NA</span>, nrow = <span class=\"number\">1</span>, ncol = <span class=\"number\">1</span>, byrow = <span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">       dimnames = <span class=\"literal\">NULL</span>)</span><br></pre></td></tr></table></figure>\n<p><code>\t\t\t\t\tdata</code> : 可选的数据向量 (包括列表或表达式向量)。</p>\n<p><code>\tnrow</code> : 所要创建的矩阵的行数。</p>\n<p><code>\tnlol</code> : 所要创建的矩阵的列数。</p>\n<p><code>\tbyrow:</code>  是否按照行来将数据填充进入矩阵。</p>\n<p><code>\tdimnamens</code> : 矩阵维度的名称。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; m&lt;-matrix(c(<span class=\"number\">1</span>:<span class=\"number\">6</span>),nrow=<span class=\"number\">2</span>,ncol = <span class=\"number\">3</span>,byrow = <span class=\"literal\">FALSE</span>,dimnames = <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">&gt; m</span><br><span class=\"line\">     [,<span class=\"number\">1</span>] [,<span class=\"number\">2</span>] [,<span class=\"number\">3</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>,]    <span class=\"number\">1</span>    <span class=\"number\">3</span>    <span class=\"number\">5</span></span><br><span class=\"line\">[<span class=\"number\">2</span>,]    <span class=\"number\">2</span>    <span class=\"number\">4</span>    <span class=\"number\">6</span></span><br></pre></td></tr></table></figure>\n<p>（3）矩阵必须由<strong>类型相同</strong>的元素组成。</p>\n<p>（4）元素的标记和访问：矩阵生成后， <code>[行号，列号]</code>  用来显示元素的位置。</p>\n<ul>\n<li>\n<p>选取矩阵的某一个元素；</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; m[<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">6</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>选取矩阵某一行所有列的元素；</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; m[<span class=\"number\">1</span>,]</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">1</span> <span class=\"number\">3</span> <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>选取矩阵多行多列的元素；eg:  <code>m[c(1,2),c(1,3)]</code></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; m[c(<span class=\"number\">1</span>,<span class=\"number\">2</span>),c(<span class=\"number\">1</span>,<span class=\"number\">3</span>)]</span><br><span class=\"line\">     [,<span class=\"number\">1</span>] [,<span class=\"number\">2</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>,]    <span class=\"number\">1</span>    <span class=\"number\">5</span></span><br><span class=\"line\">[<span class=\"number\">2</span>,]    <span class=\"number\">2</span>    <span class=\"number\">6</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>剔除矩阵某行和某列，保留剩下的元素； <code>m[-1,]、m[-1,-3]</code></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; m[-<span class=\"number\">1</span>,-<span class=\"number\">3</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">2</span> <span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>（5）用向量生成矩阵：结合函数 <code>cbind()</code>  或 <code>rbind()</code> 。</p>\n<ul>\n<li>\n<p><code>cbind()</code> : 将所需要的变量以列的方式组合。</p>\n</li>\n<li>\n<p><code>rbind()</code> : 将所需要的变量以行的方式组合。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; o&lt;-c(<span class=\"string\">&#x27;H&#x27;</span>,<span class=\"string\">&#x27;I&#x27;</span>,<span class=\"string\">&#x27;J&#x27;</span>)</span><br><span class=\"line\">&gt; p&lt;-c(<span class=\"string\">&#x27;K&#x27;</span>,<span class=\"string\">&#x27;L&#x27;</span>,<span class=\"string\">&#x27;M&#x27;</span>)</span><br><span class=\"line\">&gt; q&lt;-c(<span class=\"string\">&#x27;N&#x27;</span>,<span class=\"string\">&#x27;P&#x27;</span>,<span class=\"string\">&#x27;Q&#x27;</span>)</span><br><span class=\"line\">&gt; opq&lt;-cbind(o,p,q)</span><br><span class=\"line\">&gt; qpo&lt;-rbind(o,p,q)</span><br><span class=\"line\">&gt; opq</span><br><span class=\"line\">     o   p   q  </span><br><span class=\"line\">[<span class=\"number\">1</span>,] <span class=\"string\">&quot;H&quot;</span> <span class=\"string\">&quot;K&quot;</span> <span class=\"string\">&quot;N&quot;</span></span><br><span class=\"line\">[<span class=\"number\">2</span>,] <span class=\"string\">&quot;I&quot;</span> <span class=\"string\">&quot;L&quot;</span> <span class=\"string\">&quot;P&quot;</span></span><br><span class=\"line\">[<span class=\"number\">3</span>,] <span class=\"string\">&quot;J&quot;</span> <span class=\"string\">&quot;M&quot;</span> <span class=\"string\">&quot;Q&quot;</span></span><br><span class=\"line\">&gt; qpo</span><br><span class=\"line\">  [,<span class=\"number\">1</span>] [,<span class=\"number\">2</span>] [,<span class=\"number\">3</span>]</span><br><span class=\"line\">o <span class=\"string\">&quot;H&quot;</span>  <span class=\"string\">&quot;I&quot;</span>  <span class=\"string\">&quot;J&quot;</span> </span><br><span class=\"line\">p <span class=\"string\">&quot;K&quot;</span>  <span class=\"string\">&quot;L&quot;</span>  <span class=\"string\">&quot;M&quot;</span> </span><br><span class=\"line\">q <span class=\"string\">&quot;N&quot;</span>  <span class=\"string\">&quot;P&quot;</span>  <span class=\"string\">&quot;Q&quot;</span> </span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>（6）转置函数 <code>t()</code> :</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; identical(opq,t(qpo))</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"literal\">TRUE</span></span><br></pre></td></tr></table></figure>\n<p>（7）行和列的命名： <code>rownames()</code>  和  <code>colnames()</code></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; rownames(opq)&lt;-c(<span class=\"string\">&#x27;one&#x27;</span>,<span class=\"string\">&#x27;two&#x27;</span>,<span class=\"string\">&#x27;three&#x27;</span>)</span><br><span class=\"line\">&gt; colnames(opq)&lt;-c(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>)</span><br><span class=\"line\">&gt; opq[<span class=\"string\">&#x27;one&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>]  <span class=\"comment\">#还可以通过列名和行名访问元素的位置。</span></span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;K&quot;</span></span><br><span class=\"line\">&gt; opq</span><br><span class=\"line\">      A   B   C  </span><br><span class=\"line\">one   <span class=\"string\">&quot;H&quot;</span> <span class=\"string\">&quot;K&quot;</span> <span class=\"string\">&quot;N&quot;</span></span><br><span class=\"line\">two   <span class=\"string\">&quot;I&quot;</span> <span class=\"string\">&quot;L&quot;</span> <span class=\"string\">&quot;P&quot;</span></span><br><span class=\"line\">three <span class=\"string\">&quot;J&quot;</span> <span class=\"string\">&quot;M&quot;</span> <span class=\"string\">&quot;Q&quot;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<h3 id=\"数组\"><a class=\"markdownIt-Anchor\" href=\"#数组\">#</a> <strong>数组</strong></h3>\n<p>（1）如果说矩阵是向量的推广，那么数组就是矩阵的推广。数组和矩阵\t\t   作为数据结构的主要特征就是具有维度。数组和矩阵就是添加了维    \t\t   度属性的向量。</p>\n<p>（2）基本用法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array(data = <span class=\"literal\">NA</span>, dim = length(data), dimnames = <span class=\"literal\">NULL</span>)</span><br></pre></td></tr></table></figure>\n<p><code>\t\t\t\t\tdata</code> : 数组中的数据。</p>\n<p><code>\tdim</code> : 所要创建的数组的维度。</p>\n<p>​\t\ta. 数组中用来确定元素位置下标的个数，即为维度。</p>\n<p>​\t\tb.  <code>dim()</code>  函数返回各个维度的最大值。</p>\n<p>​\t    c. 根据 “矩阵是赋予了维度属性的向量”，</p>\n<p>​\t\t\t可应用于将向量转换成数组。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; d&lt;-c(<span class=\"number\">1</span>:<span class=\"number\">14</span>)</span><br><span class=\"line\">&gt; dim(d)&lt;-c(<span class=\"number\">2</span>,<span class=\"number\">7</span>)</span><br><span class=\"line\">&gt; d</span><br><span class=\"line\">     [,<span class=\"number\">1</span>] [,<span class=\"number\">2</span>] [,<span class=\"number\">3</span>] [,<span class=\"number\">4</span>] [,<span class=\"number\">5</span>] [,<span class=\"number\">6</span>] [,<span class=\"number\">7</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>,]    <span class=\"number\">1</span>    <span class=\"number\">3</span>    <span class=\"number\">5</span>    <span class=\"number\">7</span>    <span class=\"number\">9</span>   <span class=\"number\">11</span>   <span class=\"number\">13</span></span><br><span class=\"line\">[<span class=\"number\">2</span>,]    <span class=\"number\">2</span>    <span class=\"number\">4</span>    <span class=\"number\">6</span>    <span class=\"number\">8</span>   <span class=\"number\">10</span>   <span class=\"number\">12</span>   <span class=\"number\">14</span></span><br><span class=\"line\">&gt; </span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>\n<p>对 <code>dim = length(data)</code>  的理解:</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; dim1&lt;-c(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\">&gt; dim2&lt;-c(<span class=\"string\">&#x27;v&#x27;</span>,<span class=\"string\">&#x27;w&#x27;</span>,<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">&gt; dim3&lt;-c(<span class=\"string\">&#x27;o&#x27;</span>,<span class=\"string\">&#x27;p&#x27;</span>,<span class=\"string\">&#x27;q&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"comment\">#给各个维度命名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># data=c(1:24),dim=c(4,3,2)</span></span><br><span class=\"line\">&gt; arr&lt;-array(data = c(<span class=\"number\">1</span>:<span class=\"number\">24</span>),dim=c(<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>),dimnames = list(dim3,dim2,dim1))</span><br><span class=\"line\">&gt; arr</span><br><span class=\"line\">, , a</span><br><span class=\"line\"></span><br><span class=\"line\">  v w  x</span><br><span class=\"line\">o <span class=\"number\">1</span> <span class=\"number\">5</span>  <span class=\"number\">9</span></span><br><span class=\"line\">p <span class=\"number\">2</span> <span class=\"number\">6</span> <span class=\"number\">10</span></span><br><span class=\"line\">q <span class=\"number\">3</span> <span class=\"number\">7</span> <span class=\"number\">11</span></span><br><span class=\"line\">r <span class=\"number\">4</span> <span class=\"number\">8</span> <span class=\"number\">12</span></span><br><span class=\"line\"></span><br><span class=\"line\">, , b</span><br><span class=\"line\"></span><br><span class=\"line\">   v  w  x</span><br><span class=\"line\">o <span class=\"number\">13</span> <span class=\"number\">17</span> <span class=\"number\">21</span></span><br><span class=\"line\">p <span class=\"number\">14</span> <span class=\"number\">18</span> <span class=\"number\">22</span></span><br><span class=\"line\">q <span class=\"number\">15</span> <span class=\"number\">19</span> <span class=\"number\">23</span></span><br><span class=\"line\">r <span class=\"number\">16</span> <span class=\"number\">20</span> <span class=\"number\">24</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 循环原则data=c(1:10),dim=c(4,3,2)</span></span><br><span class=\"line\">&gt; arr&lt;-array(data = c(<span class=\"number\">1</span>:<span class=\"number\">10</span>),dim=c(<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>),dimnames = list(dim3,dim2,dim1))</span><br><span class=\"line\">&gt; arr</span><br><span class=\"line\">, , a</span><br><span class=\"line\"></span><br><span class=\"line\">  v w  x</span><br><span class=\"line\">o <span class=\"number\">1</span> <span class=\"number\">5</span>  <span class=\"number\">9</span></span><br><span class=\"line\">p <span class=\"number\">2</span> <span class=\"number\">6</span> <span class=\"number\">10</span></span><br><span class=\"line\">q <span class=\"number\">3</span> <span class=\"number\">7</span>  <span class=\"number\">1</span></span><br><span class=\"line\">r <span class=\"number\">4</span> <span class=\"number\">8</span>  <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">, , b</span><br><span class=\"line\"></span><br><span class=\"line\">  v  w x</span><br><span class=\"line\">o <span class=\"number\">3</span>  <span class=\"number\">7</span> <span class=\"number\">1</span></span><br><span class=\"line\">p <span class=\"number\">4</span>  <span class=\"number\">8</span> <span class=\"number\">2</span></span><br><span class=\"line\">q <span class=\"number\">5</span>  <span class=\"number\">9</span> <span class=\"number\">3</span></span><br><span class=\"line\">r <span class=\"number\">6</span> <span class=\"number\">10</span> <span class=\"number\">4</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><code>\tdimnames</code> : 对数组的各个维度命名。</p>\n<p>（3）数组中的所有元素必须是<strong>同一类型</strong>的数据。</p>\n<ul>\n<li>\n<h3 id=\"数据框\"><a class=\"markdownIt-Anchor\" href=\"#数据框\">#</a> <strong>数据框</strong></h3>\n</li>\n<li>\n<h3 id=\"因子\"><a class=\"markdownIt-Anchor\" href=\"#因子\">#</a> <strong>因子</strong></h3>\n</li>\n<li>\n<h3 id=\"列表\"><a class=\"markdownIt-Anchor\" href=\"#列表\">#</a> ** 列表 **</h3>\n</li>\n<li>\n<h3 id=\"时间序列\"><a class=\"markdownIt-Anchor\" href=\"#时间序列\">#</a> <strong>时间序列</strong></h3>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        }
    ]
}