{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2021/07/15/computer-science/java/Java-%E5%88%9D%E9%81%87/",
            "url": "http://example.com/2021/07/15/computer-science/java/Java-%E5%88%9D%E9%81%87/",
            "title": "Java-初遇",
            "date_published": "2021-07-15T10:23:23.000Z",
            "content_html": "<h1 id=\"font-color7b68eejava-发展历程font\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejava-发展历程font\">#</a> <font color=\"#7B68EE\">Java 发展历程</font></h1>\n<ul>\n<li>1995 年， <code>Java 语言诞生</code> ，由  <code>Sun</code>  公司推出；</li>\n<li>2004 年，发布  <code>J2SE 1.5</code>  ，成为 Java 语言发展史上重要版本。</li>\n<li>2009 年，Sun 公司被  <code>Oracle</code>  公司收购。</li>\n<li>2014 年，发布  <code>JDK 8.0</code>  。</li>\n<li>2018 年，发布 JDK 11.0 。</li>\n</ul>\n<h1 id=\"font-color7b68eejava-体系font\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejava-体系font\">#</a> <font color=\"#7B68EE\">Java 体系</font></h1>\n<ul>\n<li>\n<p><code>JavaSE</code> ，Java 的基础和核心。允许开发和部署在桌面、服务器、嵌入式环境和实时环境中使用的 Java 应用程序。</p>\n</li>\n<li>\n<p><code>JavaEE</code> ， Java 企业版。多用于 Web 系统的服务端开发。</p>\n</li>\n<li>\n<p><code>JavaME</code> ， Java 小型版。可以用于嵌入式设备的 Java 程序开发。可以用于移动端的开发（不同于 Android 开发）。</p>\n</li>\n</ul>\n<p><a href=\"https://imgtu.com/i/WnouzF\"><img data-src=\"https://z3.ax1x.com/2021/07/15/WnouzF.png\" alt=\"WnouzF.png\"></a></p>\n<h1 id=\"font-color7b68eejava-特性和优势font\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejava-特性和优势font\">#</a> <font color=\"#7B68EE\">Java 特性和优势</font></h1>\n<ul>\n<li>\n<p><code>跨平台性（可移植性）</code> ：跨平台性是 Java 语言的核心优势。</p>\n</li>\n<li>\n<p><code>面向对象</code> ： Java 是一门完全面向对象的语言。</p>\n<p><code>面向对象和面向过程的区别</code> ：</p>\n<ul>\n<li>\n<p>面向对象具有三大特征：封装性、继承性和多态性，而面向过程没有继承性和多态性，并且面向过程的封装只是封装功能，而面向对象可以封装数据和功能。所以面向对象优势更明显。</p>\n</li>\n<li>\n<p>一个经典的比喻：面向对象是盖浇饭、面向过程是蛋炒饭。<br>\n盖浇饭的好处就是 “菜”“饭” 分离，从而提高了制作盖浇饭的灵活性。饭不满意就换饭，菜不满意换菜。用软件工程的专业术语就是 “可维护性” 比较好，“饭” 和 “菜” 的耦合度比较低。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>健壮性</code> ：归功于垃圾回收机制（GC）。</p>\n</li>\n<li>\n<p>高能性： <code>即时编译技术</code> 。</p>\n<ul>\n<li><code>即时编译技术</code> ：JVM 可判断某段字节码其是否属于 <code>使用频率较高</code> 的热点代码。如果是，就会将字节码文件转换出的本地机器码保存，以便下次直接执行机器码文件。这使得 Java 程序的执行效率得到很大的提高。</li>\n</ul>\n</li>\n<li>\n<p>安全性：Java 的 <code>存储分配模型</code> 是它防御恶意代码的要方法之一。</p>\n</li>\n<li>\n<p>简单性：Java 相较 C++，去掉了一些一般程序员很少使用的特征。例如:</p>\n<ul>\n<li>Java 不支持<font color=\"red\">go to</font>语句，代之以提供 break 和 continue 语句以及异常处理。</li>\n<li>Java 还剔除了 C++ 的操作符过载<font color=\"red\">(overload)</font>和多继承特征，并且不使用主文件，免去了预处理程序。</li>\n<li>因为 Java 没有结构，数组和串都是对象，所以不需要<font color=\"red\">指针</font>。Java 能够自动处理对象的引用和间接引用，实现自动的无用单元收集。</li>\n</ul>\n</li>\n<li>\n<p>分布式：Java 设计成支持在网络上应用，它是分布式语言。网络变成软件应用的 <code>分布运载工具</code> 。Java 程序只要编写一次，就可到处运行。</p>\n</li>\n<li>\n<p>多线程性</p>\n</li>\n</ul>\n<h1 id=\"font-color7b68eejava-两种核心机制font\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejava-两种核心机制font\">#</a> <font color=\"#7B68EE\">Java 两种核心机制</font></h1>\n<ul>\n<li>\n<p><code>JVM（Java虚拟机）</code></p>\n<ul>\n<li>不同平台，JVM 不同；</li>\n<li>一次编译，出出运行；</li>\n</ul>\n</li>\n<li>\n<p><code>垃圾回收机制（GC）</code></p>\n<ul>\n<li>C 语言中，是由程序员负责的。</li>\n<li>Java 中由系统级的线程跟踪存储空间的分配情况，当 JVM 空闲时，检查并释放可以被释放的空间。</li>\n<li>这个过程是自动的。程序员无法精确控制和干预。</li>\n<li>程序仍然会出现内存泄漏和内存溢出的问题。</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"font-color7b68eejdk-jre-jvmfont\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejdk-jre-jvmfont\">#</a> <font color=\"#7B68EE\">JDK、JRE、JVM</font></h1>\n<ul>\n<li>\n<p><code>JVM </code> <br>\nJVM（Java Virtual Machine，Java 虚拟机）是整个 Java 实现跨平台的最核心的部分，负责解释并执行字节码文件。</p>\n</li>\n<li>\n<p><code>JRE</code> <br>\nJRE（Java Runtime Environment，Java 运行环境）<br>\n <code>JRE = JVM + 核心API</code></p>\n</li>\n<li>\n<p><code>JDK</code> <br>\nJDK（Java Development Kit，Java 开发工具包），是整个 java 的核心。<br>\n包括编译工具 <code>javac</code> 、执行程序 <code>java</code> 、文档工具 <code>javadoc</code>  和反编译工具 <code>javap</code>  等使用工具。<br>\n <code>JDK = JRE + java开发工具</code></p>\n</li>\n</ul>\n<p><a href=\"https://imgtu.com/i/WnowsH\"><img data-src=\"https://z3.ax1x.com/2021/07/15/WnowsH.png\" alt=\"WnowsH.png\"></a></p>\n<h1 id=\"font-color7b68eejava-程序工作原理font\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eejava-程序工作原理font\">#</a> <font color=\"#7B68EE\">Java 程序工作原理</font></h1>\n<p> <br>\njava 程序执行过程，大致分为两步：</p>\n<ul>\n<li>通过编译工具 <code>javac</code>  将源码文件（.java）转换成字节码（.class）。</li>\n<li>通过 <code>JVM</code>  将字节码解释为机器码，进而在具体的系统平台上执行。</li>\n</ul>\n<p><code>源码——&gt;字节码</code></p>\n<ul>\n<li><code>词汇和语法分析</code> ：分析源码的执行逻辑，并将其绘制成一个抽象的语法树。</li>\n<li><code>填写符号表</code> ：复杂的程序之间会相互引用，此阶段就会对这些引用关系进行一些预处理工作。（理解：用一些符号来表示各个程序之间的关系。）</li>\n<li><code>注释处理</code> ：对注释进行分析和归类。</li>\n<li><code>生成字节码</code> ：根据前三个阶段的结果，最终生成字节码文件。</li>\n<li><a href=\"https://imgtu.com/i/Wnwran\"><img data-src=\"https://z3.ax1x.com/2021/07/15/Wnwran.png\" alt=\"Wnwran.png\"></a><br>\n </li>\n</ul>\n<p><code>字节码的解释过程</code></p>\n<p>    java 字节码文件先后经过 <code>类加载器</code> 、 <code>字节码校验器</code> 、 <code>解释器</code> 的处理后，最终在擦做系统平台上运行。</p>\n<p><a href=\"https://imgtu.com/i/Wnws5q\"><img data-src=\"https://z3.ax1x.com/2021/07/15/Wnws5q.png\" alt=\"Wnws5q.png\"></a></p>\n<ul>\n<li>\n<p><code>类装载器</code> ：其主要功能是为执行程序寻找和装载所需要的类（把字节码文件装到 java 虚拟机中。）</p>\n</li>\n<li>\n<p><code>字节码校验器</code> ：其功能是对字节码文件进行校验，保证代码的 <code>安全性</code> 。负责测试代码段落格式并进行检查，检查伪造指针、违反对象访问权限或是试图改变对象类型的非法代码。</p>\n</li>\n<li>\n<p><code>解释器</code> ：具体的平台并不认识字节码文件，最终起作用的还是这个最重要的解释器，它负责将字节码文件 <code>翻译</code> 成所在平台的能识别的东西。</p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/07/15/computer-science/java/Java-HelloWorld/",
            "url": "http://example.com/2021/07/15/computer-science/java/Java-HelloWorld/",
            "title": "Java-HelloWorld",
            "date_published": "2021-07-15T10:23:23.000Z",
            "content_html": "<h1 id=\"font-color7b68eehelloworldfont\"><a class=\"markdownIt-Anchor\" href=\"#font-color7b68eehelloworldfont\">#</a> <font color=\"#7B68EE\">HelloWorld</font></h1>\n<p>开发 java 程序步骤：</p>\n<blockquote>\n<p>编写程序<br>\n编译程序<br>\n运行程序</p>\n</blockquote>\n<ul>\n<li><strong> <code>常用dos命令</code> </strong></li>\n</ul>\n<p>在开发 java 程序的过程中，需要在 dos 命令窗口执行命令对源程序进行编译，因此我们需要了解基本的 dos 命令。<br>\n<a href=\"https://imgtu.com/i/WElAr4\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WElAr4.md.png\" alt=\"WElAr4.md.png\"></a></p>\n<ul>\n<li><strong> <code>编写程序</code> </strong></li>\n</ul>\n<p>新建一个.java 文件，用记事本打开，写入以下代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HelloWorld</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello World!&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> </p>\n<ul>\n<li>\n<p><strong> <code>编译源程序</code> </strong></p>\n<p><code>win+R</code>  键入  <code>cmd</code>  进入 dos 命令操作窗口。<br>\n <code>javac HelloWorld.java</code></p>\n</li>\n</ul>\n<p>编译结束后会出现一个.class 文件，是字节码文件。<br>\n<a href=\"https://imgtu.com/i/WE1Z6S\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WE1Z6S.md.jpg\" alt=\"WE1Z6S.md.jpg\"></a></p>\n<ul>\n<li>\n<p><strong> <code>执行程序</code> </strong></p>\n<p><code>java HelloWorld</code> <br>\n 将该字节码文件通过 JVM 解释给计算机并执行。<br>\n<a href=\"https://imgtu.com/i/WE1a79\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WE1a79.png\" alt=\"WE1a79.png\"></a></p>\n</li>\n</ul>\n<p> </p>\n<p><font color=\"#40E0D0\">源码解析</font></p>\n<blockquote>\n<p>（1） <code>public</code>  修饰符用于限定类或类成员的访问级别。<br>\n（2） <code>class</code>  关键字用于定义类，该类的标识符 是 HelloWorld。<br>\n（3）HelloWorld 类被 public 修饰，应在名为 HelloWorld.java 的文件中声明。<br>\n（5）类标识符后紧跟一对大括号，类成员一般定义在这对大括号中，例如实例成员或者静态成员。<br>\n（6） <code>static</code>  关键字用于声明静态成员，这里定义的是一个静态函数，标识符是 main。<br>\n（7） <code>函数标识符</code> 的命名一般采用 <code>驼峰命令法</code> 。<br>\n（8） <code>void</code>  关键字用于定义无返回值的函数。<br>\n（9） <code>main函数</code> 是 Java 程序的主 <code>入口函数</code> 。<br>\n（10）函数标识符后紧跟一对小括号， <code>形式参数</code> 一般定义在这对小括号中，这些形式参数在程序运行时可用于接受来自外部传入的实际参数。<br>\n（11） <code>String</code>  关键字用于定义字符串类型的变量。<br>\n（12） <code>String[]</code>  用于定义字符串类型的数组，该数组的标识符是 args。<br>\n（13）该源程序中的 main 函数的 <code>函数签名</code> 是： <code>public static void main(String[] args)</code> <br>\n（14）在函数签名后紧跟一堆大括号，代码块一般定义在这对大括号中，大括号（包括大括号本身）内的所有代码的集合被称之为 <code>函数体</code> 。<br>\n（15）一个完整的 <code>函数成员</code> 是由函数签名和函数体组成。<br>\n（16） <code>System</code>  是来自 java.lang 包下的一个类。<br>\n（17） <code>out</code>  是 System 类中的一个静态成员，它是 <span class=\"exturl\" data-url=\"aHR0cDovL2phdmEuaW8=\">java.io</span> 包下 PrintStream 类的实例。<br>\n（18） <code>println</code>  是 out 提供的一个实例成员，而且是函数成员。<br>\n（19）访问静态成员的语法是  <code>类名.成员名</code> ，访问实例成员的语法是  <code>实例名.成员名</code> 。<br>\n（20）在代码中 <code>调用一个函数</code> 时需要在该函数名后跟一对小括号，如果该函数需要传递参数，则将对应的实际参数按类型和顺序写到小括号中，并使用英文逗号隔开即可。<br>\n（21）定义 <code>字符串的字面量</code> 是直接将字符串写在双引号中，例如 “Hello World!”。<br>\n（22） <code>分号</code> 代表一行或者一段代码的结束。</p>\n</blockquote>\n<p> </p>\n<blockquote>\n<p><font color=\"#40E0D0\">Java11 新特性</font>：编译运行一步到位： <code>java HelloWorld.java</code></p>\n</blockquote>\n<p> </p>\n<p><font color=\"#40E0D0\">执行程序过程中可能遇到的问题</font></p>\n<blockquote>\n<p>&lt;1&gt; 文件扩展名修改失败。原因很可能是你没有显示出扩展名。<br>\n<font color=\"green\">解决办法：</font>  显示文件的扩展名，然后再修改。<br>\n<a href=\"https://imgtu.com/i/WE3H8x\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WE3H8x.md.png\" alt=\"WE3H8x.md.png\"></a></p>\n</blockquote>\n<blockquote>\n<p>&lt;2&gt; 编码问题。<br>\n<a href=\"https://imgtu.com/i/WE8yee\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WE8yee.png\" alt=\"WE8yee.png\"></a><br>\n<font color=\"green\">解决办法：</font>一个方法是，可以将文件另存为，同时设置编码格式为 utf-8。<br>\n另一个方法是，在编译时指定编码格式  <code>javac HelloWorld -encodeing utf-8</code> 。<br>\n<a href=\"https://imgtu.com/i/WEGltA\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WEGltA.md.png\" alt=\"WEGltA.md.png\"></a></p>\n</blockquote>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2021/07/15/computer-science/java/Java-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/",
            "url": "http://example.com/2021/07/15/computer-science/java/Java-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/",
            "title": "",
            "date_published": "2021-07-15T06:35:33.865Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://example.com/2020/10/05/computer-science/r/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A4%84%E7%90%86/",
            "url": "http://example.com/2020/10/05/computer-science/r/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%A4%84%E7%90%86/",
            "title": "",
            "date_published": "2020-10-05T06:39:17.520Z",
            "content_html": "<h1 id=\"字符串的处理\"><a class=\"markdownIt-Anchor\" href=\"#字符串的处理\">#</a> 字符串的处理</h1>\n<p><strong>1、nchar () 计算字符串长度，即计算字符串中的字符个数；</strong></p>\n<p><strong>2、length () 计算向量的长度。</strong></p>\n<p><strong>3、正则表达式</strong></p>\n<p>正则表达式由两种字符类型组成：<strong>普通字符和元字符。</strong></p>\n<ul>\n<li>\n<p>普通字符：所有的英文字母和数字。可以匹配自己。</p>\n</li>\n<li>\n<p>元字符：</p>\n<p><code>.</code>   :  匹配除了换行符以外的任意单个字符。</p>\n<p><code>[]</code>  : 选择方括号中的任意一个字符。</p>\n<p><code>-</code>  : 表示值域。</p>\n<p><code>()</code>  : 将同一模式放在一起。</p>\n<p><code>&#123;&#125;</code>  : 表示放在其前面的字符或表达式的重复次数。</p>\n<p>​        <code>\t&#123;n&#125;</code>  表示匹配前面的字符 n 次。</p>\n<p>​        <code>&#123;n,&#125;</code>  表示匹配前面的字符至少 n 次。</p>\n<p>​        <code>&#123;n,m&#125;</code>  表示匹配前面的字符在 n 次到 m 次之间。</p>\n<p><code>^ </code>  : 脱字符。定位表达式。</p>\n<p>​       如果放在表达式的开始处，就表示匹配字符串的开始位置。</p>\n<p>​\t\t如果放在 <code>[]</code>  内部的开始处，就表示，非方括号中的任意一个字符。</p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2020/04/12/photography/%E6%9C%9D%E4%B8%8E%E5%A4%95/",
            "url": "http://example.com/2020/04/12/photography/%E6%9C%9D%E4%B8%8E%E5%A4%95/",
            "title": "朝与夕",
            "date_published": "2020-04-12T12:46:25.000Z",
            "content_html": "<p><a href=\"https://imgtu.com/i/WFzwIx\"><img data-src=\"https://z3.ax1x.com/2021/07/13/WFzwIx.jpg\" alt=\"WFzwIx.jpg\"></a></p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2020/04/12/computer-science/r/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%AC%AC%E4%B8%80%E8%AF%BE/",
            "url": "http://example.com/2020/04/12/computer-science/r/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%AC%AC%E4%B8%80%E8%AF%BE/",
            "title": "R语言：第一课",
            "date_published": "2020-04-12T12:46:25.000Z",
            "content_html": "<h1 id=\"r语言第一课\"><a class=\"markdownIt-Anchor\" href=\"#r语言第一课\">#</a> R 语言：第一课</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucnVub29iLmNvbS9yL3Itc2V0dXAuaHRtbA==\">R 语言的环境安装</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC8xYTBmMjUwODZlOGI=\">RStudio 安装</span></p>\n<h3 id=\"1-从帮助文档中获取信息\"><a class=\"markdownIt-Anchor\" href=\"#1-从帮助文档中获取信息\">#</a> <strong>1、从帮助文档中获取信息</strong></h3>\n<p>常用帮助函数包括：</p>\n<p><u>help.start()</u>: 该命令会打开浏览器的窗口，显示帮助文档的首页。</p>\n<p><u>help()、args()、example()</u>: 了解更多关于某个函数的信息、调用简介和操作实例。help (函数名)，等价于 <u>？函数名</u>    。</p>\n<p><u>help.search()</u>: 查看是否有实现某种功能的函数。等价于<u>?? 加函数名</u>。</p>\n<p><u>help(package=&quot;…&quot;)</u>: 查阅特定包的信息。</p>\n<p><u>RSiteSearch()</u>: 可以使用关键词来搜索在线的帮助文档和邮件列表存档。</p>\n<p><u>apropos()</u>: 以局部匹配的方式进行关键词搜索，即返回名称中含有某个关键词的所有对象。</p>\n<h3 id=\"2-基础包和扩展包\"><a class=\"markdownIt-Anchor\" href=\"#2-基础包和扩展包\">#</a> <strong>2、基础包和扩展包</strong></h3>\n<p>1）、随着 R 语言一起安装的、用于执行各种统计或制图等基本功能的程式包，称为基础包（标准包）。</p>\n<p>主要的基础包：</p>\n<table>\n<thead>\n<tr>\n<th>基础包</th>\n<th>功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>base</td>\n<td>提供各类基础函数</td>\n</tr>\n<tr>\n<td>datasets</td>\n<td>提供各种示例数据集</td>\n</tr>\n<tr>\n<td>graphics</td>\n<td>提供各种基础绘图函数</td>\n</tr>\n<tr>\n<td>grDevices</td>\n<td>提供基础或者 grid 图形设备</td>\n</tr>\n<tr>\n<td>methods</td>\n<td>用于 R 对象或者编程工具的方法和类的定义</td>\n</tr>\n<tr>\n<td>utils</td>\n<td>提供 R 语言工具函数</td>\n</tr>\n<tr>\n<td>stats</td>\n<td>提供常用统计函数</td>\n</tr>\n</tbody>\n</table>\n<p>2）、除了基础包以外，基于 R 语言的来源特性，各个领域的专家和使用者编写了大量扩展性的软件包，简称为扩展包（捐献包）。</p>\n<h3 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\">#</a> <strong>常用命令</strong></h3>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">命令</th>\n<th style=\"text-align:left\">功能</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">setwd()</td>\n<td style=\"text-align:left\">查看当前目录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setwd()</td>\n<td style=\"text-align:left\">设置目录</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">install.package()</td>\n<td style=\"text-align:left\">安装包</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">library () 或 require ()</td>\n<td style=\"text-align:left\">加载包</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">.packages(all.available=TRUE)</td>\n<td style=\"text-align:left\">查看本地安装的所有包</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">demo(package=.packages(all.available=TRUE))</td>\n<td style=\"text-align:left\">查看所有包中可供演示的部分</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">q()</td>\n<td style=\"text-align:left\">退出 R 语言</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"3-变量\"><a class=\"markdownIt-Anchor\" href=\"#3-变量\">#</a> <strong>3、变量</strong></h3>\n<p>R 语言的变量名称由字母、数字以及 ** <code>.</code> ** 或者下划线 <code>_</code> 组成。</p>\n<p>变量名称以字母或者 <code>.</code>  开头。  <code>.</code>  号开头后面不能跟着数字。</p>\n<p>R 语言中区分大小写，A 和 a 是完全不同的变量。</p>\n<h3 id=\"4-注释\"><a class=\"markdownIt-Anchor\" href=\"#4-注释\">#</a> <strong>4、注释</strong></h3>\n<p>使用 “ <code>#</code> ” 添加必要的注释。</p>\n<h3 id=\"5-赋值\"><a class=\"markdownIt-Anchor\" href=\"#5-赋值\">#</a> <strong>5、赋值</strong></h3>\n<p>使用恰当的赋值符号。</p>\n<p><code>&lt;-</code> 、 <code>-&gt;</code>  都可以进行赋值，显示的操作是一样的，箭头指向是被赋值的对象。</p>\n<p><code>=</code>  也可以赋值，但不建议使用。</p>\n<p><code>assign(&quot;x&quot;,&quot;value&quot;)</code>  函数也可以进行赋值。</p>\n",
            "tags": []
        },
        {
            "id": "http://example.com/2020/04/12/computer-science/r/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/",
            "url": "http://example.com/2020/04/12/computer-science/r/%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C/",
            "title": "数据操作",
            "date_published": "2020-04-12T12:46:25.000Z",
            "content_html": "<h1 id=\"数据操作\"><a class=\"markdownIt-Anchor\" href=\"#数据操作\">#</a> 数据操作</h1>\n<blockquote>\n<p><strong>1、对象</strong></p>\n<p><strong>2、属性、类和模式</strong></p>\n<p><strong>3、数据结构</strong></p>\n<ul>\n<li>\n<p>向量</p>\n</li>\n<li>\n<p>矩阵</p>\n</li>\n<li>\n<p>数组</p>\n</li>\n<li>\n<p>数据框</p>\n</li>\n<li>\n<p>因子</p>\n</li>\n<li>\n<p>列表</p>\n</li>\n<li>\n<p>时间序列</p>\n</li>\n</ul>\n<p><strong>4、数据载入</strong></p>\n<ul>\n<li>\n<p>R 语言中的内部数据测试集</p>\n</li>\n<li>\n<p>从外部文件读取数据</p>\n</li>\n</ul>\n<blockquote>\n<p>函数  <code>read.csv()</code></p>\n<p>函数 <code>read.table()</code></p>\n<p>使用扩展包 <code>gdata中</code> 的 <code>read.xls()</code>  函数</p>\n<p>使用扩展 <code>RODBC</code>  中的相关函数来读取数据</p>\n<p>使用扩展包 foreign 载入其他软件录入的数据</p>\n</blockquote>\n<p><strong>5、数据输出</strong></p>\n<ul>\n<li>\n<p>使用函数 <code>write.table()</code>  导出数据</p>\n</li>\n<li>\n<p>使用函数 sink () 输出信息</p>\n</li>\n</ul>\n<p><strong>6、数据管理</strong></p>\n<ul>\n<li>\n<p>通过下标访问数据</p>\n<blockquote>\n<p>访问向量中的元素</p>\n<p>访问矩阵的子集</p>\n<p>访问数组的子集</p>\n<p>访问数据框的子集</p>\n<p>访问列表的子集</p>\n</blockquote>\n</li>\n<li>\n<p>用 subset () 函数提子集</p>\n</li>\n<li>\n<p>数据排序</p>\n<blockquote>\n<p>使用 sort () 函数对向量进行排序</p>\n<p>使用 order () 和 arrange () 函数对数据框进行排序</p>\n<p>使用 rank () 函数进行排序</p>\n</blockquote>\n</li>\n<li>\n<p>数据合并</p>\n</li>\n<li>\n<p>扩展包 <code>reshape2</code>  重塑数据</p>\n</li>\n<li>\n<p>日期数据的处理</p>\n</li>\n</ul>\n<p><strong>7、常用命令</strong></p>\n</blockquote>\n<h2 id=\"一-对象\"><a class=\"markdownIt-Anchor\" href=\"#一-对象\">#</a> <strong>一、对象</strong></h2>\n<p>R 语言是一种<u><strong>基于对象</strong></u>的语言。</p>\n<h2 id=\"二-属性-类-模式-基本类型\"><a class=\"markdownIt-Anchor\" href=\"#二-属性-类-模式-基本类型\">#</a> <strong>二、属性、类、模式、基本类型</strong></h2>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; attributes(grade)</span><br><span class=\"line\">$levels</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;F&quot;</span> <span class=\"string\">&quot;D&quot;</span> <span class=\"string\">&quot;C&quot;</span> <span class=\"string\">&quot;B&quot;</span> <span class=\"string\">&quot;A&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">$class</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;ordered&quot;</span> <span class=\"string\">&quot;factor&quot;</span> </span><br><span class=\"line\"></span><br><span class=\"line\">&gt; storage.mode(grade)</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">&gt; class(grade)</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;ordered&quot;</span> <span class=\"string\">&quot;factor&quot;</span> </span><br><span class=\"line\">&gt; mode(grade)</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;numeric&quot;</span></span><br><span class=\"line\">&gt; typeof(grade)</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;integer&quot;</span></span><br></pre></td></tr></table></figure>\n<p><code>attributes()</code>  查看对象的属性。</p>\n<p><code>class()</code>  查看对象的类。</p>\n<p><code>mode()</code>  查看对象的存储类型。</p>\n<p><code>storage.mode()</code>  查询的是数据实际在内存中存储所用的方式。</p>\n<p><code>typeof()</code>  的输出结果和 <code>storage.mode()</code>  相同。</p>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th><code>class()</code></th>\n<th><code>MODE()</code></th>\n<th><code>TYPEOF()</code></th>\n<th><code>storage.mode()</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>逻辑型</td>\n<td>logical</td>\n<td>logical</td>\n<td>logical</td>\n<td>logical</td>\n</tr>\n<tr>\n<td>整数型</td>\n<td>numeric</td>\n<td>numeric</td>\n<td>integer</td>\n<td>integer</td>\n</tr>\n<tr>\n<td>实数型</td>\n<td>numeric</td>\n<td>numeric</td>\n<td>double</td>\n<td>double</td>\n</tr>\n<tr>\n<td>复数型</td>\n<td>complex</td>\n<td>complex</td>\n<td>complex</td>\n<td>complex</td>\n</tr>\n<tr>\n<td>字符型</td>\n<td>character</td>\n<td>character</td>\n<td>character</td>\n<td>character</td>\n</tr>\n<tr>\n<td>字节型</td>\n<td>raw</td>\n<td>raw</td>\n<td>raw</td>\n<td>raw</td>\n</tr>\n<tr>\n<td>列表</td>\n<td>list</td>\n<td>list</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>数据框</td>\n<td><code>data.frame</code></td>\n<td>list</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>矩阵</td>\n<td>matrix</td>\n<td>—</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>数组</td>\n<td>array</td>\n<td>—</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>因子</td>\n<td>factor</td>\n<td>—</td>\n<td>—</td>\n<td>—</td>\n</tr>\n<tr>\n<td>日期</td>\n<td>Date</td>\n<td>—</td>\n<td>—</td>\n<td>—</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>当 x 是单个值，或者向量的时候，</p>\n<p>返回的结果 class 和 mode 一致，如 numeric，character</p>\n</li>\n<li>\n<p>当 x 是其他情况（矩阵，数组，日期，因子），</p>\n<p>class 返回（matrix，array，Date，factor）</p>\n<p>mode 返回（x 中元素的类型 —— 在内存中的存储类型）</p>\n</li>\n<li>\n<p>当 x 是数据框的时候，</p>\n<p>class 返回 <code>data.frame</code> ，</p>\n<p>mode 返回 list。</p>\n</li>\n<li>\n<p>当 x 是列表的时候，</p>\n<p>class 和 mode 都返回 list。</p>\n</li>\n<li>\n<p>为何数据框和列表不再适用于第二条 mode 返回 x 中元素的类型了呢？</p>\n<ul>\n<li>\n<p>因为数据框其实是列表的一种特殊情况。</p>\n</li>\n<li>\n<p>list 和 <code>data.frame</code>  中的数据类型可以不一致，所以没法返回一个类型代表多种元素类型。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"三-数据结构\"><a class=\"markdownIt-Anchor\" href=\"#三-数据结构\">#</a> <strong>三、数据结构</strong></h2>\n<ul>\n<li>\n<h3 id=\"向量\"><a class=\"markdownIt-Anchor\" href=\"#向量\">#</a> <strong>向量</strong></h3>\n</li>\n</ul>\n<p>（1）向量是 R 语言中最基本的数据结构。</p>\n<p>（2）使用赋值符号 “ <code>&lt;-</code> ” 和组合函数 <code>c()</code> , 就能创建各种类型的向量。</p>\n<p>（3）向量必须由<strong>类型相同</strong>的元素组成。</p>\n<p>（4） <code>length()</code>  函数返回向量的长度。长度为 1 的向量为标量，是特殊的向量。</p>\n<p>（5） <code>attributes()</code>  函数可以查看向量的属性，诸如类、名称、维度等信息。</p>\n<p>（6） <code>names()</code>  函数用来给向量的元素命名。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; a&lt;-c(<span class=\"number\">88</span>,<span class=\"number\">77</span>,<span class=\"number\">66</span>)</span><br><span class=\"line\">&gt; names(a)&lt;-c(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>)</span><br><span class=\"line\">&gt; attributes(a)</span><br><span class=\"line\">$names</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;A&quot;</span> <span class=\"string\">&quot;B&quot;</span> <span class=\"string\">&quot;C&quot;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<h3 id=\"矩阵\"><a class=\"markdownIt-Anchor\" href=\"#矩阵\">#</a> <strong>矩阵</strong></h3>\n</li>\n</ul>\n<p>（1）矩阵，是用<strong>行和列</strong>对元素进行定位的二维数据结构。</p>\n<p>（2）基本用法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">matrix(data = <span class=\"literal\">NA</span>, nrow = <span class=\"number\">1</span>, ncol = <span class=\"number\">1</span>, byrow = <span class=\"literal\">FALSE</span>,</span><br><span class=\"line\">       dimnames = <span class=\"literal\">NULL</span>)</span><br></pre></td></tr></table></figure>\n<p><code>\t\t\t\t\tdata</code> : 可选的数据向量 (包括列表或表达式向量)。</p>\n<p><code>\tnrow</code> : 所要创建的矩阵的行数。</p>\n<p><code>\tnlol</code> : 所要创建的矩阵的列数。</p>\n<p><code>\tbyrow:</code>  是否按照行来将数据填充进入矩阵。</p>\n<p><code>\tdimnamens</code> : 矩阵维度的名称。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; m&lt;-matrix(c(<span class=\"number\">1</span>:<span class=\"number\">6</span>),nrow=<span class=\"number\">2</span>,ncol = <span class=\"number\">3</span>,byrow = <span class=\"literal\">FALSE</span>,dimnames = <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">&gt; m</span><br><span class=\"line\">     [,<span class=\"number\">1</span>] [,<span class=\"number\">2</span>] [,<span class=\"number\">3</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>,]    <span class=\"number\">1</span>    <span class=\"number\">3</span>    <span class=\"number\">5</span></span><br><span class=\"line\">[<span class=\"number\">2</span>,]    <span class=\"number\">2</span>    <span class=\"number\">4</span>    <span class=\"number\">6</span></span><br></pre></td></tr></table></figure>\n<p>（3）矩阵必须由<strong>类型相同</strong>的元素组成。</p>\n<p>（4）元素的标记和访问：矩阵生成后， <code>[行号，列号]</code>  用来显示元素的位置。</p>\n<ul>\n<li>\n<p>选取矩阵的某一个元素；</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; m[<span class=\"number\">2</span>,<span class=\"number\">3</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">6</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>选取矩阵某一行所有列的元素；</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; m[<span class=\"number\">1</span>,]</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">1</span> <span class=\"number\">3</span> <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>选取矩阵多行多列的元素；eg:  <code>m[c(1,2),c(1,3)]</code></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; m[c(<span class=\"number\">1</span>,<span class=\"number\">2</span>),c(<span class=\"number\">1</span>,<span class=\"number\">3</span>)]</span><br><span class=\"line\">     [,<span class=\"number\">1</span>] [,<span class=\"number\">2</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>,]    <span class=\"number\">1</span>    <span class=\"number\">5</span></span><br><span class=\"line\">[<span class=\"number\">2</span>,]    <span class=\"number\">2</span>    <span class=\"number\">6</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>剔除矩阵某行和某列，保留剩下的元素； <code>m[-1,]、m[-1,-3]</code></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; m[-<span class=\"number\">1</span>,-<span class=\"number\">3</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"number\">2</span> <span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>（5）用向量生成矩阵：结合函数 <code>cbind()</code>  或 <code>rbind()</code> 。</p>\n<ul>\n<li>\n<p><code>cbind()</code> : 将所需要的变量以列的方式组合。</p>\n</li>\n<li>\n<p><code>rbind()</code> : 将所需要的变量以行的方式组合。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; o&lt;-c(<span class=\"string\">&#x27;H&#x27;</span>,<span class=\"string\">&#x27;I&#x27;</span>,<span class=\"string\">&#x27;J&#x27;</span>)</span><br><span class=\"line\">&gt; p&lt;-c(<span class=\"string\">&#x27;K&#x27;</span>,<span class=\"string\">&#x27;L&#x27;</span>,<span class=\"string\">&#x27;M&#x27;</span>)</span><br><span class=\"line\">&gt; q&lt;-c(<span class=\"string\">&#x27;N&#x27;</span>,<span class=\"string\">&#x27;P&#x27;</span>,<span class=\"string\">&#x27;Q&#x27;</span>)</span><br><span class=\"line\">&gt; opq&lt;-cbind(o,p,q)</span><br><span class=\"line\">&gt; qpo&lt;-rbind(o,p,q)</span><br><span class=\"line\">&gt; opq</span><br><span class=\"line\">     o   p   q  </span><br><span class=\"line\">[<span class=\"number\">1</span>,] <span class=\"string\">&quot;H&quot;</span> <span class=\"string\">&quot;K&quot;</span> <span class=\"string\">&quot;N&quot;</span></span><br><span class=\"line\">[<span class=\"number\">2</span>,] <span class=\"string\">&quot;I&quot;</span> <span class=\"string\">&quot;L&quot;</span> <span class=\"string\">&quot;P&quot;</span></span><br><span class=\"line\">[<span class=\"number\">3</span>,] <span class=\"string\">&quot;J&quot;</span> <span class=\"string\">&quot;M&quot;</span> <span class=\"string\">&quot;Q&quot;</span></span><br><span class=\"line\">&gt; qpo</span><br><span class=\"line\">  [,<span class=\"number\">1</span>] [,<span class=\"number\">2</span>] [,<span class=\"number\">3</span>]</span><br><span class=\"line\">o <span class=\"string\">&quot;H&quot;</span>  <span class=\"string\">&quot;I&quot;</span>  <span class=\"string\">&quot;J&quot;</span> </span><br><span class=\"line\">p <span class=\"string\">&quot;K&quot;</span>  <span class=\"string\">&quot;L&quot;</span>  <span class=\"string\">&quot;M&quot;</span> </span><br><span class=\"line\">q <span class=\"string\">&quot;N&quot;</span>  <span class=\"string\">&quot;P&quot;</span>  <span class=\"string\">&quot;Q&quot;</span> </span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>（6）转置函数 <code>t()</code> :</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; identical(opq,t(qpo))</span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"literal\">TRUE</span></span><br></pre></td></tr></table></figure>\n<p>（7）行和列的命名： <code>rownames()</code>  和  <code>colnames()</code></p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; rownames(opq)&lt;-c(<span class=\"string\">&#x27;one&#x27;</span>,<span class=\"string\">&#x27;two&#x27;</span>,<span class=\"string\">&#x27;three&#x27;</span>)</span><br><span class=\"line\">&gt; colnames(opq)&lt;-c(<span class=\"string\">&#x27;A&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>)</span><br><span class=\"line\">&gt; opq[<span class=\"string\">&#x27;one&#x27;</span>,<span class=\"string\">&#x27;B&#x27;</span>]  <span class=\"comment\">#还可以通过列名和行名访问元素的位置。</span></span><br><span class=\"line\">[<span class=\"number\">1</span>] <span class=\"string\">&quot;K&quot;</span></span><br><span class=\"line\">&gt; opq</span><br><span class=\"line\">      A   B   C  </span><br><span class=\"line\">one   <span class=\"string\">&quot;H&quot;</span> <span class=\"string\">&quot;K&quot;</span> <span class=\"string\">&quot;N&quot;</span></span><br><span class=\"line\">two   <span class=\"string\">&quot;I&quot;</span> <span class=\"string\">&quot;L&quot;</span> <span class=\"string\">&quot;P&quot;</span></span><br><span class=\"line\">three <span class=\"string\">&quot;J&quot;</span> <span class=\"string\">&quot;M&quot;</span> <span class=\"string\">&quot;Q&quot;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<h3 id=\"数组\"><a class=\"markdownIt-Anchor\" href=\"#数组\">#</a> <strong>数组</strong></h3>\n<p>（1）如果说矩阵是向量的推广，那么数组就是矩阵的推广。数组和矩阵\t\t   作为数据结构的主要特征就是具有维度。数组和矩阵就是添加了维    \t\t   度属性的向量。</p>\n<p>（2）基本用法：</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">array(data = <span class=\"literal\">NA</span>, dim = length(data), dimnames = <span class=\"literal\">NULL</span>)</span><br></pre></td></tr></table></figure>\n<p><code>\t\t\t\t\tdata</code> : 数组中的数据。</p>\n<p><code>\tdim</code> : 所要创建的数组的维度。</p>\n<p>​\t\ta. 数组中用来确定元素位置下标的个数，即为维度。</p>\n<p>​\t\tb.  <code>dim()</code>  函数返回各个维度的最大值。</p>\n<p>​\t    c. 根据 “矩阵是赋予了维度属性的向量”，</p>\n<p>​\t\t\t可应用于将向量转换成数组。</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; d&lt;-c(<span class=\"number\">1</span>:<span class=\"number\">14</span>)</span><br><span class=\"line\">&gt; dim(d)&lt;-c(<span class=\"number\">2</span>,<span class=\"number\">7</span>)</span><br><span class=\"line\">&gt; d</span><br><span class=\"line\">     [,<span class=\"number\">1</span>] [,<span class=\"number\">2</span>] [,<span class=\"number\">3</span>] [,<span class=\"number\">4</span>] [,<span class=\"number\">5</span>] [,<span class=\"number\">6</span>] [,<span class=\"number\">7</span>]</span><br><span class=\"line\">[<span class=\"number\">1</span>,]    <span class=\"number\">1</span>    <span class=\"number\">3</span>    <span class=\"number\">5</span>    <span class=\"number\">7</span>    <span class=\"number\">9</span>   <span class=\"number\">11</span>   <span class=\"number\">13</span></span><br><span class=\"line\">[<span class=\"number\">2</span>,]    <span class=\"number\">2</span>    <span class=\"number\">4</span>    <span class=\"number\">6</span>    <span class=\"number\">8</span>   <span class=\"number\">10</span>   <span class=\"number\">12</span>   <span class=\"number\">14</span></span><br><span class=\"line\">&gt; </span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>\n<p>对 <code>dim = length(data)</code>  的理解:</p>\n<figure class=\"highlight r\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; dim1&lt;-c(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>)</span><br><span class=\"line\">&gt; dim2&lt;-c(<span class=\"string\">&#x27;v&#x27;</span>,<span class=\"string\">&#x27;w&#x27;</span>,<span class=\"string\">&#x27;x&#x27;</span>)</span><br><span class=\"line\">&gt; dim3&lt;-c(<span class=\"string\">&#x27;o&#x27;</span>,<span class=\"string\">&#x27;p&#x27;</span>,<span class=\"string\">&#x27;q&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"comment\">#给各个维度命名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># data=c(1:24),dim=c(4,3,2)</span></span><br><span class=\"line\">&gt; arr&lt;-array(data = c(<span class=\"number\">1</span>:<span class=\"number\">24</span>),dim=c(<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>),dimnames = list(dim3,dim2,dim1))</span><br><span class=\"line\">&gt; arr</span><br><span class=\"line\">, , a</span><br><span class=\"line\"></span><br><span class=\"line\">  v w  x</span><br><span class=\"line\">o <span class=\"number\">1</span> <span class=\"number\">5</span>  <span class=\"number\">9</span></span><br><span class=\"line\">p <span class=\"number\">2</span> <span class=\"number\">6</span> <span class=\"number\">10</span></span><br><span class=\"line\">q <span class=\"number\">3</span> <span class=\"number\">7</span> <span class=\"number\">11</span></span><br><span class=\"line\">r <span class=\"number\">4</span> <span class=\"number\">8</span> <span class=\"number\">12</span></span><br><span class=\"line\"></span><br><span class=\"line\">, , b</span><br><span class=\"line\"></span><br><span class=\"line\">   v  w  x</span><br><span class=\"line\">o <span class=\"number\">13</span> <span class=\"number\">17</span> <span class=\"number\">21</span></span><br><span class=\"line\">p <span class=\"number\">14</span> <span class=\"number\">18</span> <span class=\"number\">22</span></span><br><span class=\"line\">q <span class=\"number\">15</span> <span class=\"number\">19</span> <span class=\"number\">23</span></span><br><span class=\"line\">r <span class=\"number\">16</span> <span class=\"number\">20</span> <span class=\"number\">24</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 循环原则data=c(1:10),dim=c(4,3,2)</span></span><br><span class=\"line\">&gt; arr&lt;-array(data = c(<span class=\"number\">1</span>:<span class=\"number\">10</span>),dim=c(<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>),dimnames = list(dim3,dim2,dim1))</span><br><span class=\"line\">&gt; arr</span><br><span class=\"line\">, , a</span><br><span class=\"line\"></span><br><span class=\"line\">  v w  x</span><br><span class=\"line\">o <span class=\"number\">1</span> <span class=\"number\">5</span>  <span class=\"number\">9</span></span><br><span class=\"line\">p <span class=\"number\">2</span> <span class=\"number\">6</span> <span class=\"number\">10</span></span><br><span class=\"line\">q <span class=\"number\">3</span> <span class=\"number\">7</span>  <span class=\"number\">1</span></span><br><span class=\"line\">r <span class=\"number\">4</span> <span class=\"number\">8</span>  <span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">, , b</span><br><span class=\"line\"></span><br><span class=\"line\">  v  w x</span><br><span class=\"line\">o <span class=\"number\">3</span>  <span class=\"number\">7</span> <span class=\"number\">1</span></span><br><span class=\"line\">p <span class=\"number\">4</span>  <span class=\"number\">8</span> <span class=\"number\">2</span></span><br><span class=\"line\">q <span class=\"number\">5</span>  <span class=\"number\">9</span> <span class=\"number\">3</span></span><br><span class=\"line\">r <span class=\"number\">6</span> <span class=\"number\">10</span> <span class=\"number\">4</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><code>\tdimnames</code> : 对数组的各个维度命名。</p>\n<p>（3）数组中的所有元素必须是<strong>同一类型</strong>的数据。</p>\n<ul>\n<li>\n<h3 id=\"数据框\"><a class=\"markdownIt-Anchor\" href=\"#数据框\">#</a> <strong>数据框</strong></h3>\n</li>\n<li>\n<h3 id=\"因子\"><a class=\"markdownIt-Anchor\" href=\"#因子\">#</a> <strong>因子</strong></h3>\n</li>\n<li>\n<h3 id=\"列表\"><a class=\"markdownIt-Anchor\" href=\"#列表\">#</a> ** 列表 **</h3>\n</li>\n<li>\n<h3 id=\"时间序列\"><a class=\"markdownIt-Anchor\" href=\"#时间序列\">#</a> <strong>时间序列</strong></h3>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        }
    ]
}